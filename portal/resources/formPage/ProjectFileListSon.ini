{
	"action":[
		{
			"code":"Export",
			"container":"GridPanel",
			"name":"导出",
			"property":[
				
			],
			"sort":0
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":1
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"borrowNumbers",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"纸质底稿借阅盒数",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":20
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"borrowNumbers",
					"sort":10
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"paperDraft",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"纸质底稿",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"80"
						}
					],
					"select":"PaperDraft",
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"electronicDraft",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"电子底稿",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"80"
						}
					],
					"select":"ElectronicDraft",
					"sort":8
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"manuScirptItemArchiveId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"底稿归档Id",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":20
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(ManuScirptItemArchive|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"ManuScirptItemArchive"
						}
					],
					"select":"ManuScirptItemArchiveId[Entity(ManuScirptItemArchive|Code(Code)#Name(Name))]",
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"borrowMasterId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"BorrowMasterId",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(BorrowMaster|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"BorrowMaster"
						}
					],
					"select":"BorrowMasterId[Entity(BorrowMaster|Code(Code)#Name(Name))]",
					"sort":7
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"950"
						},
						{
							"isHide":false,
							"name":"align",
							"value":"left"
						},
						{
							"isHide":false,
							"name":"halign",
							"value":"center"
						}
					],
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"mainBorrowNumbers",
					"control":"Number",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"纸质底稿已借出盒数",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"180"
						}
					],
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"boxNumber",
					"control":"Number",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"纸质底稿总盒数",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"140"
						}
					],
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"archiveCode",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"档案号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						}
					],
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"uuid",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"Uuid",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"borrowGrandsons",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"孙表Json",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"borrowData",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"纸质底稿借阅总盒数",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"SelectAPaperManuscript"
						},
						{
							"isHide":false,
							"name":"IsFormatter",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"210"
						}
					],
					"sort":11
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"projectFileListSon",
	"control":"EditorGridPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log("BeforeLoad");
    var me = this;
    var form = me.Top("[controltype='FormPanel']");
    var project = form.DownForCode("ProjectId");
    var params = {}
    if (project) {
        params = {param: 'projectId', value: project.GetValue()};
    }

    var id = form.DownForCode("id")
    if (Framework.IsNotNullOrEmpty(id) && Framework.IsNotNullOrEmpty(id.GetValue())) {
        params = {param: 'borrowMasterId', value: id.GetValue()};
    }

    me.params = JSON.stringify(params);
};

this.LoadComplete = function (res) {
    //Load请求完成后走的方法
    console.log("LoadComplete 1");
    var me = this;
    // 特殊处理，在页面加载完成后就加载到需要保存的数据中
    if (Framework.IsNullOrEmpty(res)) return;
    var form = me.GetFormPage();
    var isClose = false;
    if (form && form.UpWindows.IsRefreshOpener) isClose = true;
    Framework.ForEach(res, function (item) {
        //只有首次新增的时候才走
        if (Framework.IsNullOrEmpty(item.timestamp) && !isClose)
            me.PushRow(item);
    });
}

this.GridCallback = function (rows) {
    //弹出页面确定回调事件
    console.log("GridCallback 2");
    var me = this;
    var select = me.selected;

    if (select) {
        var sons = [];
        if (Framework.IsNotNullOrEmpty(select.borrowGrandsons))
            sons = select.borrowGrandsons.ParseJson();

        //rows 中在sons 中已经存在的 删除， 在rows中不存在的，sons中存在的说明是删除的，此循环后 就剩下新增的数据
        Framework.ForEach(sons, function (item) {
            var first = rows.Find("boxAndNumberBookId", item.boxAndNumberBookId);
            if (first) {//找到  在rows(当前选中的数据) 中移除
                item.StateType = "";
                rows.Remove("boxAndNumberBookId", first.boxAndNumberBookId);
            } else {//没找到 说明数据已经被删除
                if (item.timestamp) {
                    item.StateType = "Deleted";
                } else {
                    sons.Remove("boxAndNumberBookId", item.boxAndNumberBookId);
                }

            }
        });


        Framework.ForEach(rows, function (item) {
            var first = sons.Find("boxAndNumberBookId", item.boxAndNumberBookId);
            if (!first) {
                var dto = {}
                dto.id = null;
                dto.timestamp = null;
                dto.boxAndNumberBookId = item.boxAndNumberBookId;
                dto.StateType = "Added";
                sons.push(dto);
            }
        });
        if (sons.length > 0) {
            select.borrowGrandsons = sons.ToJson();
        }
    }
};


//重写GridCombobox方法，borrowData:为列名
this.borrowDataRewriteValue = function (value) {
    /☆
    var me = this;
    if (Framework.IsNullOrEmpty(value)) return "";

    var grands = me.selected.borrowGrandsons;
    var len = 0;
    if (Framework.IsNotNullOrEmpty(grands)) {
        var list = grands.ParseJson();
        var sum = list.filter(function (item) {
            return item.StateType != "Deleted";
        });
        len = sum.length;
    }
    var values = value.filter(function (item) {
        return item.StateType != "Deleted";
    });
☆/
    console.log("borrowDataRewriteValue 2");
    var len = 0;
    len += value.length;

    return {id: len, name: "已选择盒数:" + len};
};

this.OnEditCell = function (index, field, row) {
    if (field == "projectName" || field == "archiveCode" || field == "boxNumber" || field == "mainBorrowNumbers")
        return false;


    if (field == "borrowData" && (!Framework.Tolerant(row.paperDraft) || row.paperDraft == "否"))
        return false;
};

//change事件 paperDraft为列名
this.paperDraftChange = function (btn, index, field, row) {
    console.log("PaperDraftChange");
    var me = this;
    if (btn.checked) return;

    if (Framework.IsNotNullOrEmpty(row) && Framework.IsNotNullOrEmpty(row.borrowGrandsons)) {
        var grands = row.borrowGrandsons.ParseJson();
        Framework.ForEach(grands, function (item) {
            if (item.timestamp)
                item.StateType = "Deleted";
            else
                grands.Remove("boxAndNumberBookId", item.boxAndNumberBookId);
        });

        if (grands.length > 0)
            row.borrowGrandsons = grands.ToJson();
        else
            row.borrowGrandsons = null;
        row.paperDraft = btn.checked;
        row.borrowData = null;
        me.PushRow(row);
    }
};
",
	"name":"项目列表",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"projectFileList"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"项目列表"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":342950
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log("BeforeLoad");
    var me = this;
    var form = me.Top("[controltype='FormPanel']");
    var project = form.DownForCode("ProjectId");
    var params = {}
    if (project) {
        params = {param: 'projectId', value: project.GetValue()};
    }

    var id = form.DownForCode("id")
    if (Framework.IsNotNullOrEmpty(id) && Framework.IsNotNullOrEmpty(id.GetValue())) {
        params = {param: 'borrowMasterId', value: id.GetValue()};
    }

    me.params = JSON.stringify(params);
};

this.LoadComplete = function (res) {
    //Load请求完成后走的方法
    console.log("LoadComplete 1");
    var me = this;
    // 特殊处理，在页面加载完成后就加载到需要保存的数据中
    if (Framework.IsNullOrEmpty(res)) return;
    var form = me.GetFormPage();
    var isClose = false;
    if (form && form.UpWindows.IsRefreshOpener) isClose = true;
    Framework.ForEach(res, function (item) {
        //只有首次新增的时候才走
        if (Framework.IsNullOrEmpty(item.timestamp) && !isClose)
            me.PushRow(item);
    });
}

this.GridCallback = function (rows) {
    //弹出页面确定回调事件
    console.log("GridCallback 2");
    var me = this;
    var select = me.selected;

    if (select) {
        var sons = [];
        if (Framework.IsNotNullOrEmpty(select.borrowGrandsons))
            sons = select.borrowGrandsons.ParseJson();

        //rows 中在sons 中已经存在的 删除， 在rows中不存在的，sons中存在的说明是删除的，此循环后 就剩下新增的数据
        Framework.ForEach(sons, function (item) {
            var first = rows.Find("boxAndNumberBookId", item.boxAndNumberBookId);
            if (first) {//找到  在rows(当前选中的数据) 中移除
                item.StateType = "";
                rows.Remove("boxAndNumberBookId", first.boxAndNumberBookId);
            } else {//没找到 说明数据已经被删除
                if (item.timestamp) {
                    item.StateType = "Deleted";
                } else {
                    sons.Remove("boxAndNumberBookId", item.boxAndNumberBookId);
                }

            }
        });


        Framework.ForEach(rows, function (item) {
            var first = sons.Find("boxAndNumberBookId", item.boxAndNumberBookId);
            if (!first) {
                var dto = {}
                dto.id = null;
                dto.timestamp = null;
                dto.boxAndNumberBookId = item.boxAndNumberBookId;
                dto.StateType = "Added";
                sons.push(dto);
            }
        });
        if (sons.length > 0) {
            select.borrowGrandsons = sons.ToJson();
        }
    }
};


//重写GridCombobox方法，borrowData:为列名
this.borrowDataRewriteValue = function (value) {
    /☆
    var me = this;
    if (Framework.IsNullOrEmpty(value)) return "";

    var grands = me.selected.borrowGrandsons;
    var len = 0;
    if (Framework.IsNotNullOrEmpty(grands)) {
        var list = grands.ParseJson();
        var sum = list.filter(function (item) {
            return item.StateType != "Deleted";
        });
        len = sum.length;
    }
    var values = value.filter(function (item) {
        return item.StateType != "Deleted";
    });
☆/
    console.log("borrowDataRewriteValue 2");
    var len = 0;
    len += value.length;

    return {id: len, name: "已选择盒数:" + len};
};

this.OnEditCell = function (index, field, row) {
    if (field == "projectName" || field == "archiveCode" || field == "boxNumber" || field == "mainBorrowNumbers")
        return false;


    if (field == "borrowData" && (!Framework.Tolerant(row.paperDraft) || row.paperDraft == "否"))
        return false;
};

//change事件 paperDraft为列名
this.paperDraftChange = function (btn, index, field, row) {
    console.log("PaperDraftChange");
    var me = this;
    if (btn.checked) return;

    if (Framework.IsNotNullOrEmpty(row) && Framework.IsNotNullOrEmpty(row.borrowGrandsons)) {
        var grands = row.borrowGrandsons.ParseJson();
        Framework.ForEach(grands, function (item) {
            if (item.timestamp)
                item.StateType = "Deleted";
            else
                grands.Remove("boxAndNumberBookId", item.boxAndNumberBookId);
        });

        if (grands.length > 0)
            row.borrowGrandsons = grands.ToJson();
        else
            row.borrowGrandsons = null;
        row.paperDraft = btn.checked;
        row.borrowData = null;
        me.PushRow(row);
    }
};


 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"BorrowChild"
		},
		{
			"isHide":false,
			"name":"pagination",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"queryUrl",
			"value":"/BorrowChild-getBorrowChildDTOList-Query.do"
		},
		{
			"isHide":false,
			"name":"checkbox",
			"value":"false"
		}
	],
	"sort":0
}
{"action":[{"code":"Export","container":"GridPanel","name":"导出","property":[],"sort":0}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":1},{"action":[],"authority":[],"children":[],"code":"borrowNumbers","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"纸质底稿借阅盒数","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":20},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"borrowNumbers","sort":10},{"action":[],"authority":[],"children":[],"code":"paperDraft","control":"CheckBox","dataPermission":[],"isReference":false,"name":"纸质底稿","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Width","value":"80"}],"select":"PaperDraft","sort":9},{"action":[],"authority":[],"children":[],"code":"electronicDraft","control":"CheckBox","dataPermission":[],"isReference":false,"name":"电子底稿","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Width","value":"80"}],"select":"ElectronicDraft","sort":8},{"action":[],"authority":[],"children":[],"code":"manuScirptItemArchiveId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"底稿归档Id","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":20},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(ManuScirptItemArchive|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"ManuScirptItemArchive"}],"select":"ManuScirptItemArchiveId[Entity(ManuScirptItemArchive|Code(Code)#Name(Name))]","sort":13},{"action":[],"authority":[],"children":[],"code":"borrowMasterId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"BorrowMasterId","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(BorrowMaster|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"BorrowMaster"}],"select":"BorrowMasterId[Entity(BorrowMaster|Code(Code)#Name(Name))]","sort":7},{"action":[],"authority":[],"children":[],"code":"projectName","control":"Text","dataPermission":[],"isReference":false,"name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"950"},{"isHide":false,"name":"align","value":"left"},{"isHide":false,"name":"halign","value":"center"}],"sort":3},{"action":[],"authority":[],"children":[],"code":"mainBorrowNumbers","control":"Number","dataPermission":[],"isReference":false,"name":"纸质底稿已借出盒数","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"180"}],"sort":6},{"action":[],"authority":[],"children":[],"code":"boxNumber","control":"Number","dataPermission":[],"isReference":false,"name":"纸质底稿总盒数","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"140"}],"sort":5},{"action":[],"authority":[],"children":[],"code":"archiveCode","control":"Text","dataPermission":[],"isReference":false,"name":"档案号","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"160"}],"sort":4},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"Uuid","otherChildren":[],"property":[],"sort":14},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":2},{"action":[],"authority":[],"children":[],"code":"borrowGrandsons","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"孙表Json","otherChildren":[],"property":[],"sort":12},{"action":[],"authority":[],"children":[],"code":"borrowData","control":"GridCombobox","dataPermission":[],"isReference":false,"name":"纸质底稿借阅总盒数","otherChildren":[],"property":[{"isHide":false,"name":"SchemaCode","value":"SelectAPaperManuscript"},{"isHide":false,"name":"IsFormatter","value":"true"},{"isHide":false,"name":"Width","value":"210"}],"sort":11}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"projectFileListSon","control":"EditorGridPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforeLoad&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;form.DownForCode(&quot;ProjectId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(project)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;{param:&nbsp;'projectId',&nbsp;value:&nbsp;project.GetValue()};\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;id&nbsp;=&nbsp;form.DownForCode(&quot;id&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(id)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(id.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;{param:&nbsp;'borrowMasterId',&nbsp;value:&nbsp;id.GetValue()};\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;me.params&nbsp;=&nbsp;JSON.stringify(params);\n};\n\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;(res)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//Load请求完成后走的方法\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;LoadComplete&nbsp;1&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;// 特殊处理，在页面加载完成后就加载到需要保存的数据中\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(res))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.GetFormPage();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isClose&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form&nbsp;&&&nbsp;form.UpWindows.IsRefreshOpener)&nbsp;isClose&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(res,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有首次新增的时候才走\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(item.timestamp)&nbsp;&&&nbsp;!isClose)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.PushRow(item);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\nthis.GridCallback&nbsp;=&nbsp;function&nbsp;(rows)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//弹出页面确定回调事件\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;GridCallback&nbsp;2&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;select&nbsp;=&nbsp;me.selected;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(select)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sons&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(select.borrowGrandsons))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons&nbsp;=&nbsp;select.borrowGrandsons.ParseJson();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//rows&nbsp;中在sons&nbsp;中已经存在的&nbsp;删除，&nbsp;在rows中不存在的，sons中存在的说明是删除的，此循环后&nbsp;就剩下新增的数据\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(sons,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;rows.Find(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)&nbsp;{//找到&nbsp;&nbsp;在rows(当前选中的数据)&nbsp;中移除\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;first.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{//没找到&nbsp;说明数据已经被删除\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item.timestamp)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(rows,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;sons.Find(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!first)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dto&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.id&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.timestamp&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.boxAndNumberBookId&nbsp;=&nbsp;item.boxAndNumberBookId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.StateType&nbsp;=&nbsp;&quot;Added&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons.push(dto);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sons.length&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.borrowGrandsons&nbsp;=&nbsp;sons.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\n\n//重写GridCombobox方法，borrowData:为列名\nthis.borrowDataRewriteValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;/*\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(value))&nbsp;return&nbsp;&quot;&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;me.selected.borrowGrandsons;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;len&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(grands))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;list&nbsp;=&nbsp;grands.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sum&nbsp;=&nbsp;list.filter(function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;item.StateType&nbsp;!=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len&nbsp;=&nbsp;sum.length;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;values&nbsp;=&nbsp;value.filter(function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;item.StateType&nbsp;!=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;});\n*/\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;borrowDataRewriteValue&nbsp;2&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;len&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;len&nbsp;+=&nbsp;value.length;\n\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{id:&nbsp;len,&nbsp;name:&nbsp;&quot;已选择盒数:&quot;&nbsp;+&nbsp;len};\n};\n\nthis.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;projectName&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;archiveCode&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;boxNumber&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;mainBorrowNumbers&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;borrowData&quot;&nbsp;&&&nbsp;(!Framework.Tolerant(row.paperDraft)&nbsp;||&nbsp;row.paperDraft&nbsp;==&nbsp;&quot;否&quot;))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n//change事件&nbsp;paperDraft为列名\nthis.paperDraftChange&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;PaperDraftChange&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.checked)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(row)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(row.borrowGrandsons))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;row.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(grands,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item.timestamp)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(grands.length&nbsp;&gt;&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowGrandsons&nbsp;=&nbsp;grands.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowGrandsons&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.paperDraft&nbsp;=&nbsp;btn.checked;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowData&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.PushRow(row);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n","name":"项目列表","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"projectFileList"},{"isHide":false,"name":"Name","value":"项目列表"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":342950},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforeLoad&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;form.DownForCode(&quot;ProjectId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(project)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;{param:&nbsp;'projectId',&nbsp;value:&nbsp;project.GetValue()};\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;id&nbsp;=&nbsp;form.DownForCode(&quot;id&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(id)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(id.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;{param:&nbsp;'borrowMasterId',&nbsp;value:&nbsp;id.GetValue()};\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;me.params&nbsp;=&nbsp;JSON.stringify(params);\n};\n\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;(res)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//Load请求完成后走的方法\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;LoadComplete&nbsp;1&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;// 特殊处理，在页面加载完成后就加载到需要保存的数据中\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(res))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.GetFormPage();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isClose&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form&nbsp;&&&nbsp;form.UpWindows.IsRefreshOpener)&nbsp;isClose&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(res,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有首次新增的时候才走\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(item.timestamp)&nbsp;&&&nbsp;!isClose)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.PushRow(item);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\nthis.GridCallback&nbsp;=&nbsp;function&nbsp;(rows)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//弹出页面确定回调事件\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;GridCallback&nbsp;2&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;select&nbsp;=&nbsp;me.selected;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(select)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sons&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(select.borrowGrandsons))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons&nbsp;=&nbsp;select.borrowGrandsons.ParseJson();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//rows&nbsp;中在sons&nbsp;中已经存在的&nbsp;删除，&nbsp;在rows中不存在的，sons中存在的说明是删除的，此循环后&nbsp;就剩下新增的数据\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(sons,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;rows.Find(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)&nbsp;{//找到&nbsp;&nbsp;在rows(当前选中的数据)&nbsp;中移除\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;first.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{//没找到&nbsp;说明数据已经被删除\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item.timestamp)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(rows,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;sons.Find(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!first)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dto&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.id&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.timestamp&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.boxAndNumberBookId&nbsp;=&nbsp;item.boxAndNumberBookId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.StateType&nbsp;=&nbsp;&quot;Added&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sons.push(dto);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sons.length&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.borrowGrandsons&nbsp;=&nbsp;sons.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\n\n//重写GridCombobox方法，borrowData:为列名\nthis.borrowDataRewriteValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;/*\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(value))&nbsp;return&nbsp;&quot;&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;me.selected.borrowGrandsons;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;len&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(grands))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;list&nbsp;=&nbsp;grands.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sum&nbsp;=&nbsp;list.filter(function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;item.StateType&nbsp;!=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len&nbsp;=&nbsp;sum.length;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;values&nbsp;=&nbsp;value.filter(function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;item.StateType&nbsp;!=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;});\n*/\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;borrowDataRewriteValue&nbsp;2&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;len&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;len&nbsp;+=&nbsp;value.length;\n\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{id:&nbsp;len,&nbsp;name:&nbsp;&quot;已选择盒数:&quot;&nbsp;+&nbsp;len};\n};\n\nthis.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;projectName&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;archiveCode&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;boxNumber&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;mainBorrowNumbers&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;borrowData&quot;&nbsp;&&&nbsp;(!Framework.Tolerant(row.paperDraft)&nbsp;||&nbsp;row.paperDraft&nbsp;==&nbsp;&quot;否&quot;))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n//change事件&nbsp;paperDraft为列名\nthis.paperDraftChange&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;PaperDraftChange&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.checked)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(row)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(row.borrowGrandsons))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;row.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(grands,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item.timestamp)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;item.boxAndNumberBookId);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(grands.length&nbsp;&gt;&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowGrandsons&nbsp;=&nbsp;grands.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowGrandsons&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.paperDraft&nbsp;=&nbsp;btn.checked;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.borrowData&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.PushRow(row);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"BorrowChild"},{"isHide":false,"name":"pagination","value":"false"},{"isHide":false,"name":"queryUrl","value":"/BorrowChild-getBorrowChildDTOList-Query.do"},{"isHide":false,"name":"checkbox","value":"false"}],"sort":0}
2020-04-09 15:47:05