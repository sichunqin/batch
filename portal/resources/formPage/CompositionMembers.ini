{
	"action":[
		{
			"code":"CreatedClick",
			"name":"新增",
			"property":[
				{
					"isHide":false,
					"name":"AuthorityRemark",
					"value":"项目架构-选择项目组成员-按钮"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"CreatedClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 


this.CreatedClick = function () {
    console.log('摊项目组成员')
    var me = this;
    var model = this.Top("[controltype='FormPanel']");
    var idVal = model.DownForCode("Id");
    var project = model.DownForCode("projectId");
    if (Framework.IsNullOrEmpty(idVal)) {
        Framework.Confirm("请先选中一个被审计单位");
        return false;
    }
    var tab = model.DownForCode("compositionMemberss");
    var ProjectManagerId =model.DownForCode("ProjectManagerId");
   
    var userid = ProjectManagerId.GetValue()==null?0:ProjectManagerId.GetValue().id;
    var projectId = project.GetValue();
    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaType = "GridPanelSelecter";
    parameter.schemaCode = "EditorSelecter";
    parameter.RenderDialog = true;
    me.ParentNode = tab;
     Framework.OpenForm(me, url, parameter, function (form) {
         form.projectId = projectId;
         form.userId = userid;
         //form.compositionId=compositionId;
         if (form.Load) form.Load();
     });
}

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"Remove",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"ActionGroup",
					"value":"操作"
				},
				{
					"isHide":false,
					"name":"IsRenderColumn",
					"value":"true"
				},
				{
					"isHide":false,
					"name":"AuthorityRemark",
					"value":"项目架构-删除已选择项目组成员-按钮"
				},
				{
					"isHide":false,
					"name":"LinkImg",
					"value":"/Styles/icons/index/icon_delete.png"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"RemoveClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.RemoveClick = function () {
    console.log("删除测试");
    var memberModel = this.GetParent().GetParent().LinkSelectData;
    if (Framework.IsNullOrEmpty(memberModel.id)) {
        Framework.Message("请选中一条数据");
        return false;
    }
    var sortmum= memberModel.sort;
    if (sortmum == 0) return false;
    var memeberId = memberModel.id;
    var model = this.Up().Up();
    var compostionId = memberModel.compositionCustomerId.id;//model.Up().DownForCode('id').GetValue();
    var CompositionMembersTab = model.Down("[controltype='GridPanel']").First;
    var params = {};
    params.memeberId = memeberId;
    params.compostionId = compostionId;
    Framework.AjaxRequest(me, "CompositionMembers-delCompositonMember.do", 'get', params, true, function (result) {
        CompositionMembersTab.Load();
    });
};

 

};"
				}
			],
			"sort":1
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"code",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"员工工号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"120"
						},
						{
							"isHide":false,
							"name":"halign",
							"value":"center"
						},
						{
							"isHide":false,
							"name":"align",
							"value":"left"
						}
					],
					"select":"Code",
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"姓名",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"80"
						}
					],
					"select":"NameId[Entity(User|Code(Code)#Name(Name))]",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_StaffPositionId_Name",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"职务",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						}
					],
					"sort":8
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_PractisingQualification",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"专业资质",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"200"
						}
					],
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"workingYears",
					"control":"Number",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"从业年限",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"90"
						}
					],
					"select":"WorkingYears",
					"sort":10
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isExperience",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"是否有从业经验",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"enumtype",
							"value":"YesOrNo"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"140"
						}
					],
					"select":"IsExperience",
					"sort":11
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"roleName",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目角色",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ProjectRoleLevel"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ProjectRoleLevel)]"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"120"
						}
					],
					"select":"RoleName[Enum(ProjectRoleLevel)]",
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"compositionCustomerId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"被审计单位",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"CompositionCustomer"
						}
					],
					"select":"CompositionCustomerId[Entity(CompositionCustomer|Code(Code)#Name(Name))]",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isEnable",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"状态",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"IsEnable"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(IsEnable)]"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"120"
						}
					],
					"select":"IsEnable[Enum(IsEnable)]",
					"sort":7
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"sort",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"排序",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Sort",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_Name",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"ww",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"roleSort",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"角色排序",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"roleSort",
					"sort":1
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"compositionMembers",
	"control":"GridPanel",
	"dataPermission":[
		
	],
	"filter":"isEnable==10",
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
console.log("BeforeLoad 项目组成员")
    var me = this;
    var model = me.Top("[controltype='FormPanel']");
    var comId = model.DownForCode("Id");
    var params = {}
    params.param = "compositionCustomerId";
    params.value = comId.GetValue();
    me.params = JSON.stringify(params);
}

this.GridCallback = function (data) {
    var me = this;
    var model = me.Top("[controltype='FormPanel']");
    var idVal = model.DownForCode("Id");
    var compositionId = idVal.GetValue();
    var arr = []
    for (var i = 0; i < data.length; i++) {
        arr.push(data[i].memberId);
    }
    var memberId = JSON.stringify(arr);
    var params = {};
    params.memberId = memberId;
    params.compositionId = compositionId;
    Framework.AjaxRequest(me, "CompositionMembers-insertCompositionMember.do", 'get', params, true, function (result) {
        me.Load();
    })
}

this.RenderRowStyler = function (index, row) {
   // console.log("RenderRowStyler");
    if(Framework.IsNotNullOrEmpty(this.Top().Opener) && Framework.IsNotNullOrEmpty(this.Top().Opener.code))
    {
        var code = this.Top().Opener.code;
        if (code != "wR_MyTodoList"&&code!="homePageMyToDo") {
            if (row.sort == 0) {
                return 'rgba(135,146,167,0.5)';//background-color:#C0C0C0
            }
        }
    }    
};
this.RenderColumnTextStyler = function (row, field, value) {
 //   console.log("RenderRowStyler");
    if (row['sort'] == 0) {
        return 'rgba(135,146,167,0.5)';
    }
}


this.SetActionColumnVisible = function (btn, row) {
     var apply = this.Top().DownForCode("apply").GetValue();
  //  console.log("RenderRowStyler");
    var docState = this.Top().DownForCode('project').GetValue().docState.id;
    if (row.sort == 0||((docState > 10 && docState < 100 )&& apply!=1))
        return true;
}

",
	"name":"被审计单位成员表",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"compositionMembers"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"被审计单位成员表"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":17283
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"Sort asc,RoleSort desc,NameId_Name asc"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
console.log("BeforeLoad 项目组成员")
    var me = this;
    var model = me.Top("[controltype='FormPanel']");
    var comId = model.DownForCode("Id");
    var params = {}
    params.param = "compositionCustomerId";
    params.value = comId.GetValue();
    me.params = JSON.stringify(params);
}

this.GridCallback = function (data) {
    var me = this;
    var model = me.Top("[controltype='FormPanel']");
    var idVal = model.DownForCode("Id");
    var compositionId = idVal.GetValue();
    var arr = []
    for (var i = 0; i < data.length; i++) {
        arr.push(data[i].memberId);
    }
    var memberId = JSON.stringify(arr);
    var params = {};
    params.memberId = memberId;
    params.compositionId = compositionId;
    Framework.AjaxRequest(me, "CompositionMembers-insertCompositionMember.do", 'get', params, true, function (result) {
        me.Load();
    })
}

this.RenderRowStyler = function (index, row) {
   // console.log("RenderRowStyler");
    if(Framework.IsNotNullOrEmpty(this.Top().Opener) && Framework.IsNotNullOrEmpty(this.Top().Opener.code))
    {
        var code = this.Top().Opener.code;
        if (code != "wR_MyTodoList"&&code!="homePageMyToDo") {
            if (row.sort == 0) {
                return 'rgba(135,146,167,0.5)';//background-color:#C0C0C0
            }
        }
    }    
};
this.RenderColumnTextStyler = function (row, field, value) {
 //   console.log("RenderRowStyler");
    if (row['sort'] == 0) {
        return 'rgba(135,146,167,0.5)';
    }
}


this.SetActionColumnVisible = function (btn, row) {
     var apply = this.Top().DownForCode("apply").GetValue();
  //  console.log("RenderRowStyler");
    var docState = this.Top().DownForCode('project').GetValue().docState.id;
    if (row.sort == 0||((docState > 10 && docState < 100 )&& apply!=1))
        return true;
}



 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionMembers"
		},
		{
			"isHide":false,
			"name":"pagination",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"style:min-height",
			"value":"150px"
		},
		{
			"isHide":false,
			"name":"Height",
			"value":"auto"
		}
	],
	"sort":0
}
{"action":[{"code":"CreatedClick","name":"新增","property":[{"isHide":false,"name":"AuthorityRemark","value":"项目架构-选择项目组成员-按钮"},{"isHide":false,"name":"OnClick","value":"CreatedClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\n\nthis.CreatedClick&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('摊项目组成员')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;idVal&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;model.DownForCode(&quot;projectId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(idVal))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;请先选中一个被审计单位&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tab&nbsp;=&nbsp;model.DownForCode(&quot;compositionMemberss&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ProjectManagerId&nbsp;=model.DownForCode(&quot;ProjectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;userid&nbsp;=&nbsp;ProjectManagerId.GetValue()==null?0:ProjectManagerId.GetValue().id;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;project.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanelSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EditorSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.RenderDialog&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;me.ParentNode&nbsp;=&nbsp;tab;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.projectId&nbsp;=&nbsp;projectId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.userId&nbsp;=&nbsp;userid;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//form.compositionId=compositionId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":0},{"code":"Remove","name":"删除","property":[{"isHide":false,"name":"ActionGroup","value":"操作"},{"isHide":false,"name":"IsRenderColumn","value":"true"},{"isHide":false,"name":"AuthorityRemark","value":"项目架构-删除已选择项目组成员-按钮"},{"isHide":false,"name":"LinkImg","value":"/Styles/icons/index/icon_delete.png"},{"isHide":false,"name":"OnClick","value":"RemoveClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.RemoveClick&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;删除测试&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;memberModel&nbsp;=&nbsp;this.GetParent().GetParent().LinkSelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(memberModel.id))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;请选中一条数据&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sortmum=&nbsp;memberModel.sort;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sortmum&nbsp;==&nbsp;0)&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;memeberId&nbsp;=&nbsp;memberModel.id;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compostionId&nbsp;=&nbsp;memberModel.compositionCustomerId.id;//model.Up().DownForCode('id').GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CompositionMembersTab&nbsp;=&nbsp;model.Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.memeberId&nbsp;=&nbsp;memeberId;\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;compostionId;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-delCompositonMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CompositionMembersTab.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"}],"sort":1}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":4},{"action":[],"authority":[],"children":[],"code":"code","control":"Text","dataPermission":[],"isReference":false,"name":"员工工号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Width","value":"120"},{"isHide":false,"name":"halign","value":"center"},{"isHide":false,"name":"align","value":"left"}],"select":"Code","sort":6},{"action":[],"authority":[],"children":[],"code":"nameId","control":"GridCombobox","dataPermission":[],"isReference":false,"name":"姓名","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"Width","value":"80"}],"select":"NameId[Entity(User|Code(Code)#Name(Name))]","sort":5},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_StaffPositionId_Name","control":"Text","dataPermission":[],"isReference":false,"name":"职务","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"160"}],"sort":8},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_PractisingQualification","control":"Text","dataPermission":[],"isReference":false,"name":"专业资质","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"200"}],"sort":9},{"action":[],"authority":[],"children":[],"code":"workingYears","control":"Number","dataPermission":[],"isReference":false,"name":"从业年限","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Width","value":"90"}],"select":"WorkingYears","sort":10},{"action":[],"authority":[],"children":[],"code":"isExperience","control":"Combobox","dataPermission":[],"isReference":false,"name":"是否有从业经验","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"enumtype","value":"YesOrNo"},{"isHide":false,"name":"Width","value":"140"}],"select":"IsExperience","sort":11},{"action":[],"authority":[],"children":[],"code":"roleName","control":"Combobox","dataPermission":[],"isReference":false,"name":"项目角色","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ProjectRoleLevel"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ProjectRoleLevel)]"},{"isHide":false,"name":"Width","value":"120"}],"select":"RoleName[Enum(ProjectRoleLevel)]","sort":12},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":13},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"被审计单位","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"}],"select":"CompositionCustomerId[Entity(CompositionCustomer|Code(Code)#Name(Name))]","sort":14},{"action":[],"authority":[],"children":[],"code":"isEnable","control":"Combobox","dataPermission":[],"isReference":false,"name":"状态","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"IsEnable"},{"isHide":false,"name":"EntityConfig","value":"[Enum(IsEnable)]"},{"isHide":false,"name":"Width","value":"120"}],"select":"IsEnable[Enum(IsEnable)]","sort":7},{"action":[],"authority":[],"children":[],"code":"sort","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"排序","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Sort","sort":3},{"action":[],"authority":[],"children":[],"code":"nameId_Name","control":"Hidden","dataPermission":[],"isReference":false,"name":"ww","otherChildren":[],"property":[],"sort":2},{"action":[],"authority":[],"children":[],"code":"roleSort","control":"Hidden","dataPermission":[],"isReference":false,"name":"角色排序","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"roleSort","sort":1}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"compositionMembers","control":"GridPanel","dataPermission":[],"filter":"isEnable==10","isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\nconsole.log(&quot;BeforeLoad&nbsp;项目组成员&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;comId&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.param&nbsp;=&nbsp;&quot;compositionCustomerId&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;comId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;me.params&nbsp;=&nbsp;JSON.stringify(params);\n}\n\nthis.GridCallback&nbsp;=&nbsp;function&nbsp;(data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;idVal&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compositionId&nbsp;=&nbsp;idVal.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;arr&nbsp;=&nbsp;[]\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;data.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.push(data[i].memberId);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;memberId&nbsp;=&nbsp;JSON.stringify(arr);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.memberId&nbsp;=&nbsp;memberId;\n&nbsp;&nbsp;&nbsp;&nbsp;params.compositionId&nbsp;=&nbsp;compositionId;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-insertCompositionMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;})\n}\n\nthis.RenderRowStyler&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;//&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(this.Top().Opener)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(this.Top().Opener.code))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;code&nbsp;=&nbsp;this.Top().Opener.code;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(code&nbsp;!=&nbsp;&quot;wR_MyTodoList&quot;&&code!=&quot;homePageMyToDo&quot;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';//background-color:#C0C0C0\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\n};\nthis.RenderColumnTextStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;//&nbsp;&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row['sort']&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;this.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;//&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;this.Top().DownForCode('project').GetValue().docState.id;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0||((docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;100&nbsp;)&&&nbsp;apply!=1))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\n","name":"被审计单位成员表","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"compositionMembers"},{"isHide":false,"name":"Name","value":"被审计单位成员表"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":17283},{"isHide":false,"name":"OrderBy","value":"Sort asc,RoleSort desc,NameId_Name asc"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\nconsole.log(&quot;BeforeLoad&nbsp;项目组成员&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;comId&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.param&nbsp;=&nbsp;&quot;compositionCustomerId&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;comId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;me.params&nbsp;=&nbsp;JSON.stringify(params);\n}\n\nthis.GridCallback&nbsp;=&nbsp;function&nbsp;(data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;idVal&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compositionId&nbsp;=&nbsp;idVal.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;arr&nbsp;=&nbsp;[]\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;data.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.push(data[i].memberId);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;memberId&nbsp;=&nbsp;JSON.stringify(arr);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.memberId&nbsp;=&nbsp;memberId;\n&nbsp;&nbsp;&nbsp;&nbsp;params.compositionId&nbsp;=&nbsp;compositionId;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-insertCompositionMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;})\n}\n\nthis.RenderRowStyler&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;//&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(this.Top().Opener)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(this.Top().Opener.code))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;code&nbsp;=&nbsp;this.Top().Opener.code;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(code&nbsp;!=&nbsp;&quot;wR_MyTodoList&quot;&&code!=&quot;homePageMyToDo&quot;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';//background-color:#C0C0C0\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\n};\nthis.RenderColumnTextStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;//&nbsp;&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row['sort']&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;this.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;//&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;this.Top().DownForCode('project').GetValue().docState.id;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0||((docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;100&nbsp;)&&&nbsp;apply!=1))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\n\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionMembers"},{"isHide":false,"name":"pagination","value":"false"},{"isHide":false,"name":"style:min-height","value":"150px"},{"isHide":false,"name":"Height","value":"auto"}],"sort":0}
2020-03-13 14:21:11