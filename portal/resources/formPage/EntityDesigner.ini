{
	"action":[
		{
			"code":"Save",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"SaveEntity"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.SaveEntity = function () {

    var me = this;

    var entityDesigner = me.UpForCode("entityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("propertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("entityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = propertyGrid.GetValue();
    parameter.p_FormId = entityDesigner.formid;
    parameter.p_IsReload = true;

    if (Framework.IsNullOrEmpty(parameter.id)) {
        Framework.Message("当前设计器无保存的数据!");
    }
    else {
        var url = "EntityMap-Modify.json";

        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'post', parameter, true, function (result) {

                //var data = result.ParseJson();

                //刷新页面
                if (Framework.IsNotNullOrEmpty(result)) {
                    entityChart.RefreshChartValue(result);
                    entityChart.OnClick(result.id);
                }

                //异步关闭遮罩
                Progress.HideProgress();

            });

        });
    }
};

 

};"
				}
			],
			"sort":2
		},
		{
			"code":"Open",
			"name":"打开",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"OpenEntity"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.OpenEntity = function () {

    var me = this;

    var url = "UIForm-Web-Schema.json";
    var parameter = {};

    parameter.schemaCode = "EntityMapSelecter";
    parameter.renderDialog = true;

    Framework.OpenForm(me, url, parameter, function (form) {
        if (form.Load) {
            form.MainContainer = me;
            //form.params = "[{ param: 'IsBaseType', value: 'false'}]";
            form.Load();
        }
    });
};

this.SetValue = function (data) {
    var me = this;

    var entityDesigner = me.UpForCode("entityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var entityChart = entityDesigner.DownForCode("entityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var value = data.First();

    if (Framework.IsNullOrEmpty(value)) {
        Framework.Message("未找到要打开的实体!");
    }
    else {
        entityChart.LoadChartValue(value);
    }
};

 

};"
				}
			],
			"sort":1
		},
		{
			"code":"New",
			"name":"新建",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"CreateEntity"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.CreateEntity = function () {

    var me = this;

    var entityDesigner = me.UpForCode("entityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("propertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("entityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = {};

    parameter.code = "New";
    parameter.name = "新创建";
    parameter.namespaceId = "200";

    parameter.p_FormId = entityDesigner.formid;
    parameter.p_IsReload = true;

    var url = "EntityMap-Create.json";

    Framework.Confirm("您确定要创建新的实体对象？", function () {
        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'post', parameter, true, function (result) {

                var data = result;

                //刷新页面
                if (Framework.IsNotNullOrEmpty(data)) {
                    entityChart.LoadChartValue(data);
                }

                //异步关闭遮罩
                Progress.HideProgress();

            });

        });
    });
};

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"CreateEntityCodeAll",
			"name":"生成代码",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"CreateEntityCodeAll"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.CreateEntityCodeAll = function () {
    var me = this;
    var entityDesigner = me.UpForCode("entityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var url = "EntityMap-CreateEntityCodeAll.do"

    var parameter = {};
    parameter.formId = entityDesigner.formid;

    Progress.Task(function () {
        Framework.AjaxRequest(me, url, 'post', parameter, true, function (result) {
            if (Framework.IsNotNullOrEmpty(result)) {
                var mes = result;
                //if (result.ParseSecurityJson) mes = result.ParseSecurityJson();
                Framework.Message(mes);

                //异步关闭遮罩
                Progress.HideProgress();
            }
        });
    });
};

 

};"
				}
			],
			"sort":3
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"entityChart",
							"control":"OrgChart",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"
this.OnClick = function (value) {

    var me = this;

    if (Framework.IsNullOrEmpty(value)) return;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var url = "EntityMap-GetEntityPropertyValue.do"

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = value;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = result;
        propertyGrid.SetValue(data);
    });
};


this.LoadChartValue = function (value) {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var url = "EntityMap-GetEntityTreeJson.do"

    //赋值
    me.Id = value.id;

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = value.id;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = result;
        me.SetValue(data);
        propertyGrid.SetValue([]);
    });
};

this.BeforeLoad = function () {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    me.RefreshChartValue();
    propertyGrid.SetValue([]);
};

this.RefreshChartValue = function (value) {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var url = "EntityMap-GetEntityTreeJson.do"

    if (Framework.IsNullOrEmpty(me.Id)) return;

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = me.Id;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = null;
        if (Framework.IsNotNullOrEmpty(result)) data = result;
        me.SetValue(data);
    });
};


this.OnCreateChildrenChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = {};

    parameter.code = "New";
    parameter.name = "新创建";

    parameter.mainEntityMapId = value;

    parameter.p_FormId = entityDesigner.formid;
    parameter.p_IsReload = true;

    var url = "EntityMap-Create.json";

    Framework.Confirm("您确定要创建新的实体对象？", function () {
        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'post', parameter, true, function (result) {

                var data = result;

                //刷新页面
                if (Framework.IsNotNullOrEmpty(data)) {
                    entityChart.RefreshChartValue(data);;
                    propertyGrid.SetValue(data);
                }

                //异步关闭遮罩
                Progress.HideProgress();

            });
        });
    });
};

this.OnDeleteChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = {};

    parameter.id = value;
    parameter.formId = entityDesigner.formid;

    var url = "EntityMap-Delete.json";

    Framework.Confirm("您确定要删除当前实体？", function () {
        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'delete', parameter, true, function (result) {

                //刷新页面
                entityChart.RefreshChartValue();
                propertyGrid.SetValue([]);

                //异步关闭遮罩
                Progress.HideProgress();

            });
        });
    });

};

this.OnModifyChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaCode = "EntityMap";
    parameter.schemaType = "FormPanel";
    parameter.reference = false;

    var selected = {};
    selected.id = value;

    Framework.OpenForm(entityChart, url, parameter, function (form) {
        if (form.Load) form.Load(selected);
    });
};",
							"name":"实体设计器",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 


this.OnClick = function (value) {

    var me = this;

    if (Framework.IsNullOrEmpty(value)) return;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var url = "EntityMap-GetEntityPropertyValue.do"

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = value;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = result;
        propertyGrid.SetValue(data);
    });
};


this.LoadChartValue = function (value) {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var url = "EntityMap-GetEntityTreeJson.do"

    //赋值
    me.Id = value.id;

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = value.id;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = result;
        me.SetValue(data);
        propertyGrid.SetValue([]);
    });
};

this.BeforeLoad = function () {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    me.RefreshChartValue();
    propertyGrid.SetValue([]);
};

this.RefreshChartValue = function (value) {
    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var url = "EntityMap-GetEntityTreeJson.do"

    if (Framework.IsNullOrEmpty(me.Id)) return;

    var parameter = {};
    parameter.formId = entityDesigner.formid;
    parameter.id = me.Id;

    Framework.AjaxRequest(me, url, 'post', parameter, false, function (result) {
        var data = null;
        if (Framework.IsNotNullOrEmpty(result)) data = result;
        me.SetValue(data);
    });
};


this.OnCreateChildrenChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = {};

    parameter.code = "New";
    parameter.name = "新创建";

    parameter.mainEntityMapId = value;

    parameter.p_FormId = entityDesigner.formid;
    parameter.p_IsReload = true;

    var url = "EntityMap-Create.json";

    Framework.Confirm("您确定要创建新的实体对象？", function () {
        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'post', parameter, true, function (result) {

                var data = result;

                //刷新页面
                if (Framework.IsNotNullOrEmpty(data)) {
                    entityChart.RefreshChartValue(data);;
                    propertyGrid.SetValue(data);
                }

                //异步关闭遮罩
                Progress.HideProgress();

            });
        });
    });
};

this.OnDeleteChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var parameter = {};

    parameter.id = value;
    parameter.formId = entityDesigner.formid;

    var url = "EntityMap-Delete.json";

    Framework.Confirm("您确定要删除当前实体？", function () {
        Progress.Task(function () {

            Framework.AjaxRequest(me, url, 'delete', parameter, true, function (result) {

                //刷新页面
                entityChart.RefreshChartValue();
                propertyGrid.SetValue([]);

                //异步关闭遮罩
                Progress.HideProgress();

            });
        });
    });

};

this.OnModifyChartClick = function (value) {

    var me = this;

    var entityDesigner = me.UpForCode("EntityMap");
    if (Framework.IsNullOrEmpty(entityDesigner)) return;

    var propertyGrid = entityDesigner.DownForCode("PropertyGrid");
    if (Framework.IsNullOrEmpty(propertyGrid)) return;

    var entityChart = entityDesigner.DownForCode("EntityChart");
    if (Framework.IsNullOrEmpty(entityChart)) return;

    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaCode = "EntityMap";
    parameter.schemaType = "FormPanel";
    parameter.reference = false;

    var selected = {};
    selected.id = value;

    Framework.OpenForm(entityChart, url, parameter, function (form) {
        if (form.Load) form.Load(selected);
    });
};

 

};"
								}
							],
							"sort":2
						}
					],
					"code":"center",
					"control":"Center",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"设计器",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"propertyGrid",
							"control":"PropertyGrid",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"属性",
							"otherChildren":[
								
							],
							"property":[
								
							],
							"sort":1
						}
					],
					"code":"east",
					"control":"East",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"属性",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":4
				}
			],
			"code":"designer",
			"control":"Alyout",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"设计器",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"entityDesigner",
	"control":"Panel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"",
	"name":"实体设计器",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"entityDesigner"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"实体设计器"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":29
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"EntityMap"
		},
		{
			"isHide":false,
			"name":"Height",
			"value":"-1"
		}
	],
	"sort":0
}
{"action":[{"code":"Save","name":"保存","property":[{"isHide":false,"name":"OnClick","value":"SaveEntity"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.SaveEntity&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;entityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;propertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;entityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;propertyGrid.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_FormId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_IsReload&nbsp;=&nbsp;true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(parameter.id))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;当前设计器无保存的数据!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Modify.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//var&nbsp;data&nbsp;=&nbsp;result.ParseJson();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(result))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.RefreshChartValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.OnClick(result.id);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\r\n \r\n};"}],"sort":2},{"code":"Open","name":"打开","property":[{"isHide":false,"name":"OnClick","value":"OpenEntity"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OpenEntity&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EntityMapSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.renderDialog&nbsp;=&nbsp;true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.MainContainer&nbsp;=&nbsp;me;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//form.params&nbsp;=&nbsp;&quot;[{&nbsp;param:&nbsp;'IsBaseType',&nbsp;value:&nbsp;'false'}]&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.SetValue&nbsp;=&nbsp;function&nbsp;(data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;entityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;entityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;data.First();\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(value))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;未找到要打开的实体!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.LoadChartValue(value);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\r\n \r\n};"}],"sort":1},{"code":"New","name":"新建","property":[{"isHide":false,"name":"OnClick","value":"CreateEntity"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.CreateEntity&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;entityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;propertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;entityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.code&nbsp;=&nbsp;&quot;New&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.name&nbsp;=&nbsp;&quot;新创建&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.namespaceId&nbsp;=&nbsp;&quot;200&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_FormId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_IsReload&nbsp;=&nbsp;true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Create.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要创建新的实体对象？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(data))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.LoadChartValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"}],"sort":0},{"code":"CreateEntityCodeAll","name":"生成代码","property":[{"isHide":false,"name":"OnClick","value":"CreateEntityCodeAll"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.CreateEntityCodeAll&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;entityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-CreateEntityCodeAll.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(result))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mes&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//if&nbsp;(result.ParseSecurityJson)&nbsp;mes&nbsp;=&nbsp;result.ParseSecurityJson();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(mes);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"}],"sort":3}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"entityChart","control":"OrgChart","dataPermission":[],"isReference":false,"javaScript":"\nthis.OnClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(value))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityPropertyValue.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\n\nthis.LoadChartValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityTreeJson.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;//赋值\n&nbsp;&nbsp;&nbsp;&nbsp;me.Id&nbsp;=&nbsp;value.id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value.id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;me.RefreshChartValue();\n&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n};\n\nthis.RefreshChartValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityTreeJson.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(me.Id))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;me.Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(result))&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\n\nthis.OnCreateChildrenChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.code&nbsp;=&nbsp;&quot;New&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.name&nbsp;=&nbsp;&quot;新创建&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.mainEntityMapId&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_FormId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_IsReload&nbsp;=&nbsp;true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Create.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要创建新的实体对象？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(data))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.RefreshChartValue(data);;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.OnDeleteChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Delete.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要删除当前实体？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'delete',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.RefreshChartValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n\n};\n\nthis.OnModifyChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EntityMap&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.reference&nbsp;=&nbsp;false;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;selected.id&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(entityChart,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(selected);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};","name":"实体设计器","otherChildren":[],"property":[{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\n\nthis.OnClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(value))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityPropertyValue.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\n\nthis.LoadChartValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityTreeJson.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;//赋值\n&nbsp;&nbsp;&nbsp;&nbsp;me.Id&nbsp;=&nbsp;value.id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value.id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;me.RefreshChartValue();\n&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n};\n\nthis.RefreshChartValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-GetEntityTreeJson.do&quot;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(me.Id))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;me.Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(result))&nbsp;data&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\n\nthis.OnCreateChildrenChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.code&nbsp;=&nbsp;&quot;New&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.name&nbsp;=&nbsp;&quot;新创建&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.mainEntityMapId&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_FormId&nbsp;=&nbsp;entityDesigner.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.p_IsReload&nbsp;=&nbsp;true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Create.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要创建新的实体对象？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;result;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(data))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.RefreshChartValue(data);;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.OnDeleteChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.id&nbsp;=&nbsp;value;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.formId&nbsp;=&nbsp;entityDesigner.formid;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;EntityMap-Delete.json&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要删除当前实体？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;url,&nbsp;'delete',&nbsp;parameter,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//刷新页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entityChart.RefreshChartValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyGrid.SetValue([]);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//异步关闭遮罩\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n\n};\n\nthis.OnModifyChartClick&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityDesigner&nbsp;=&nbsp;me.UpForCode(&quot;EntityMap&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityDesigner))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;propertyGrid&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;PropertyGrid&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(propertyGrid))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityChart&nbsp;=&nbsp;entityDesigner.DownForCode(&quot;EntityChart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(entityChart))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EntityMap&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.reference&nbsp;=&nbsp;false;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;selected.id&nbsp;=&nbsp;value;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(entityChart,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(selected);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"}],"sort":2}],"code":"center","control":"Center","dataPermission":[],"isReference":false,"javaScript":"","name":"设计器","otherChildren":[],"property":[],"sort":3},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"propertyGrid","control":"PropertyGrid","dataPermission":[],"isReference":false,"javaScript":"","name":"属性","otherChildren":[],"property":[],"sort":1}],"code":"east","control":"East","dataPermission":[],"isReference":false,"javaScript":"","name":"属性","otherChildren":[],"property":[],"sort":4}],"code":"designer","control":"Alyout","dataPermission":[],"isReference":false,"javaScript":"","name":"设计器","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"entityDesigner","control":"Panel","dataPermission":[],"isReference":false,"javaScript":"","name":"实体设计器","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"entityDesigner"},{"isHide":false,"name":"Name","value":"实体设计器"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":29},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"EntityType","value":"EntityMap"},{"isHide":false,"name":"Height","value":"-1"}],"sort":0}
2020-03-09 16:25:06