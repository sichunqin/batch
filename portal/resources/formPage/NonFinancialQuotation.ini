{
	"action":[
		
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"dataPermission":[
								
							],
							"isReference":false,
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":true,
									"name":"referenceFormId",
									"value":30350
								}
							],
							"sort":0
						}
					],
					"code":"projectTab",
					"control":"Tab",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主项目信息",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"ClassGroup",
							"value":"CardA"
						}
					],
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"dataPermission":[
								
							],
							"isReference":false,
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":true,
									"name":"referenceFormId",
									"value":18344
								}
							],
							"sort":0
						}
					],
					"code":"businessAgreement",
					"control":"Tab",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnSelect = function () {
    console.log("AAAAAA");
    var me = this;
    var model = me.Top();
    if (!model) return;
    var projectForm = model.Down("[basecode='projectPage']").First;
    if (!projectForm) return;


    var projectId = projectForm.DownForCode("id").GetValue();
    if (Framework.IsNullOrEmpty(projectId)) return;

    var engagement = me.DownForCode("engagements");

    if (Framework.IsNullOrEmpty(engagement)) return;

    var params = [];
    params.push({param: 'projectId', value: projectId});
    params.push({param: 'formId', value: engagement.formid});
    engagement.params = JSON.stringify(params);
    engagement.Load();
};",
					"name":"业务约定书",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"AuthorityRemark",
							"value":"非财报项目业务约定书页签"
						},
						{
							"isHide":false,
							"name":"ClassGroup",
							"value":"CardB"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnSelect = function () {
    console.log("AAAAAA");
    var me = this;
    var model = me.Top();
    if (!model) return;
    var projectForm = model.Down("[basecode='projectPage']").First;
    if (!projectForm) return;


    var projectId = projectForm.DownForCode("id").GetValue();
    if (Framework.IsNullOrEmpty(projectId)) return;

    var engagement = me.DownForCode("engagements");

    if (Framework.IsNullOrEmpty(engagement)) return;

    var params = [];
    params.push({param: 'projectId', value: projectId});
    params.push({param: 'formId', value: engagement.formid});
    engagement.params = JSON.stringify(params);
    engagement.Load();
};

 

};"
						}
					],
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"apply",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"申请修改标记",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"riskMessage",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"风险等级变化记录",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":1
				}
			],
			"code":"formMainTabs",
			"control":"Tabs",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"主选项卡",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"ClassGroup",
					"value":"bRadiusA"
				},
				{
					"isHide":false,
					"name":"IsShowBackButton",
					"value":"true"
				}
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"nonFinancialQuotation",
	"control":"Panel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log('BeforeLoadNonReportProjectManagePanel');
    var me = this;
    if (me.IsAdd) {
        // me.SetDownVisible('BusinessAgreement', true);//新增的时候业务约定书隐藏
        me.DownForCode('projectManagerId').SetValue(AppContext.Profile);
        if (AppContext.Profile.unitAttributes == 10 || AppContext.Profile.orgUnitAttributes == 10) {
            var headquartersReview = me.DownForCode("HeadquartersReview");
            if (headquartersReview) {
                headquartersReview.SetValue(10);
                headquartersReview.SetReadOnly(true);
                if (AppContext.Profile.orgUnitAttributes == 10) headquartersReview.SetVisible(true, false);
            }
        }
        return;
    }

    var params = {id: me.projectId};
    if (Framework.IsNotNullOrEmpty(me.select)) {
        params = me.select;
    }
    var projectForm = me.Down("form[basecode='nulReportProjectPage']").First;
    if (Framework.IsNullOrEmpty(projectForm)) return;
    if (Framework.IsNullOrEmpty(params.id)) return;
    projectForm.Data = params;
};

this.AfterLoad = function () {
    console.log('AfterLoadNonReportProjectManagePanel');
    var me = this;
    var riskLevel = me.DownForCode("RiskLevel");
    if (!riskLevel) return;
    var riskMessage = me.DownForCode("riskMessage");
    if (riskMessage && riskMessage.SetValue) {
        riskMessage.SetValue(riskLevel.GetSubmitValue())
    }

    if (!me.IsAdd) {
        var headquartersReview = me.DownForCode("HeadquartersReview");
        if (headquartersReview) {
            var orgUnitAttributes = me.DownForCode("DeptId_OrgId_UnitAttributes");
            if (orgUnitAttributes && orgUnitAttributes.GetValue() == 10) headquartersReview.SetVisible(true, false);
        }
    }

};",
	"name":"项目立项-非财报项目",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"nonReportProjectManage"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"非财报项目"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":342918
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log('BeforeLoadNonReportProjectManagePanel');
    var me = this;
    if (me.IsAdd) {
        // me.SetDownVisible('BusinessAgreement', true);//新增的时候业务约定书隐藏
        me.DownForCode('projectManagerId').SetValue(AppContext.Profile);
        if (AppContext.Profile.unitAttributes == 10 || AppContext.Profile.orgUnitAttributes == 10) {
            var headquartersReview = me.DownForCode("HeadquartersReview");
            if (headquartersReview) {
                headquartersReview.SetValue(10);
                headquartersReview.SetReadOnly(true);
                if (AppContext.Profile.orgUnitAttributes == 10) headquartersReview.SetVisible(true, false);
            }
        }
        return;
    }

    var params = {id: me.projectId};
    if (Framework.IsNotNullOrEmpty(me.select)) {
        params = me.select;
    }
    var projectForm = me.Down("form[basecode='nulReportProjectPage']").First;
    if (Framework.IsNullOrEmpty(projectForm)) return;
    if (Framework.IsNullOrEmpty(params.id)) return;
    projectForm.Data = params;
};

this.AfterLoad = function () {
    console.log('AfterLoadNonReportProjectManagePanel');
    var me = this;
    var riskLevel = me.DownForCode("RiskLevel");
    if (!riskLevel) return;
    var riskMessage = me.DownForCode("riskMessage");
    if (riskMessage && riskMessage.SetValue) {
        riskMessage.SetValue(riskLevel.GetSubmitValue())
    }

    if (!me.IsAdd) {
        var headquartersReview = me.DownForCode("HeadquartersReview");
        if (headquartersReview) {
            var orgUnitAttributes = me.DownForCode("DeptId_OrgId_UnitAttributes");
            if (orgUnitAttributes && orgUnitAttributes.GetValue() == 10) headquartersReview.SetVisible(true, false);
        }
    }

};

 

};"
		},
		{
			"isHide":false,
			"name":"BackButton",
			"value":"BackButton"
		}
	],
	"sort":0
}
{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":30350}],"sort":0}],"code":"projectTab","control":"Tab","dataPermission":[],"isReference":false,"javaScript":"","name":"主项目信息","otherChildren":[],"property":[{"isHide":false,"name":"ClassGroup","value":"CardA"}],"sort":4},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":18344}],"sort":0}],"code":"businessAgreement","control":"Tab","dataPermission":[],"isReference":false,"javaScript":"this.OnSelect&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AAAAAA&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!model)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;model.Down(&quot;[basecode='projectPage']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!projectForm)&nbsp;return;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;projectForm.DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectId))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;engagement&nbsp;=&nbsp;me.DownForCode(&quot;engagements&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(engagement))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'projectId',&nbsp;value:&nbsp;projectId});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'formId',&nbsp;value:&nbsp;engagement.formid});\n&nbsp;&nbsp;&nbsp;&nbsp;engagement.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;engagement.Load();\n};","name":"业务约定书","otherChildren":[],"property":[{"isHide":false,"name":"AuthorityRemark","value":"非财报项目业务约定书页签"},{"isHide":false,"name":"ClassGroup","value":"CardB"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnSelect&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AAAAAA&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!model)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;model.Down(&quot;[basecode='projectPage']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!projectForm)&nbsp;return;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;projectForm.DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectId))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;engagement&nbsp;=&nbsp;me.DownForCode(&quot;engagements&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(engagement))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'projectId',&nbsp;value:&nbsp;projectId});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'formId',&nbsp;value:&nbsp;engagement.formid});\n&nbsp;&nbsp;&nbsp;&nbsp;engagement.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;engagement.Load();\n};\r\n \r\n};"}],"sort":6},{"action":[],"authority":[],"children":[],"code":"apply","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"申请修改标记","otherChildren":[],"property":[],"sort":2},{"action":[],"authority":[],"children":[],"code":"riskMessage","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级变化记录","otherChildren":[],"property":[],"sort":1}],"code":"formMainTabs","control":"Tabs","dataPermission":[],"isReference":false,"name":"主选项卡","otherChildren":[],"property":[{"isHide":false,"name":"ClassGroup","value":"bRadiusA"},{"isHide":false,"name":"IsShowBackButton","value":"true"}],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"nonFinancialQuotation","control":"Panel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('BeforeLoadNonReportProjectManagePanel');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;me.SetDownVisible('BusinessAgreement',&nbsp;true);//新增的时候业务约定书隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.DownForCode('projectManagerId').SetValue(AppContext.Profile);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(AppContext.Profile.unitAttributes&nbsp;==&nbsp;10&nbsp;||&nbsp;AppContext.Profile.orgUnitAttributes&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;me.DownForCode(&quot;HeadquartersReview&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(headquartersReview)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(AppContext.Profile.orgUnitAttributes&nbsp;==&nbsp;10)&nbsp;headquartersReview.SetVisible(true,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{id:&nbsp;me.projectId};\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(me.select))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;me.select;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;me.Down(&quot;form[basecode='nulReportProjectPage']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectForm))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(params.id))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Data&nbsp;=&nbsp;params;\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoadNonReportProjectManagePanel');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;me.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!riskLevel)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskMessage&nbsp;=&nbsp;me.DownForCode(&quot;riskMessage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(riskMessage&nbsp;&&&nbsp;riskMessage.SetValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;riskMessage.SetValue(riskLevel.GetSubmitValue())\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;me.DownForCode(&quot;HeadquartersReview&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(headquartersReview)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributes&nbsp;&&&nbsp;orgUnitAttributes.GetValue()&nbsp;==&nbsp;10)&nbsp;headquartersReview.SetVisible(true,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};","name":"项目立项-非财报项目","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"nonReportProjectManage"},{"isHide":false,"name":"Name","value":"非财报项目"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":342918},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('BeforeLoadNonReportProjectManagePanel');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;me.SetDownVisible('BusinessAgreement',&nbsp;true);//新增的时候业务约定书隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.DownForCode('projectManagerId').SetValue(AppContext.Profile);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(AppContext.Profile.unitAttributes&nbsp;==&nbsp;10&nbsp;||&nbsp;AppContext.Profile.orgUnitAttributes&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;me.DownForCode(&quot;HeadquartersReview&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(headquartersReview)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(AppContext.Profile.orgUnitAttributes&nbsp;==&nbsp;10)&nbsp;headquartersReview.SetVisible(true,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{id:&nbsp;me.projectId};\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(me.select))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params&nbsp;=&nbsp;me.select;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;me.Down(&quot;form[basecode='nulReportProjectPage']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectForm))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(params.id))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Data&nbsp;=&nbsp;params;\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoadNonReportProjectManagePanel');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;me.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!riskLevel)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskMessage&nbsp;=&nbsp;me.DownForCode(&quot;riskMessage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(riskMessage&nbsp;&&&nbsp;riskMessage.SetValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;riskMessage.SetValue(riskLevel.GetSubmitValue())\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;me.DownForCode(&quot;HeadquartersReview&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(headquartersReview)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributes&nbsp;&&&nbsp;orgUnitAttributes.GetValue()&nbsp;==&nbsp;10)&nbsp;headquartersReview.SetVisible(true,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};\r\n \r\n};"},{"isHide":false,"name":"BackButton","value":"BackButton"}],"sort":0}
2020-04-25 16:02:44