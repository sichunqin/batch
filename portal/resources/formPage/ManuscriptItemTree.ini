{
	"action":[
		
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"manuscriptItemTree",
	"control":"Tree",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.OnSelected = function (node) {
 console.log("OnSelected 333");
    var panel = this.Top("[container='FormPanel']");
    if (Framework.IsNullOrEmpty(panel)) return;
    var itemGrid = panel.DownForCode('manuscriptItems');
    if (Framework.IsNullOrEmpty(itemGrid)) return;
    if (!itemGrid.Load) return;
    var params = [];
    if (Framework.IsNullOrEmpty(node)) {
        itemGrid.SetValue(params);
    }
    var btn =panel.DownForCode("btn_revision");
if(btn )
{
    if(node.delete){
        btn.className="papersBtnRed";
    }else{
       btn.className="papersBtn";
    }
}



    // params.auditworkProjectID = node.auditworkProjectID;
    // params.fiscalYear = node.fiscalYear;
    // params.parentStructureCode = node.code;
    // params.formId = itemGrid.formid;
    if (Framework.IsNullOrEmpty(node)) return;
    params.push({param: 'auditworkProjectID', value: node.auditworkProjectID});
    params.push({param: 'fiscalYear', value: node.fiscalYear});
    params.push({param: 'parentStructureCode', value: node.code});
    params.push({param: 'splitForFiscalYear', value: node.splitForFiscalYear});
    params.push({param: 'formId', value: itemGrid.formid});
    itemGrid.params = JSON.stringify(params);
    itemGrid.MainContainer = panel;
    itemGrid.Load()
    // Framework.AjaxRequest(me, "ManuscriptItem-getManuscriptItems.do", 'get', params, false, function (result) {
    //     itemGrid.SetValue(result);
    // });
};
this.BeforeLoad = function () {
    var me = this;
    if (Framework.IsNullOrEmpty(me.params)) return false;
};
this.BeforeAutoLoadRoot = function () {
    return false;
};
this.OnBeforeOnClick = function (node) {
    this.OnSelected(node);
    return false;
};

this.RenderNodeStyle = function (node) {
    var me = this;

    var top1 =this.Top('[basecode="qualityReview"]') ;
    if(Framework.IsNullOrEmpty(top1) || !top1.DownForCode)
    {
        return;
    }
    console.log("BeforeLoad 底稿目录RenderNodeStyle ");
    if(Framework.IsNullOrEmpty(top1.curstate))
    {
        var tree =top1.DownForCode("compositionCustomerTreeQ");
        if(tree.GetSelected().docStateAllE == "70")
        {
            return
        }
    }
    if(node.target && node.children.length == 0 && node.addModfy && (Framework.IsNullOrEmpty(top1.curstate) || top1.curstate !=40))
    {
        var dom = node.target;
        dom.find(".tree-title").css("color", "#e41303");
    }
};

this.AfterLoad = function () {
    var me = this;
    console.log('AfterLoad 222');
    if(me.refresh)
    {
        if (!me.LoadData) return;
        var node = Framework.TreeDataFirst(me.LoadData, 'id', me.defaultid);
        if (node) {
            me.LocateNodeSelect(node);
        }
        me.refresh=false;
    }
};
",
	"name":"底稿目录",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"manuscriptItemTree"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"底稿目录"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":23614
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.OnSelected = function (node) {
 console.log("OnSelected 333");
    var panel = this.Top("[container='FormPanel']");
    if (Framework.IsNullOrEmpty(panel)) return;
    var itemGrid = panel.DownForCode('manuscriptItems');
    if (Framework.IsNullOrEmpty(itemGrid)) return;
    if (!itemGrid.Load) return;
    var params = [];
    if (Framework.IsNullOrEmpty(node)) {
        itemGrid.SetValue(params);
    }
    var btn =panel.DownForCode("btn_revision");
if(btn )
{
    if(node.delete){
        btn.className="papersBtnRed";
    }else{
       btn.className="papersBtn";
    }
}



    // params.auditworkProjectID = node.auditworkProjectID;
    // params.fiscalYear = node.fiscalYear;
    // params.parentStructureCode = node.code;
    // params.formId = itemGrid.formid;
    if (Framework.IsNullOrEmpty(node)) return;
    params.push({param: 'auditworkProjectID', value: node.auditworkProjectID});
    params.push({param: 'fiscalYear', value: node.fiscalYear});
    params.push({param: 'parentStructureCode', value: node.code});
    params.push({param: 'splitForFiscalYear', value: node.splitForFiscalYear});
    params.push({param: 'formId', value: itemGrid.formid});
    itemGrid.params = JSON.stringify(params);
    itemGrid.MainContainer = panel;
    itemGrid.Load()
    // Framework.AjaxRequest(me, "ManuscriptItem-getManuscriptItems.do", 'get', params, false, function (result) {
    //     itemGrid.SetValue(result);
    // });
};
this.BeforeLoad = function () {
    var me = this;
    if (Framework.IsNullOrEmpty(me.params)) return false;
};
this.BeforeAutoLoadRoot = function () {
    return false;
};
this.OnBeforeOnClick = function (node) {
    this.OnSelected(node);
    return false;
};

this.RenderNodeStyle = function (node) {
    var me = this;

    var top1 =this.Top('[basecode="qualityReview"]') ;
    if(Framework.IsNullOrEmpty(top1) || !top1.DownForCode)
    {
        return;
    }
    console.log("BeforeLoad 底稿目录RenderNodeStyle ");
    if(Framework.IsNullOrEmpty(top1.curstate))
    {
        var tree =top1.DownForCode("compositionCustomerTreeQ");
        if(tree.GetSelected().docStateAllE == "70")
        {
            return
        }
    }
    if(node.target && node.children.length == 0 && node.addModfy && (Framework.IsNullOrEmpty(top1.curstate) || top1.curstate !=40))
    {
        var dom = node.target;
        dom.find(".tree-title").css("color", "#e41303");
    }
};

this.AfterLoad = function () {
    var me = this;
    console.log('AfterLoad 222');
    if(me.refresh)
    {
        if (!me.LoadData) return;
        var node = Framework.TreeDataFirst(me.LoadData, 'id', me.defaultid);
        if (node) {
            me.LocateNodeSelect(node);
        }
        me.refresh=false;
    }
};


 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"ManuscriptItem"
		},
		{
			"isHide":false,
			"name":"queryUrl",
			"value":"/ManuscriptItem-getManuscriptItemDTO.do"
		},
		{
			"isHide":false,
			"name":"IsLoadRoot",
			"value":"false"
		}
	],
	"sort":0
}
{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"manuscriptItemTree","control":"Tree","dataPermission":[],"isReference":false,"javaScript":"this.OnSelected&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;console.log(&quot;OnSelected&nbsp;333&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(panel))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemGrid&nbsp;=&nbsp;panel.DownForCode('manuscriptItems');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemGrid))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemGrid.Load)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.SetValue(params);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;btn&nbsp;=panel.DownForCode(&quot;btn_revision&quot;);\nif(btn&nbsp;)\n{\n&nbsp;&nbsp;&nbsp;&nbsp;if(node.delete){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;btn.className=&quot;papersBtnRed&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;btn.className=&quot;papersBtn&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.auditworkProjectID&nbsp;=&nbsp;node.auditworkProjectID;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.fiscalYear&nbsp;=&nbsp;node.fiscalYear;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.parentStructureCode&nbsp;=&nbsp;node.code;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.formId&nbsp;=&nbsp;itemGrid.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'auditworkProjectID',&nbsp;value:&nbsp;node.auditworkProjectID});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'fiscalYear',&nbsp;value:&nbsp;node.fiscalYear});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'parentStructureCode',&nbsp;value:&nbsp;node.code});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'splitForFiscalYear',&nbsp;value:&nbsp;node.splitForFiscalYear});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'formId',&nbsp;value:&nbsp;itemGrid.formid});\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.MainContainer&nbsp;=&nbsp;panel;\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.Load()\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ManuscriptItem-getManuscriptItems.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;});\n};\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(me.params))&nbsp;return&nbsp;false;\n};\nthis.BeforeAutoLoadRoot&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\nthis.OnBeforeOnClick&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;this.OnSelected(node);\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\nthis.RenderNodeStyle&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;top1&nbsp;=this.Top('[basecode=&quot;qualityReview&quot;]')&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(top1)&nbsp;||&nbsp;!top1.DownForCode)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforeLoad&nbsp;底稿目录RenderNodeStyle&nbsp;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(top1.curstate))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=top1.DownForCode(&quot;compositionCustomerTreeQ&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tree.GetSelected().docStateAllE&nbsp;==&nbsp;&quot;70&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(node.target&nbsp;&&&nbsp;node.children.length&nbsp;==&nbsp;0&nbsp;&&&nbsp;node.addModfy&nbsp;&&&nbsp;(Framework.IsNullOrEmpty(top1.curstate)&nbsp;||&nbsp;top1.curstate&nbsp;!=40))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dom&nbsp;=&nbsp;node.target;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dom.find(&quot;.tree-title&quot;).css(&quot;color&quot;,&nbsp;&quot;#e41303&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoad&nbsp;222');\n&nbsp;&nbsp;&nbsp;&nbsp;if(me.refresh)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'id',&nbsp;me.defaultid);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.LocateNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.refresh=false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n","name":"底稿目录","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"manuscriptItemTree"},{"isHide":false,"name":"Name","value":"底稿目录"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":23614},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnSelected&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;console.log(&quot;OnSelected&nbsp;333&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(panel))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemGrid&nbsp;=&nbsp;panel.DownForCode('manuscriptItems');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemGrid))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemGrid.Load)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.SetValue(params);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;btn&nbsp;=panel.DownForCode(&quot;btn_revision&quot;);\nif(btn&nbsp;)\n{\n&nbsp;&nbsp;&nbsp;&nbsp;if(node.delete){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;btn.className=&quot;papersBtnRed&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;btn.className=&quot;papersBtn&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.auditworkProjectID&nbsp;=&nbsp;node.auditworkProjectID;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.fiscalYear&nbsp;=&nbsp;node.fiscalYear;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.parentStructureCode&nbsp;=&nbsp;node.code;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;params.formId&nbsp;=&nbsp;itemGrid.formid;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'auditworkProjectID',&nbsp;value:&nbsp;node.auditworkProjectID});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'fiscalYear',&nbsp;value:&nbsp;node.fiscalYear});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'parentStructureCode',&nbsp;value:&nbsp;node.code});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'splitForFiscalYear',&nbsp;value:&nbsp;node.splitForFiscalYear});\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'formId',&nbsp;value:&nbsp;itemGrid.formid});\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.MainContainer&nbsp;=&nbsp;panel;\n&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.Load()\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ManuscriptItem-getManuscriptItems.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemGrid.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;});\n};\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(me.params))&nbsp;return&nbsp;false;\n};\nthis.BeforeAutoLoadRoot&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\nthis.OnBeforeOnClick&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;this.OnSelected(node);\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\nthis.RenderNodeStyle&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;top1&nbsp;=this.Top('[basecode=&quot;qualityReview&quot;]')&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(top1)&nbsp;||&nbsp;!top1.DownForCode)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforeLoad&nbsp;底稿目录RenderNodeStyle&nbsp;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(top1.curstate))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=top1.DownForCode(&quot;compositionCustomerTreeQ&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tree.GetSelected().docStateAllE&nbsp;==&nbsp;&quot;70&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(node.target&nbsp;&&&nbsp;node.children.length&nbsp;==&nbsp;0&nbsp;&&&nbsp;node.addModfy&nbsp;&&&nbsp;(Framework.IsNullOrEmpty(top1.curstate)&nbsp;||&nbsp;top1.curstate&nbsp;!=40))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dom&nbsp;=&nbsp;node.target;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dom.find(&quot;.tree-title&quot;).css(&quot;color&quot;,&nbsp;&quot;#e41303&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoad&nbsp;222');\n&nbsp;&nbsp;&nbsp;&nbsp;if(me.refresh)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'id',&nbsp;me.defaultid);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.LocateNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.refresh=false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"ManuscriptItem"},{"isHide":false,"name":"queryUrl","value":"/ManuscriptItem-getManuscriptItemDTO.do"},{"isHide":false,"name":"IsLoadRoot","value":"false"}],"sort":0}
2020-04-24 20:56:07