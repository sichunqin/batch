{
	"action":[
		
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"box",
			"control":"Text",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"纸质底稿盒号",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"Width",
					"value":"120"
				}
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"prompt",
			"control":"Text",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"提示",
			"otherChildren":[
				
			],
			"property":[
				{
					"container":"GridColumn",
					"isHide":false,
					"name":"Width",
					"value":"500"
				}
			],
			"sort":4
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"content",
			"control":"Text",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"内容",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":3
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"bookletRange",
			"control":"Text",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"纸质底稿册数",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"Width",
					"value":"120"
				}
			],
			"sort":2
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"readOnlyState",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"ReadOnlyState",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"selectAPaperManuscript",
	"control":"GridPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log("BeforLoad");
    //获取GridCombobox所在数据
    var data = this.Opener.SelectData;
    var params = [];
    params.push({param: 'manuScirptItemArchiveId', value: data.manuScirptItemArchiveId});
    if(Framework.IsNotNullOrEmpty(data.id))
    {
        params.push({param: 'borrowChildId', value: data.id});
    }
    this.params = JSON.stringify(params);
this.SetToolDisabledCheckbox(true);
};

this.LoadComplete = function () {
    //数据加载完成调用的方法
    var me = this;
    if (!me.Opener) return;
    var selectData = me.Opener.SelectData;
    if (!selectData) return;
    if (!selectData.borrowGrandsons) return;
    var grands = selectData.borrowGrandsons.ParseJson();
    var first = grands.Find("StateType", "Deleted");
    if (first)
        grands.Remove("StateType", "Deleted");
    //rows是要选中的对象集合,第二个是需做唯一匹配的属性
    this.SetCheckRows(grands, "boxAndNumberBookId");
};

this.DisableClickRow = function (index, row) {
    console.log("DisableClickRow");
    if(row.readOnlyState == true)
        return true;
    // if (index == 0)
    //     return true;
}

this.AfterRowCheck = function (index, row, checked) {
/☆
    var me = this;
    if (checked) return;
    if (!me.Opener) return;
    var selectData = me.Opener.SelectData;
    if (!selectData) return;
    if (!selectData.borrowGrandsons) return;
    var grands = selectData.borrowGrandsons.ParseJson();
    var first = grands.Find("boxAndNumberBookId", row["boxAndNumberBookId"]);
    if (first) {
        if (first.timestamp)
            first.StateType = "Deleted";
        else
            grands.Remove("boxAndNumberBookId", first.boxAndNumberBookId);

        selectData.borrowGrandsons = grands.ToJson();
    }
☆/
}

",
	"name":"选择纸质底稿",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"selectAPaperManuscript"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"选择纸质底稿"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":342822
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log("BeforLoad");
    //获取GridCombobox所在数据
    var data = this.Opener.SelectData;
    var params = [];
    params.push({param: 'manuScirptItemArchiveId', value: data.manuScirptItemArchiveId});
    if(Framework.IsNotNullOrEmpty(data.id))
    {
        params.push({param: 'borrowChildId', value: data.id});
    }
    this.params = JSON.stringify(params);
this.SetToolDisabledCheckbox(true);
};

this.LoadComplete = function () {
    //数据加载完成调用的方法
    var me = this;
    if (!me.Opener) return;
    var selectData = me.Opener.SelectData;
    if (!selectData) return;
    if (!selectData.borrowGrandsons) return;
    var grands = selectData.borrowGrandsons.ParseJson();
    var first = grands.Find("StateType", "Deleted");
    if (first)
        grands.Remove("StateType", "Deleted");
    //rows是要选中的对象集合,第二个是需做唯一匹配的属性
    this.SetCheckRows(grands, "boxAndNumberBookId");
};

this.DisableClickRow = function (index, row) {
    console.log("DisableClickRow");
    if(row.readOnlyState == true)
        return true;
    // if (index == 0)
    //     return true;
}

this.AfterRowCheck = function (index, row, checked) {
/☆
    var me = this;
    if (checked) return;
    if (!me.Opener) return;
    var selectData = me.Opener.SelectData;
    if (!selectData) return;
    if (!selectData.borrowGrandsons) return;
    var grands = selectData.borrowGrandsons.ParseJson();
    var first = grands.Find("boxAndNumberBookId", row["boxAndNumberBookId"]);
    if (first) {
        if (first.timestamp)
            first.StateType = "Deleted";
        else
            grands.Remove("boxAndNumberBookId", first.boxAndNumberBookId);

        selectData.borrowGrandsons = grands.ToJson();
    }
☆/
}



 

};"
		},
		{
			"isHide":false,
			"name":"Checkbox",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"queryUrl",
			"value":"/BorrowGrandson-getBorrowGrandsonDTOList-Query.do"
		},
		{
			"isHide":false,
			"name":"IsGetChecked",
			"value":"true"
		}
	],
	"sort":0
}
{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"box","control":"Text","dataPermission":[],"isReference":false,"name":"纸质底稿盒号","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"120"}],"sort":0},{"action":[],"authority":[],"children":[],"code":"prompt","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"提示","otherChildren":[],"property":[{"container":"GridColumn","isHide":false,"name":"Width","value":"500"}],"sort":4},{"action":[],"authority":[],"children":[],"code":"content","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"内容","otherChildren":[],"property":[],"sort":3},{"action":[],"authority":[],"children":[],"code":"bookletRange","control":"Text","dataPermission":[],"isReference":false,"name":"纸质底稿册数","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"120"}],"sort":2},{"action":[],"authority":[],"children":[],"code":"readOnlyState","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"ReadOnlyState","otherChildren":[],"property":[],"sort":1},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"selectAPaperManuscript","control":"GridPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforLoad&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//获取GridCombobox所在数据\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;this.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'manuScirptItemArchiveId',&nbsp;value:&nbsp;data.manuScirptItemArchiveId});\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(data.id))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'borrowChildId',&nbsp;value:&nbsp;data.id});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;this.params&nbsp;=&nbsp;JSON.stringify(params);\nthis.SetToolDisabledCheckbox(true);\n};\n\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//数据加载完成调用的方法\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.Opener)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectData&nbsp;=&nbsp;me.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData.borrowGrandsons)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;selectData.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;grands.Find(&quot;StateType&quot;,&nbsp;&quot;Deleted&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;StateType&quot;,&nbsp;&quot;Deleted&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//rows是要选中的对象集合,第二个是需做唯一匹配的属性\n&nbsp;&nbsp;&nbsp;&nbsp;this.SetCheckRows(grands,&nbsp;&quot;boxAndNumberBookId&quot;);\n};\n\nthis.DisableClickRow&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;DisableClickRow&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(row.readOnlyState&nbsp;==&nbsp;true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(index&nbsp;==&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\nthis.AfterRowCheck&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row,&nbsp;checked)&nbsp;{\n/*\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(checked)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.Opener)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectData&nbsp;=&nbsp;me.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData.borrowGrandsons)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;selectData.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;grands.Find(&quot;boxAndNumberBookId&quot;,&nbsp;row[&quot;boxAndNumberBookId&quot;]);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first.timestamp)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;first.boxAndNumberBookId);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectData.borrowGrandsons&nbsp;=&nbsp;grands.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n*/\n}\n\n","name":"选择纸质底稿","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"selectAPaperManuscript"},{"isHide":false,"name":"Name","value":"选择纸质底稿"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":342822},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforLoad&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//获取GridCombobox所在数据\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;this.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'manuScirptItemArchiveId',&nbsp;value:&nbsp;data.manuScirptItemArchiveId});\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(data.id))\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.push({param:&nbsp;'borrowChildId',&nbsp;value:&nbsp;data.id});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;this.params&nbsp;=&nbsp;JSON.stringify(params);\nthis.SetToolDisabledCheckbox(true);\n};\n\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//数据加载完成调用的方法\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.Opener)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectData&nbsp;=&nbsp;me.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData.borrowGrandsons)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;selectData.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;grands.Find(&quot;StateType&quot;,&nbsp;&quot;Deleted&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;StateType&quot;,&nbsp;&quot;Deleted&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//rows是要选中的对象集合,第二个是需做唯一匹配的属性\n&nbsp;&nbsp;&nbsp;&nbsp;this.SetCheckRows(grands,&nbsp;&quot;boxAndNumberBookId&quot;);\n};\n\nthis.DisableClickRow&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;DisableClickRow&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(row.readOnlyState&nbsp;==&nbsp;true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(index&nbsp;==&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\nthis.AfterRowCheck&nbsp;=&nbsp;function&nbsp;(index,&nbsp;row,&nbsp;checked)&nbsp;{\n/*\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(checked)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.Opener)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectData&nbsp;=&nbsp;me.Opener.SelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!selectData.borrowGrandsons)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;grands&nbsp;=&nbsp;selectData.borrowGrandsons.ParseJson();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;grands.Find(&quot;boxAndNumberBookId&quot;,&nbsp;row[&quot;boxAndNumberBookId&quot;]);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(first.timestamp)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.StateType&nbsp;=&nbsp;&quot;Deleted&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grands.Remove(&quot;boxAndNumberBookId&quot;,&nbsp;first.boxAndNumberBookId);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectData.borrowGrandsons&nbsp;=&nbsp;grands.ToJson();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n*/\n}\n\n\r\n \r\n};"},{"isHide":false,"name":"Checkbox","value":"true"},{"isHide":false,"name":"queryUrl","value":"/BorrowGrandson-getBorrowGrandsonDTOList-Query.do"},{"isHide":false,"name":"IsGetChecked","value":"true"}],"sort":0}
2020-04-17 16:12:56