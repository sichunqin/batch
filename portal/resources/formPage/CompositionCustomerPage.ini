{
	"action":[
		{
			"code":"PreservationFramework",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function () {
    var me = this;
    console.log("BeforeHandle222222r ");
    var apply = this.Top().DownForCode("apply").GetValue();
    var docState = this.Top().DownForCode('project').GetValue().docState.id;
    var compositionCustomer = this.Top("[code='center']").DownForCode("compositionCustomer");
    updateTree(me);
    if ((docState > 10 && docState < 100) && apply == 1) {
        var auditStart = this.Top("[code='center']").DownForCode("AuditStart").GetValue();
        var auditEnd = this.Top("[code='center']").DownForCode("AuditEnd").GetValue();
        var riskLevel = this.Top("[code='center']").DownForCode("RiskLevel").GetValue();
        var compositionCustomerOldDate = compositionCustomer.OldData;
        var riskLevels = Framework.IsNullOrEmpty(riskLevel.id) ? riskLevel : riskLevel.id;
        if (auditStart != compositionCustomerOldDate.auditStart || auditEnd != compositionCustomerOldDate.auditEnd || riskLevels != compositionCustomerOldDate.riskLevel) {
           Framework.Confirm("项目的风险等级或会计期间发生变更，保存后项目需要重新提交审批流程!", function () {
               compositionCustomer.Save();
              
            })
        }else {
            compositionCustomer.Save();
           
       }
    } else {
       compositionCustomer.Save();
      
    }
   
}

function updateTree(me){
var west=me.Top().DownForCode("west");
var tree = west.Down("[controltype='Tree']").First;
 var list = tree.GetArraySort(tree.GetTreeSort(tree.GetRoots()));
 var parameter = {};
 parameter.dto = JSON.stringify(list);
   var url = "/CompositionCustomer-saveTreeSort.do";
Framework.AjaxRequest(me, url, 'post', parameter, false, function () {
        
     });


}
this.AfterHandler = function () {
    console.log("baocun");
    var model = this.Top();
    var projectPanel = model.DownForCode('projectTab').Down("[controltype='FormPanel']").First;
    projectPanel.Load();
    var treePanel = model.DownForCode("TreePanel");

    if (treePanel && this.ParentNode && this.ParentNode.Data) {
        var tree = treePanel.DownForCode("compositionCustomer");
        if (tree) {
            tree.isloadroot = false;
            tree.defaultselected = this.ParentNode.Data;
        }
    }
}


 

};"
				}
			],
			"sort":0
		},
		{
			"code":"customDel",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"onDelete"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.onDelete = function () {
    var me = this;
    console.log(123);
    var obj = me.Up().Up().Up();
    var companyRelationship=obj.DownForCode("CompanyRelationship").GetValue();
    var tips;
    if (companyRelationship==20){
        tips="您确定删除分公司吗？";
    }else if (companyRelationship==10) {
        tips="您确定删除子公司吗？";
    }else {
        Framework.Message("项目架构中母公司不允许删除!");
        return false;
    }
    Framework.Confirm(tips, function () {

        var parentId = obj.DownForCode("parentId");
        var apply = me.Top().DownForCode("apply").GetValue();
        var projectFram = me.Top().DownForCode('projectTab').Down("[controltype='FormPanel']").First;
        var tree = me.Top().Down("[controltype='Tree']").First;

        if (parentId.GetValue() == "null") {
            Framework.Message("项目架构中母公司不允许删除!");
            return false;
        } else {
            var dto = {}
            dto.Id = obj.DownForCode("Id").GetValue();
            var docstate= projectFram.DownForCode("docState")
            var stateArray = [30,31,32,33,34,35];
            if(stateArray.Contains(docstate.GetSubmitValue())){
                Framework.Confirm("项目的组织架构发生变更，需要重新提交审批流程!", function () {
                    dto.addAfterCompletion=1;
                    deleteData(tree,me,obj,dto);
                });
            }else{
                dto.addAfterCompletion=0;
                deleteData(tree,me,obj,dto);
            }
        }
    });
}
function deleteData(tree,me,obj,dto){
    var params={};
    params.dto = JSON.stringify(dto);
    Framework.AjaxRequest(me, "Project-DeleteCompositionCustomer.do", 'get',params , true, function (result) {
            Framework.Message("删除成功");
            me.Data={};
            obj.DownForCode("Id").SetValue([])
            tree.isloadroot = true;
            tree.defaultselected = null;
            tree.Load();
        },
        function (result) {
            Framework.Message(result);
        });
}



 

};"
				}
			],
			"sort":2
		},
		{
			"code":"ShowDetail",
			"name":"查看",
			"property":[
				
			],
			"sort":1
		},
		{
			"code":"Export",
			"container":"GridPanel",
			"name":"导出",
			"property":[
				
			],
			"sort":3
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isSubsidiaryReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"子公司是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":1
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsSubsidiaryReport",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsReport",
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"code",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目编号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Code",
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"showName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":300
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"ShowName",
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"firstOrContinuous",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否首次承接",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"UndertakeCount"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(UndertakeCount)]"
						}
					],
					"select":"FirstOrContinuous[Enum(UndertakeCount)]",
					"sort":22
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessType",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessType",
					"sort":17
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerType",
					"control":"TreeCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    console.log("客户类型")
    var me = this;
    isReadonly(me);
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue(this.GetValueText())
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {};
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetValue() + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
    }
}


function isReadonly(me) {
    console.log("dddddasdwd")
        var selectval = me.GetSelected();
        var button = me.Top().DownForCode("WorkFlowPass");
        var idModel = me.Top().DownForCode("Id");
         if(Framework.IsNotNullOrEmpty(button) || Framework.IsNotNullOrEmpty(idModel.GetValue())){
            return;
        }
        var firstOrContinuous = me.Up().DownForCode("firstOrContinuous");
        if (Framework.IsNotNullOrEmpty(selectval) && Framework.IsNotNullOrEmpty(firstOrContinuous)) {
            //不等于-1 就是true
            if (selectval.text.indexOf("首次承接") != -1) {
                firstOrContinuous.SetValue(10)
                firstOrContinuous.SetReadOnly(true)
            } else if (selectval.text.indexOf("连续承接") != -1) {
                firstOrContinuous.SetValue(20)
                firstOrContinuous.SetReadOnly(true)
            } else {
                var value = "";
                if (firstOrContinuous.form && firstOrContinuous.form.Data && firstOrContinuous.form.Data.firstOrContinuous)
                    value = firstOrContinuous.form.Data.firstOrContinuous;
                firstOrContinuous.SetValue(value)
                firstOrContinuous.SetReadOnly(false)
            }
        }
    }",
					"name":"客户类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"queryUrl",
							"value":"/risk-level/client-type/0"
						},
						{
							"isHide":false,
							"name":"textfield",
							"value":"treeName"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    console.log("客户类型")
    var me = this;
    isReadonly(me);
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue(this.GetValueText())
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {};
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetValue() + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
    }
}


function isReadonly(me) {
    console.log("dddddasdwd")
        var selectval = me.GetSelected();
        var button = me.Top().DownForCode("WorkFlowPass");
        var idModel = me.Top().DownForCode("Id");
         if(Framework.IsNotNullOrEmpty(button) || Framework.IsNotNullOrEmpty(idModel.GetValue())){
            return;
        }
        var firstOrContinuous = me.Up().DownForCode("firstOrContinuous");
        if (Framework.IsNotNullOrEmpty(selectval) && Framework.IsNotNullOrEmpty(firstOrContinuous)) {
            //不等于-1 就是true
            if (selectval.text.indexOf("首次承接") != -1) {
                firstOrContinuous.SetValue(10)
                firstOrContinuous.SetReadOnly(true)
            } else if (selectval.text.indexOf("连续承接") != -1) {
                firstOrContinuous.SetValue(20)
                firstOrContinuous.SetReadOnly(true)
            } else {
                var value = "";
                if (firstOrContinuous.form && firstOrContinuous.form.Data && firstOrContinuous.form.Data.firstOrContinuous)
                    value = firstOrContinuous.form.Data.firstOrContinuous;
                firstOrContinuous.SetValue(value)
                firstOrContinuous.SetReadOnly(false)
            }
        }
    }

 

};"
						}
					],
					"select":"CustomerType",
					"sort":15
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"totalAssets",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) &&Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);

            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}",
					"name":"资产总额",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":18
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"TotalAssets"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(TotalAssets)]"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) &&Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);

            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}

 

};"
						}
					],
					"select":"TotalAssets[Enum(TotalAssets)]",
					"sort":20
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"riskLevel",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"风险等级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"RiskLevel"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(RiskLevel)]"
						}
					],
					"select":"RiskLevel[Enum(RiskLevel)]",
					"sort":21
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectManagerId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (oldVal, newVal) {
    var model = this.UpForCode("compositionCustomer");
    var first = model.Down("[controltype='GridPanel']").First;
console.log(first)
    var panel = model.Down("[controltype='FormPanel']").First;
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    params.signatureOfindependence =newVal.signatureOfindependence;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            //panel.Load();
        });
}
",
					"name":"项目经理",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"ProjectMangerSelecter"
						},
						{
							"isHide":false,
							"name":"Params",
							"value":"{param:'projectId',fieldId:'projectId'}"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldVal, newVal) {
    var model = this.UpForCode("compositionCustomer");
    var first = model.Down("[controltype='GridPanel']").First;
console.log(first)
    var panel = model.Down("[controltype='FormPanel']").First;
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    params.signatureOfindependence =newVal.signatureOfindependence;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            //panel.Load();
        });
}


 

};"
						}
					],
					"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]",
					"sort":23
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"manuscriptTemplate",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"底稿模板",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ManuscriptTemplate"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ManuscriptTemplate)]"
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						}
					],
					"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]",
					"sort":24
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"parentId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"上级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"CompositionCustomer"
						}
					],
					"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]",
					"sort":25
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(Project|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"Project"
						}
					],
					"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]",
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"companyRelationship",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"关系",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"Relationship"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(Relationship)]"
						}
					],
					"select":"CompanyRelationship[Enum(Relationship)]",
					"sort":19
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeText",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":18
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerTypeValue",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户类型value",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"CustomerTypeValue",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeValue",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessTypeValue",
					"sort":16
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditStart",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(开始)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"AuditStart",
							"sort":10
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditEnd",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(结束)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"AuditEnd",
							"sort":11
						}
					],
					"code":"datefw",
					"control":"DateTimeGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"会计期间",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":13
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"DetailColumns",
					"value":"2"
				}
			],
			"sort":1
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"dataPermission":[
								
							],
							"isReference":false,
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":true,
									"name":"referenceFormId",
									"value":17283
								}
							],
							"sort":0
						}
					],
					"code":"fieldPanel",
					"control":"Panel",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"表格容器",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":2
				}
			],
			"code":"fieldSet1",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"项目组成员",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":8
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"essentialInformation",
			"control":"PanelTitle",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"| 基本信息",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"style:color",
					"value":"#39a1d8"
				},
				{
					"isHide":false,
					"name":"style:margin",
					"value":"10px 20px"
				}
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"compositionCustomerPage",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log("项目组成部门")
    var me = this;
    var title = this.Top();
    var projectTab = title.DownForCode('projectTab');
    var docState = projectTab.DownForCode("docState").GetSubmitValue();
    var isMotifySubmit = projectTab.DownForCode("isMotifySubmit").GetValue();//是否修改后进行提交
    var apply = title.DownForCode("apply").GetValue();
    var manger = me.DownForCode("ProjectManagerId")
    var model = me.Up().Up().Up();
    var west = model.DownForCode("compositionCustomer");
    var valModel = west.GetSelected();
    if (Framework.IsNullOrEmpty(valModel)) return false;
    var projectCode = me.DownForCode("Code");
    var AuditStart = me.DownForCode("AuditStart");
    var AuditEnd = me.DownForCode("AuditEnd");
    var projectName = me.DownForCode("ShowName");
    var CustomerType = me.DownForCode("CustomerType");
    var BusinessType = me.DownForCode("BusinessType");
    var FirstOrContinuous = me.DownForCode("FirstOrContinuous");
    var TotalAssets = me.DownForCode("TotalAssets");
    var RiskLevel = me.DownForCode("RiskLevel");
    var ProjectManagerId = me.DownForCode("ProjectManagerId");
    var BusinessTypeText = me.DownForCode("BusinessTypeValue");
    //  me .DownForCode('compositionMemberss').Load();
    if (docState > 0) {
        if (apply == 1) {
            if ((docState >= 30 && docState < 70) || docState == 10) {
                LinkButton(me, false);
                control(me, false, 1);
            }
        } else {
            if ((docState >= 20 && docState < 70)) {
                LinkButton(me, true);
                control(me, true, 0);
            } else if (docState == 10) {
                LinkButton(me, false);
                control(me, false, 1);
            } else if (docState == 11) {
                if (isMotifySubmit == 1) {
                    LinkButton(me, true);
                    control(me, true, 0);
                }else{
                    LinkButton(me, false);
                    control(me, false, 1);
                }
            }
        }
    }
    if (valModel.parentId == null) {
        manger.SetReadOnly(false);
        var isReport = me.DownForCode("isReport");
        isReport.SetVisible(true);
        isReport.parentElement.children[1].style.width= "24.5%"
        var isSubsidiaryReport = me.DownForCode("isSubsidiaryReport");
        me.DownForCode("isSubsidiaryReport").SetVisible(false);
isSubsidiaryReport.parentElement.children[1].style.width= "24.5%"
        projectCode.SetReadOnly(true);
        CustomerType.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(true);
        AuditStart.SetReadOnly(true);
        AuditEnd.SetReadOnly(true);
    } else {
        var isReport = me.DownForCode("isReport");
        var boovalue = true;
        if (apply == 1) {
            boovalue = false;
        } else {
            if (docState == 10 || docState == 100) {
                boovalue = false;
            }
             else if (docState == 11) {
                if (isMotifySubmit != 1) {
                    boovalue = false;
                }
            }
        }
        isReport.SetVisible(boovalue);
       
       isReport.parentElement.children[1].style.width= "24.5%"
        CustomerType.SetReadOnly(boovalue);
        manger.SetReadOnly(boovalue);
        TotalAssets.SetReadOnly(boovalue);
        FirstOrContinuous.SetReadOnly(boovalue);
        AuditStart.SetReadOnly(boovalue);
        AuditEnd.SetReadOnly(boovalue);
        ProjectManagerId.SetReadOnly(boovalue);

        var isSubsidiaryReport = me.DownForCode("isSubsidiaryReport");
        isSubsidiaryReport.SetVisible(true);
        projectCode.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
    }

};
function control(me, result, value) {
    var control = Framework.GetValueControl(me);
    for (i = 0; i < control.length; i++) {
        if (control[i].SetReadOnly) {
            if (value == 1 && (control[i].getAttribute("code") == "customerNameId" || control[i].getAttribute("code") == "projectStatus")) {
                control[i].SetReadOnly(true)
            } else {
                control[i].SetReadOnly(result)
            }
        }
    }
}

function LinkButton(me, result) {
    var LinkButtonArray = me.Down("[controltype='LinkButton']");
    for (i = 0; i < LinkButtonArray.length; i++) {
        LinkButtonArray[i].SetVisible(result);
    }
}

//反推客户类型
this.LoadComplete = function (data) {
  console.log("222")
    var me = this
   if (!data || Framework.IsNullOrEmpty(data.businessType)) return;
    var customerType = me.DownForCode("CustomerType");
    if (!customerType) return;
    customerType.queryurl = "/risk-level/client-type-business/" + data.businessType;
    customerType.LoadEnum();
}",
	"name":"组成部分卡片",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"compositionCustomerPage"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"组成部分卡片"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":16993
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log("项目组成部门")
    var me = this;
    var title = this.Top();
    var projectTab = title.DownForCode('projectTab');
    var docState = projectTab.DownForCode("docState").GetSubmitValue();
    var isMotifySubmit = projectTab.DownForCode("isMotifySubmit").GetValue();//是否修改后进行提交
    var apply = title.DownForCode("apply").GetValue();
    var manger = me.DownForCode("ProjectManagerId")
    var model = me.Up().Up().Up();
    var west = model.DownForCode("compositionCustomer");
    var valModel = west.GetSelected();
    if (Framework.IsNullOrEmpty(valModel)) return false;
    var projectCode = me.DownForCode("Code");
    var AuditStart = me.DownForCode("AuditStart");
    var AuditEnd = me.DownForCode("AuditEnd");
    var projectName = me.DownForCode("ShowName");
    var CustomerType = me.DownForCode("CustomerType");
    var BusinessType = me.DownForCode("BusinessType");
    var FirstOrContinuous = me.DownForCode("FirstOrContinuous");
    var TotalAssets = me.DownForCode("TotalAssets");
    var RiskLevel = me.DownForCode("RiskLevel");
    var ProjectManagerId = me.DownForCode("ProjectManagerId");
    var BusinessTypeText = me.DownForCode("BusinessTypeValue");
    //  me .DownForCode('compositionMemberss').Load();
    if (docState > 0) {
        if (apply == 1) {
            if ((docState >= 30 && docState < 70) || docState == 10) {
                LinkButton(me, false);
                control(me, false, 1);
            }
        } else {
            if ((docState >= 20 && docState < 70)) {
                LinkButton(me, true);
                control(me, true, 0);
            } else if (docState == 10) {
                LinkButton(me, false);
                control(me, false, 1);
            } else if (docState == 11) {
                if (isMotifySubmit == 1) {
                    LinkButton(me, true);
                    control(me, true, 0);
                }else{
                    LinkButton(me, false);
                    control(me, false, 1);
                }
            }
        }
    }
    if (valModel.parentId == null) {
        manger.SetReadOnly(false);
        var isReport = me.DownForCode("isReport");
        isReport.SetVisible(true);
        isReport.parentElement.children[1].style.width= "24.5%"
        var isSubsidiaryReport = me.DownForCode("isSubsidiaryReport");
        me.DownForCode("isSubsidiaryReport").SetVisible(false);
isSubsidiaryReport.parentElement.children[1].style.width= "24.5%"
        projectCode.SetReadOnly(true);
        CustomerType.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(true);
        AuditStart.SetReadOnly(true);
        AuditEnd.SetReadOnly(true);
    } else {
        var isReport = me.DownForCode("isReport");
        var boovalue = true;
        if (apply == 1) {
            boovalue = false;
        } else {
            if (docState == 10 || docState == 100) {
                boovalue = false;
            }
             else if (docState == 11) {
                if (isMotifySubmit != 1) {
                    boovalue = false;
                }
            }
        }
        isReport.SetVisible(boovalue);
       
       isReport.parentElement.children[1].style.width= "24.5%"
        CustomerType.SetReadOnly(boovalue);
        manger.SetReadOnly(boovalue);
        TotalAssets.SetReadOnly(boovalue);
        FirstOrContinuous.SetReadOnly(boovalue);
        AuditStart.SetReadOnly(boovalue);
        AuditEnd.SetReadOnly(boovalue);
        ProjectManagerId.SetReadOnly(boovalue);

        var isSubsidiaryReport = me.DownForCode("isSubsidiaryReport");
        isSubsidiaryReport.SetVisible(true);
        projectCode.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
    }

};
function control(me, result, value) {
    var control = Framework.GetValueControl(me);
    for (i = 0; i < control.length; i++) {
        if (control[i].SetReadOnly) {
            if (value == 1 && (control[i].getAttribute("code") == "customerNameId" || control[i].getAttribute("code") == "projectStatus")) {
                control[i].SetReadOnly(true)
            } else {
                control[i].SetReadOnly(result)
            }
        }
    }
}

function LinkButton(me, result) {
    var LinkButtonArray = me.Down("[controltype='LinkButton']");
    for (i = 0; i < LinkButtonArray.length; i++) {
        LinkButtonArray[i].SetVisible(result);
    }
}

//反推客户类型
this.LoadComplete = function (data) {
  console.log("222")
    var me = this
   if (!data || Framework.IsNullOrEmpty(data.businessType)) return;
    var customerType = me.DownForCode("CustomerType");
    if (!customerType) return;
    customerType.queryurl = "/risk-level/client-type-business/" + data.businessType;
    customerType.LoadEnum();
}

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionCustomer"
		},
		{
			"container":"Window",
			"isHide":true,
			"name":"Height",
			"value":"800"
		},
		{
			"isHide":false,
			"name":"RenderDialog ",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"DisplayRule",
			"value":"{rule:'{0}-{1}',field:'code,name'}"
		},
		{
			"isHide":false,
			"name":"HelpPrompt",
			"value":""
		},
		{
			"isHide":false,
			"name":"classgroup",
			"value":"paddingRight"
		},
		{
			"isHide":false,
			"name":"IsShowRefresh",
			"value":"false"
		}
	],
	"sort":0
}
{"action":[{"code":"PreservationFramework","name":"保存","property":[{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;BeforeHandle222222r&nbsp;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;this.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;this.Top().DownForCode('project').GetValue().docState.id;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compositionCustomer&nbsp;=&nbsp;this.Top(&quot;[code='center']&quot;).DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;updateTree(me);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;100)&nbsp;&&&nbsp;apply&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditStart&nbsp;=&nbsp;this.Top(&quot;[code='center']&quot;).DownForCode(&quot;AuditStart&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditEnd&nbsp;=&nbsp;this.Top(&quot;[code='center']&quot;).DownForCode(&quot;AuditEnd&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;this.Top(&quot;[code='center']&quot;).DownForCode(&quot;RiskLevel&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compositionCustomerOldDate&nbsp;=&nbsp;compositionCustomer.OldData;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevels&nbsp;=&nbsp;Framework.IsNullOrEmpty(riskLevel.id)&nbsp;?&nbsp;riskLevel&nbsp;:&nbsp;riskLevel.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(auditStart&nbsp;!=&nbsp;compositionCustomerOldDate.auditStart&nbsp;||&nbsp;auditEnd&nbsp;!=&nbsp;compositionCustomerOldDate.auditEnd&nbsp;||&nbsp;riskLevels&nbsp;!=&nbsp;compositionCustomerOldDate.riskLevel)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;项目的风险等级或会计期间发生变更，保存后项目需要重新提交审批流程!&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compositionCustomer.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compositionCustomer.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compositionCustomer.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;\n}\n\nfunction&nbsp;updateTree(me){\nvar&nbsp;west=me.Top().DownForCode(&quot;west&quot;);\nvar&nbsp;tree&nbsp;=&nbsp;west.Down(&quot;[controltype='Tree']&quot;).First;\n&nbsp;var&nbsp;list&nbsp;=&nbsp;tree.GetArraySort(tree.GetTreeSort(tree.GetRoots()));\n&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;parameter.dto&nbsp;=&nbsp;JSON.stringify(list);\n&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;/CompositionCustomer-saveTreeSort.do&quot;;\nFramework.AjaxRequest(me,&nbsp;url,&nbsp;'post',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n\n}\nthis.AfterHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;baocun&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectPanel&nbsp;=&nbsp;model.DownForCode('projectTab').Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;projectPanel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;treePanel&nbsp;=&nbsp;model.DownForCode(&quot;TreePanel&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(treePanel&nbsp;&&&nbsp;this.ParentNode&nbsp;&&&nbsp;this.ParentNode.Data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;treePanel.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(tree)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.isloadroot&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.defaultselected&nbsp;=&nbsp;this.ParentNode.Data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\r\n \r\n};"}],"sort":0},{"code":"customDel","name":"删除","property":[{"isHide":false,"name":"OnClick","value":"onDelete"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.onDelete&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(123);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obj&nbsp;=&nbsp;me.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;companyRelationship=obj.DownForCode(&quot;CompanyRelationship&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tips;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(companyRelationship==20){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tips=&quot;您确定删除分公司吗？&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;if&nbsp;(companyRelationship==10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tips=&quot;您确定删除子公司吗？&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;项目架构中母公司不允许删除!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(tips,&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parentId&nbsp;=&nbsp;obj.DownForCode(&quot;parentId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;me.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectFram&nbsp;=&nbsp;me.Top().DownForCode('projectTab').Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;me.Top().Down(&quot;[controltype='Tree']&quot;).First;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(parentId.GetValue()&nbsp;==&nbsp;&quot;null&quot;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;项目架构中母公司不允许删除!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dto&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.Id&nbsp;=&nbsp;obj.DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docstate=&nbsp;projectFram.DownForCode(&quot;docState&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stateArray&nbsp;=&nbsp;[30,31,32,33,34,35];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(stateArray.Contains(docstate.GetSubmitValue())){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;项目的组织架构发生变更，需要重新提交审批流程!&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.addAfterCompletion=1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteData(tree,me,obj,dto);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dto.addAfterCompletion=0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteData(tree,me,obj,dto);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\nfunction&nbsp;deleteData(tree,me,obj,dto){\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params={};\n&nbsp;&nbsp;&nbsp;&nbsp;params.dto&nbsp;=&nbsp;JSON.stringify(dto);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-DeleteCompositionCustomer.do&quot;,&nbsp;'get',params&nbsp;,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;删除成功&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.Data={};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.DownForCode(&quot;Id&quot;).SetValue([])\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.isloadroot&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.defaultselected&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\n\r\n \r\n};"}],"sort":2},{"code":"ShowDetail","name":"查看","property":[],"sort":1},{"code":"Export","container":"GridPanel","name":"导出","property":[],"sort":3}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":3},{"action":[],"authority":[],"children":[],"code":"isSubsidiaryReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"子公司是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":1},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsSubsidiaryReport","sort":5},{"action":[],"authority":[],"children":[],"code":"isReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsReport","sort":6},{"action":[],"authority":[],"children":[],"code":"code","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目编号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Code","sort":9},{"action":[],"authority":[],"children":[],"code":"showName","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":300},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"ShowName","sort":12},{"action":[],"authority":[],"children":[],"code":"firstOrContinuous","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否首次承接","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"UndertakeCount"},{"isHide":false,"name":"EntityConfig","value":"[Enum(UndertakeCount)]"}],"select":"FirstOrContinuous[Enum(UndertakeCount)]","sort":22},{"action":[],"authority":[],"children":[],"code":"businessType","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessType","sort":17},{"action":[],"authority":[],"children":[],"code":"customerType","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;客户类型&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;isReadonly(me);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(this.GetValueText())\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nfunction&nbsp;isReadonly(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;dddddasdwd&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectval&nbsp;=&nbsp;me.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;button&nbsp;=&nbsp;me.Top().DownForCode(&quot;WorkFlowPass&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;idModel&nbsp;=&nbsp;me.Top().DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(button)&nbsp;||&nbsp;Framework.IsNotNullOrEmpty(idModel.GetValue())){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;firstOrContinuous&nbsp;=&nbsp;me.Up().DownForCode(&quot;firstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(selectval)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(firstOrContinuous))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//不等于-1&nbsp;就是true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(selectval.text.indexOf(&quot;首次承接&quot;)&nbsp;!=&nbsp;-1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(10)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(selectval.text.indexOf(&quot;连续承接&quot;)&nbsp;!=&nbsp;-1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(20)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(firstOrContinuous.form&nbsp;&&&nbsp;firstOrContinuous.form.Data&nbsp;&&&nbsp;firstOrContinuous.form.Data.firstOrContinuous)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;firstOrContinuous.form.Data.firstOrContinuous;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(value)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(false)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"queryUrl","value":"/risk-level/client-type/0"},{"isHide":false,"name":"textfield","value":"treeName"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;客户类型&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;isReadonly(me);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(this.GetValueText())\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nfunction&nbsp;isReadonly(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;dddddasdwd&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectval&nbsp;=&nbsp;me.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;button&nbsp;=&nbsp;me.Top().DownForCode(&quot;WorkFlowPass&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;idModel&nbsp;=&nbsp;me.Top().DownForCode(&quot;Id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(button)&nbsp;||&nbsp;Framework.IsNotNullOrEmpty(idModel.GetValue())){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;firstOrContinuous&nbsp;=&nbsp;me.Up().DownForCode(&quot;firstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(selectval)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(firstOrContinuous))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//不等于-1&nbsp;就是true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(selectval.text.indexOf(&quot;首次承接&quot;)&nbsp;!=&nbsp;-1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(10)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(selectval.text.indexOf(&quot;连续承接&quot;)&nbsp;!=&nbsp;-1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(20)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(firstOrContinuous.form&nbsp;&&&nbsp;firstOrContinuous.form.Data&nbsp;&&&nbsp;firstOrContinuous.form.Data.firstOrContinuous)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;firstOrContinuous.form.Data.firstOrContinuous;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetValue(value)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstOrContinuous.SetReadOnly(false)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n};"}],"select":"CustomerType","sort":15},{"action":[],"authority":[],"children":[],"code":"totalAssets","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}","name":"资产总额","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":18},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"TotalAssets"},{"isHide":false,"name":"EntityConfig","value":"[Enum(TotalAssets)]"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"select":"TotalAssets[Enum(TotalAssets)]","sort":20},{"action":[],"authority":[],"children":[],"code":"riskLevel","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"RiskLevel"},{"isHide":false,"name":"EntityConfig","value":"[Enum(RiskLevel)]"}],"select":"RiskLevel[Enum(RiskLevel)]","sort":21},{"action":[],"authority":[],"children":[],"code":"projectManagerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.UpForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;model.Down(&quot;[controltype='GridPanel']&quot;).First;\nconsole.log(first)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;model.Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;params.signatureOfindependence&nbsp;=newVal.signatureOfindependence;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n","name":"项目经理","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"Required","value":"true"},{"isHide":false,"name":"SchemaCode","value":"ProjectMangerSelecter"},{"isHide":false,"name":"Params","value":"{param:'projectId',fieldId:'projectId'}"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.UpForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;model.Down(&quot;[controltype='GridPanel']&quot;).First;\nconsole.log(first)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;model.Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;params.signatureOfindependence&nbsp;=newVal.signatureOfindependence;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\r\n \r\n};"}],"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]","sort":23},{"action":[],"authority":[],"children":[],"code":"manuscriptTemplate","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"底稿模板","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ManuscriptTemplate"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ManuscriptTemplate)]"},{"isHide":false,"name":"Required","value":"true"}],"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]","sort":24},{"action":[],"authority":[],"children":[],"code":"parentId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"上级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"}],"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]","sort":25},{"action":[],"authority":[],"children":[],"code":"projectId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Project|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Project"}],"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]","sort":4},{"action":[],"authority":[],"children":[],"code":"companyRelationship","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"关系","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"Relationship"},{"isHide":false,"name":"EntityConfig","value":"[Enum(Relationship)]"}],"select":"CompanyRelationship[Enum(Relationship)]","sort":19},{"action":[],"authority":[],"children":[],"code":"businessTypeText","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[],"sort":18},{"action":[],"authority":[],"children":[],"code":"customerTypeValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型value","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"CustomerTypeValue","sort":14},{"action":[],"authority":[],"children":[],"code":"businessTypeValue","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessTypeValue","sort":16},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"auditStart","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(开始)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"AuditStart","sort":10},{"action":[],"authority":[],"children":[],"code":"auditEnd","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(结束)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"AuditEnd","sort":11}],"code":"datefw","control":"DateTimeGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间","otherChildren":[],"property":[],"sort":13}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"name":"列集合","otherChildren":[],"property":[{"isHide":false,"name":"DetailColumns","value":"2"}],"sort":1},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":17283}],"sort":0}],"code":"fieldPanel","control":"Panel","dataPermission":[],"isReference":false,"javaScript":"","name":"表格容器","otherChildren":[],"property":[],"sort":2}],"code":"fieldSet1","control":"FieldSet","dataPermission":[],"isReference":false,"name":"项目组成员","otherChildren":[],"property":[],"sort":8},{"action":[],"authority":[],"children":[],"code":"essentialInformation","control":"PanelTitle","dataPermission":[],"isReference":false,"name":"| 基本信息","otherChildren":[],"property":[{"isHide":false,"name":"style:color","value":"#39a1d8"},{"isHide":false,"name":"style:margin","value":"10px 20px"}],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"compositionCustomerPage","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;项目组成部门&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;title&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectTab&nbsp;=&nbsp;title.DownForCode('projectTab');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;projectTab.DownForCode(&quot;docState&quot;).GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isMotifySubmit&nbsp;=&nbsp;projectTab.DownForCode(&quot;isMotifySubmit&quot;).GetValue();//是否修改后进行提交\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;title.DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manger&nbsp;=&nbsp;me.DownForCode(&quot;ProjectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;west&nbsp;=&nbsp;model.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;valModel&nbsp;=&nbsp;west.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(valModel))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectCode&nbsp;=&nbsp;me.DownForCode(&quot;Code&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AuditStart&nbsp;=&nbsp;me.DownForCode(&quot;AuditStart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AuditEnd&nbsp;=&nbsp;me.DownForCode(&quot;AuditEnd&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectName&nbsp;=&nbsp;me.DownForCode(&quot;ShowName&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;me.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;me.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstOrContinuous&nbsp;=&nbsp;me.DownForCode(&quot;FirstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;me.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;me.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ProjectManagerId&nbsp;=&nbsp;me.DownForCode(&quot;ProjectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;me.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;me&nbsp;.DownForCode('compositionMemberss').Load();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((docState&nbsp;&gt;=&nbsp;30&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;70)&nbsp;||&nbsp;docState&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((docState&nbsp;&gt;=&nbsp;20&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;70))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;true,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;11)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isMotifySubmit&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;true,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valModel.parentId&nbsp;==&nbsp;null)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;me.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;).SetVisible(false);\nisSubsidiaryReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditStart.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditEnd.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;me.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boovalue&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;10&nbsp;||&nbsp;docState&nbsp;==&nbsp;100)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;11)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isMotifySubmit&nbsp;!=&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditStart.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditEnd.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(boovalue);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSubsidiaryReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};\nfunction&nbsp;control(me,&nbsp;result,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;control&nbsp;=&nbsp;Framework.GetValueControl(me);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;control.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(control[i].SetReadOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;==&nbsp;1&nbsp;&&&nbsp;(control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;customerNameId&quot;&nbsp;||&nbsp;control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;projectStatus&quot;))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nfunction&nbsp;LinkButton(me,&nbsp;result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;LinkButtonArray&nbsp;=&nbsp;me.Down(&quot;[controltype='LinkButton']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;LinkButtonArray.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButtonArray[i].SetVisible(result);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n//反推客户类型\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;(data)&nbsp;{\n&nbsp;&nbsp;console.log(&quot;222&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this\n&nbsp;&nbsp;&nbsp;if&nbsp;(!data&nbsp;||&nbsp;Framework.IsNullOrEmpty(data.businessType))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerType&nbsp;=&nbsp;me.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!customerType)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;customerType.queryurl&nbsp;=&nbsp;&quot;/risk-level/client-type-business/&quot;&nbsp;+&nbsp;data.businessType;\n&nbsp;&nbsp;&nbsp;&nbsp;customerType.LoadEnum();\n}","name":"组成部分卡片","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"compositionCustomerPage"},{"isHide":false,"name":"Name","value":"组成部分卡片"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":16993},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;项目组成部门&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;title&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectTab&nbsp;=&nbsp;title.DownForCode('projectTab');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;projectTab.DownForCode(&quot;docState&quot;).GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isMotifySubmit&nbsp;=&nbsp;projectTab.DownForCode(&quot;isMotifySubmit&quot;).GetValue();//是否修改后进行提交\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;title.DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manger&nbsp;=&nbsp;me.DownForCode(&quot;ProjectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;west&nbsp;=&nbsp;model.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;valModel&nbsp;=&nbsp;west.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(valModel))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectCode&nbsp;=&nbsp;me.DownForCode(&quot;Code&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AuditStart&nbsp;=&nbsp;me.DownForCode(&quot;AuditStart&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AuditEnd&nbsp;=&nbsp;me.DownForCode(&quot;AuditEnd&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectName&nbsp;=&nbsp;me.DownForCode(&quot;ShowName&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;me.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;me.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstOrContinuous&nbsp;=&nbsp;me.DownForCode(&quot;FirstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;me.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;me.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ProjectManagerId&nbsp;=&nbsp;me.DownForCode(&quot;ProjectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;me.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;me&nbsp;.DownForCode('compositionMemberss').Load();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((docState&nbsp;&gt;=&nbsp;30&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;70)&nbsp;||&nbsp;docState&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((docState&nbsp;&gt;=&nbsp;20&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;70))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;true,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;11)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isMotifySubmit&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;true,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButton(me,&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control(me,&nbsp;false,&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valModel.parentId&nbsp;==&nbsp;null)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;me.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;).SetVisible(false);\nisSubsidiaryReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditStart.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditEnd.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;me.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boovalue&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;10&nbsp;||&nbsp;docState&nbsp;==&nbsp;100)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(docState&nbsp;==&nbsp;11)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isMotifySubmit&nbsp;!=&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boovalue&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.parentElement.children[1].style.width=&nbsp;&quot;24.5%&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditStart.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuditEnd.SetReadOnly(boovalue);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(boovalue);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;me.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSubsidiaryReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};\nfunction&nbsp;control(me,&nbsp;result,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;control&nbsp;=&nbsp;Framework.GetValueControl(me);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;control.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(control[i].SetReadOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;==&nbsp;1&nbsp;&&&nbsp;(control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;customerNameId&quot;&nbsp;||&nbsp;control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;projectStatus&quot;))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nfunction&nbsp;LinkButton(me,&nbsp;result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;LinkButtonArray&nbsp;=&nbsp;me.Down(&quot;[controltype='LinkButton']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;LinkButtonArray.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkButtonArray[i].SetVisible(result);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n//反推客户类型\nthis.LoadComplete&nbsp;=&nbsp;function&nbsp;(data)&nbsp;{\n&nbsp;&nbsp;console.log(&quot;222&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this\n&nbsp;&nbsp;&nbsp;if&nbsp;(!data&nbsp;||&nbsp;Framework.IsNullOrEmpty(data.businessType))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerType&nbsp;=&nbsp;me.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!customerType)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;customerType.queryurl&nbsp;=&nbsp;&quot;/risk-level/client-type-business/&quot;&nbsp;+&nbsp;data.businessType;\n&nbsp;&nbsp;&nbsp;&nbsp;customerType.LoadEnum();\n}\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionCustomer"},{"container":"Window","isHide":true,"name":"Height","value":"800"},{"isHide":false,"name":"RenderDialog ","value":"true"},{"isHide":false,"name":"DisplayRule","value":"{rule:'{0}-{1}',field:'code,name'}"},{"isHide":false,"name":"HelpPrompt","value":""},{"isHide":false,"name":"classgroup","value":"paddingRight"},{"isHide":false,"name":"IsShowRefresh","value":"false"}],"sort":0}
2020-04-29 14:33:43