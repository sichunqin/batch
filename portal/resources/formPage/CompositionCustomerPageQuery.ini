{
	"action":[
		{
			"code":"Save",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

//this.BeforeHandler = function () {
//     var me = this;
//     var top = me.Top();
//     console.log("asdasdasd");
//     var compositionCustomerFormPanel = top.DownForCode("projectFrame").DownForCode("Center").DownForCode("compositionCustomer");;
//     var project = top.DownForCode("projectTab").DownForCode("project");
//     var apply = top.DownForCode("apply");
//     if (apply.GetValue() == "1") {
//         Progress.Task(function () {
//             compositionCustomerFormPanel.Save();
//             project.WorkFlowSubmit();
//             Progress.HideProgress();
//             return false;
//         });
//     } else {
//         Progress.Task(function () {
//             compositionCustomerFormPanel.Save();
//             Progress.HideProgress();
//             return false;
//         });
//     }
// }


this.AfterHandler = function () {
    console.log("baocun");
    var model = this.Top();
    var projectPanel = model.DownForCode('projectTab').Down("[controltype='FormPanel']").First
    projectPanel.Load();
    var treePanel = model.DownForCode("TreePanel");
    
    if (treePanel && this.ParentNode && this.ParentNode.Data) {
        var tree = treePanel.DownForCode("compositionCustomer");
        if (tree) {
            tree.isloadroot = false;
            tree.defaultselected = this.ParentNode.Data;
        }
    }
}



 

};"
				}
			],
			"sort":0
		},
		{
			"code":"ShowDetail",
			"name":"查看",
			"property":[
				
			],
			"sort":1
		},
		{
			"code":"customDel",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"onDelete"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.onDelete = function () {
    var me = this;
    console.log(123);
    Framework.Confirm("您确定删除子分公司吗？", function () {

        var obj = me.Up().Up().Up();
        var parentId = obj.DownForCode("parentId");
        var tree = me.Top().Down("[controltype='Tree']").First;
        var FormPanel = me.Top().Down("[controltype='FormPanel']").First;
        var content = me.Top().DownForCode('projectFrame');
        if (parentId.GetValue() == "null") {
            Framework.Message("项目架构中母公司不允许删除!");
            return false;
        } else {
            var params = {}
            params.primaryId = obj.DownForCode("Id").GetValue();
            Framework.AjaxRequest(me, "Project-DeleteCompositionCustomer.do", 'get', params, true, function (result) {
                    Framework.Message("删除成功");
                    tree.isloadroot = true;
                    tree.defaultselected = null;
                    content.Load();
                },
                function (result) {
                    Framework.Message(result);
                });
        }
    });
}

 

};"
				}
			],
			"sort":2
		},
		{
			"code":"Export",
			"container":"GridPanel",
			"name":"导出",
			"property":[
				
			],
			"sort":3
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(Project|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"Project"
						}
					],
					"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]",
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isSubsidiaryReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"子公司是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":1
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsSubsidiaryReport",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsReport",
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"code",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目编号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Code",
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"showName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":300
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"ShowName",
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditStart",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(开始)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"AuditStart",
							"sort":10
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditEnd",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(结束)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"AuditEnd",
							"sort":11
						}
					],
					"code":"datefw",
					"control":"DateTimeGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"会计期间",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerTypeValue",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户类型value",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"CustomerTypeValue",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerType",
					"control":"TreeCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"queryUrl",
							"value":"/risk-level/client-type/0"
						},
						{
							"isHide":false,
							"name":"textfield",
							"value":"treeName"
						}
					],
					"select":"CustomerType",
					"sort":15
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeValue",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessTypeValue",
					"sort":16
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessType",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessType",
					"sort":17
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeText",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":18
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"companyRelationship",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"关系",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"Relationship"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(Relationship)]"
						}
					],
					"select":"CompanyRelationship[Enum(Relationship)]",
					"sort":19
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"totalAssets",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);

            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}",
					"name":"资产总额",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":18
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"TotalAssets"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(TotalAssets)]"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);

            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}

 

};"
						}
					],
					"select":"TotalAssets[Enum(TotalAssets)]",
					"sort":20
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"riskLevel",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"风险等级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"RiskLevel"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(RiskLevel)]"
						}
					],
					"select":"RiskLevel[Enum(RiskLevel)]",
					"sort":21
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"firstOrContinuous",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否首次承接",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(UndertakeCount)]"
						},
						{
							"isHide":false,
							"name":"Enumtype",
							"value":"UndertakeCount"
						}
					],
					"select":"FirstOrContinuous[Enum(UndertakeCount)]",
					"sort":22
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectManagerId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (oldVal, newVal) {
    var model = this.UpForCode("compositionCustomer");
    var first = model.Down("[controltype='GridPanel']").First;
    var panel = model.Down("[controltype='FormPanel']").First;
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            //panel.Load();
        },
        function (result) {

        });
}
",
					"name":"项目经理",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"ProjectMangerSelecter"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldVal, newVal) {
    var model = this.UpForCode("compositionCustomer");
    var first = model.Down("[controltype='GridPanel']").First;
    var panel = model.Down("[controltype='FormPanel']").First;
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            //panel.Load();
        },
        function (result) {

        });
}


 

};"
						}
					],
					"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]",
					"sort":23
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"manuscriptTemplate",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"底稿模板",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ManuscriptTemplate"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ManuscriptTemplate)]"
						}
					],
					"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]",
					"sort":24
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"parentId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"上级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"CompositionCustomer"
						}
					],
					"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]",
					"sort":25
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"DetailColumns",
					"value":"2"
				}
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"dataPermission":[
								
							],
							"isReference":false,
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":true,
									"name":"referenceFormId",
									"value":17283
								}
							],
							"sort":0
						}
					],
					"code":"fieldPanel",
					"control":"Panel",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"表格容器",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"style:margin-top",
							"value":"20px"
						}
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"fieldTitle",
					"control":"PanelTitle",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"| 项目组成员",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":1
				}
			],
			"code":"fieldSet1",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"项目组成员",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"IsNtitle",
					"value":"true"
				}
			],
			"sort":8
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"compositionCustomerPageQuery",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log("项目组成部门");
me .DownForCode('compositionMemberss').Load();
};",
	"name":"项目架构（综合查询）",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"compositionCustomerPageQuery"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"项目架构"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":true
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":343079
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log("项目组成部门");
me .DownForCode('compositionMemberss').Load();
};

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionCustomer"
		},
		{
			"container":"Window",
			"isHide":true,
			"name":"Height",
			"value":"800"
		},
		{
			"isHide":false,
			"name":"RenderDialog ",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"DisplayRule",
			"value":"{rule:'{0}-{1}',field:'code,name'}"
		},
		{
			"isHide":false,
			"name":"HelpPrompt",
			"value":""
		}
	],
	"sort":0
}
{"action":[{"code":"Save","name":"保存","property":[{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\n//this.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;top&nbsp;=&nbsp;me.Top();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;asdasdasd&quot;);\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compositionCustomerFormPanel&nbsp;=&nbsp;top.DownForCode(&quot;projectFrame&quot;).DownForCode(&quot;Center&quot;).DownForCode(&quot;compositionCustomer&quot;);;\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;top.DownForCode(&quot;projectTab&quot;).DownForCode(&quot;project&quot;);\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;top.DownForCode(&quot;apply&quot;);\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply.GetValue()&nbsp;==&nbsp;&quot;1&quot;)&nbsp;{\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compositionCustomerFormPanel.Save();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;project.WorkFlowSubmit();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compositionCustomerFormPanel.Save();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n//&nbsp;}\n\n\nthis.AfterHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;baocun&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectPanel&nbsp;=&nbsp;model.DownForCode('projectTab').Down(&quot;[controltype='FormPanel']&quot;).First\n&nbsp;&nbsp;&nbsp;&nbsp;projectPanel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;treePanel&nbsp;=&nbsp;model.DownForCode(&quot;TreePanel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(treePanel&nbsp;&&&nbsp;this.ParentNode&nbsp;&&&nbsp;this.ParentNode.Data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;treePanel.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(tree)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.isloadroot&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.defaultselected&nbsp;=&nbsp;this.ParentNode.Data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\r\n \r\n};"}],"sort":0},{"code":"ShowDetail","name":"查看","property":[],"sort":1},{"code":"customDel","name":"删除","property":[{"isHide":false,"name":"OnClick","value":"onDelete"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.onDelete&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(123);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定删除子分公司吗？&quot;,&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obj&nbsp;=&nbsp;me.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parentId&nbsp;=&nbsp;obj.DownForCode(&quot;parentId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;me.Top().Down(&quot;[controltype='Tree']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FormPanel&nbsp;=&nbsp;me.Top().Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;content&nbsp;=&nbsp;me.Top().DownForCode('projectFrame');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(parentId.GetValue()&nbsp;==&nbsp;&quot;null&quot;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;项目架构中母公司不允许删除!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.primaryId&nbsp;=&nbsp;obj.DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-DeleteCompositionCustomer.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;删除成功&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.isloadroot&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.defaultselected&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":2},{"code":"Export","container":"GridPanel","name":"导出","property":[],"sort":3}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":3},{"action":[],"authority":[],"children":[],"code":"projectId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Project|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Project"}],"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]","sort":4},{"action":[],"authority":[],"children":[],"code":"isSubsidiaryReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"子公司是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":1},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsSubsidiaryReport","sort":5},{"action":[],"authority":[],"children":[],"code":"isReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsReport","sort":6},{"action":[],"authority":[],"children":[],"code":"code","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目编号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Code","sort":9},{"action":[],"authority":[],"children":[],"code":"showName","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":300},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"ShowName","sort":12},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"auditStart","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(开始)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"AuditStart","sort":10},{"action":[],"authority":[],"children":[],"code":"auditEnd","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(结束)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"AuditEnd","sort":11}],"code":"datefw","control":"DateTimeGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间","otherChildren":[],"property":[],"sort":13},{"action":[],"authority":[],"children":[],"code":"customerTypeValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型value","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"CustomerTypeValue","sort":14},{"action":[],"authority":[],"children":[],"code":"customerType","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"queryUrl","value":"/risk-level/client-type/0"},{"isHide":false,"name":"textfield","value":"treeName"}],"select":"CustomerType","sort":15},{"action":[],"authority":[],"children":[],"code":"businessTypeValue","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessTypeValue","sort":16},{"action":[],"authority":[],"children":[],"code":"businessType","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessType","sort":17},{"action":[],"authority":[],"children":[],"code":"businessTypeText","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[],"sort":18},{"action":[],"authority":[],"children":[],"code":"companyRelationship","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"关系","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"Relationship"},{"isHide":false,"name":"EntityConfig","value":"[Enum(Relationship)]"}],"select":"CompanyRelationship[Enum(Relationship)]","sort":19},{"action":[],"authority":[],"children":[],"code":"totalAssets","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}","name":"资产总额","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":18},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"TotalAssets"},{"isHide":false,"name":"EntityConfig","value":"[Enum(TotalAssets)]"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"select":"TotalAssets[Enum(TotalAssets)]","sort":20},{"action":[],"authority":[],"children":[],"code":"riskLevel","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"RiskLevel"},{"isHide":false,"name":"EntityConfig","value":"[Enum(RiskLevel)]"}],"select":"RiskLevel[Enum(RiskLevel)]","sort":21},{"action":[],"authority":[],"children":[],"code":"firstOrContinuous","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否首次承接","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Enum(UndertakeCount)]"},{"isHide":false,"name":"Enumtype","value":"UndertakeCount"}],"select":"FirstOrContinuous[Enum(UndertakeCount)]","sort":22},{"action":[],"authority":[],"children":[],"code":"projectManagerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.UpForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;model.Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;model.Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n","name":"项目经理","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"Required","value":"true"},{"isHide":false,"name":"SchemaCode","value":"ProjectMangerSelecter"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.UpForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;model.Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;model.Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\r\n \r\n};"}],"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]","sort":23},{"action":[],"authority":[],"children":[],"code":"manuscriptTemplate","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"底稿模板","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ManuscriptTemplate"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ManuscriptTemplate)]"}],"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]","sort":24},{"action":[],"authority":[],"children":[],"code":"parentId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"上级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"}],"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]","sort":25}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[{"isHide":false,"name":"DetailColumns","value":"2"}],"sort":0},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":17283}],"sort":0}],"code":"fieldPanel","control":"Panel","dataPermission":[],"isReference":false,"name":"表格容器","otherChildren":[],"property":[{"isHide":false,"name":"style:margin-top","value":"20px"}],"sort":2},{"action":[],"authority":[],"children":[],"code":"fieldTitle","control":"PanelTitle","dataPermission":[],"isReference":false,"name":"| 项目组成员","otherChildren":[],"property":[],"sort":1}],"code":"fieldSet1","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"项目组成员","otherChildren":[],"property":[{"isHide":false,"name":"IsNtitle","value":"true"}],"sort":8},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"compositionCustomerPageQuery","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;项目组成部门&quot;);\nme&nbsp;.DownForCode('compositionMemberss').Load();\n};","name":"项目架构（综合查询）","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"compositionCustomerPageQuery"},{"isHide":false,"name":"Name","value":"项目架构"},{"isHide":false,"name":"IsReadOnly","value":true},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":343079},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;项目组成部门&quot;);\nme&nbsp;.DownForCode('compositionMemberss').Load();\n};\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionCustomer"},{"container":"Window","isHide":true,"name":"Height","value":"800"},{"isHide":false,"name":"RenderDialog ","value":"true"},{"isHide":false,"name":"DisplayRule","value":"{rule:'{0}-{1}',field:'code,name'}"},{"isHide":false,"name":"HelpPrompt","value":""}],"sort":0}
2020-03-10 14:14:11