{
	"action":[
		{
			"code":"RunNext",
			"name":"处理",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"RunNextFun"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.RunNextFun = function () {

    var me = this;

    console.log('RunNextFun');

    var mainGrid = me.GetParent().GetParent();

    var selections = mainGrid.GetSelections();
    if(selections.length<=0) return;

    if (selections.length > 1) {
        Framework.Message("只能选择一条数据操作！");
        return;
    }

    var selected = mainGrid.GetSelected();
    if (Framework.IsNullOrEmpty(selected.uiFormCode)) Framework.Message("未找到流程表单！");

    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaCode = selected.uiFormCode;
    //parameter.schemaType = "FormPanel";
    parameter.readOnly = true;
    //parameter.reference = false;
    parameter.workItemId = selected.workitem_Id;

    var data = {};
    data.id = selected.entityId;
    data.workItemId = selected.workitem_Id;

    if (data.id) {
        Framework.OpenForm(mainGrid, url, parameter, function (form) {
            form.select=data;
            if (form.Load) form.Load(data);

        });
    }
};

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"ResendTodo",
			"name":"移交",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"onResendTodoClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.onResendTodoClick = function(){
    var me = this;
    var gridObj = me.Top().DownForCode('WR_MyTodoListHomePage');
    var selectedData = gridObj.GetSelections();
    //if(Framework.IsNullOrEmpty(selectedData)){
    if(selectedData.length == 0){
     Framework.Message('请至少选择一条数据');
     return false;
   }
   for(var i = 0;i < selectedData.length;i++){
     console.log(123123);
       if(selectedData[i].toDoType != '1'){
          Framework.Message('请选择移交给您的数据');
          return false;
       }
   }
    var url = "UIForm-Web-Schema.json";
    parameter = {};
    parameter.schemaType = "GridPanel";
    parameter.schemaCode = "ResendTodoUserSelect";
    Framework.OpenForm(me, url, parameter, function (form) {
       form.Load();
    });
}

 

};"
				}
			],
			"sort":1
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"departmentType",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"单据编号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						},
						{
							"isHide":false,
							"name":"IsRenderLink",
							"value":"true"
						}
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"workFlowName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"待审批事项",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						},
						{
							"isHide":false,
							"name":"align",
							"value":"left"
						},
						{
							"isHide":false,
							"name":"halign",
							"value":"left"
						}
					],
					"sort":0
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"toDoDescription",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"事项描述",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"400"
						},
						{
							"isHide":false,
							"name":"IsRenderLink",
							"value":"true"
						}
					],
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"submitBy",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"提交人",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"90"
						}
					],
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"department",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"部门",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"130"
						}
					],
					"sort":7
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"created_Time",
					"control":"Date",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"提交日期",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"130"
						}
					],
					"sort":8
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"taskinStance_Name",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"审批人角色",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"130"
						}
					],
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"monomerOrConsolidatedReport",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"单体/合并报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"130"
						}
					],
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"workitem_Id",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"审批流id",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Hidden",
							"value":"true"
						}
					],
					"sort":1
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"toDoType",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"待办类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Hidden",
							"value":"true"
						}
					],
					"sort":10
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列组",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":6
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"wR_MyTodoListHomePage",
	"control":"GridPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.AfterRender=function(){
    var me = this;
    var win = me.Up("[controltype='Window']");
    if(Framework.IsNullOrEmpty(win)) return;
    win.BeforeClose = function(){
        console.log("!!!");
        var homePageMyToDo=this.Opener.Top().DownForCode('homePageMyToDo');
        homePageMyToDo.Load();
    }
}

this.OpenLinkForm = function (row) {
    var me = this;
    console.log('RunNextFun');
    var selected = row;
    if (Framework.IsNullOrEmpty(selected.uiFormCode)) Framework.Message("未找到流程表单！");

    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaCode = selected.uiFormCode;
    //parameter.schemaType = "FormPanel";
    parameter.readOnly = true;
    parameter.workItemId = selected.workitem_Id;

    var data = {};
    data.id = selected.entityId;
    data.workItemId = selected.workitem_Id;

    if (data.id) {
        me.OpenEmbedForm(me, url, parameter, function (form) {
            form.IsWorkCenter = true;
            form.select = data;
            if (form.Load) form.Load(data);
        });
    }

};",
	"name":"我的待办复制",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"wR_MyTodoListHomePage"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"我的待办"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":343066
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"Created_Time"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.AfterRender=function(){
    var me = this;
    var win = me.Up("[controltype='Window']");
    if(Framework.IsNullOrEmpty(win)) return;
    win.BeforeClose = function(){
        console.log("!!!");
        var homePageMyToDo=this.Opener.Top().DownForCode('homePageMyToDo');
        homePageMyToDo.Load();
    }
}

this.OpenLinkForm = function (row) {
    var me = this;
    console.log('RunNextFun');
    var selected = row;
    if (Framework.IsNullOrEmpty(selected.uiFormCode)) Framework.Message("未找到流程表单！");

    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaCode = selected.uiFormCode;
    //parameter.schemaType = "FormPanel";
    parameter.readOnly = true;
    parameter.workItemId = selected.workitem_Id;

    var data = {};
    data.id = selected.entityId;
    data.workItemId = selected.workitem_Id;

    if (data.id) {
        me.OpenEmbedForm(me, url, parameter, function (form) {
            form.IsWorkCenter = true;
            form.select = data;
            if (form.Load) form.Load(data);
        });
    }

};

 

};"
		},
		{
			"isHide":false,
			"name":"queryUrl",
			"value":"/WorkFlow-GetMyTodoList.json"
		},
		{
			"isHide":false,
			"name":"Params",
			"value":"[{param:'ignoreProcessCode',value:'dgfhlczbcjbg,dgfhlc,dgfhlcfsyfsdmycjbg'}]"
		}
	],
	"sort":0
}
{"action":[{"code":"RunNext","name":"处理","property":[{"isHide":false,"name":"OnClick","value":"RunNextFun"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.RunNextFun&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('RunNextFun');\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mainGrid&nbsp;=&nbsp;me.GetParent().GetParent();\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selections&nbsp;=&nbsp;mainGrid.GetSelections();\n&nbsp;&nbsp;&nbsp;&nbsp;if(selections.length&lt;=0)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(selections.length&nbsp;&gt;&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;只能选择一条数据操作！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;mainGrid.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(selected.uiFormCode))&nbsp;Framework.Message(&quot;未找到流程表单！&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;selected.uiFormCode;\n&nbsp;&nbsp;&nbsp;&nbsp;//parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.readOnly&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;//parameter.reference&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;data.id&nbsp;=&nbsp;selected.entityId;\n&nbsp;&nbsp;&nbsp;&nbsp;data.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data.id)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(mainGrid,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.select=data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(data);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\r\n \r\n};"}],"sort":0},{"code":"ResendTodo","name":"移交","property":[{"isHide":false,"name":"OnClick","value":"onResendTodoClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.onResendTodoClick&nbsp;=&nbsp;function(){\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;gridObj&nbsp;=&nbsp;me.Top().DownForCode('WR_MyTodoListHomePage');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectedData&nbsp;=&nbsp;gridObj.GetSelections();\n&nbsp;&nbsp;&nbsp;&nbsp;//if(Framework.IsNullOrEmpty(selectedData)){\n&nbsp;&nbsp;&nbsp;&nbsp;if(selectedData.length&nbsp;==&nbsp;0){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('请至少选择一条数据');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;for(var&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;selectedData.length;i++){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(123123);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(selectedData[i].toDoType&nbsp;!=&nbsp;'1'){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('请选择移交给您的数据');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;ResendTodoUserSelect&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":1}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"departmentType","control":"Text","dataPermission":[],"isReference":false,"name":"单据编号","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"160"},{"isHide":false,"name":"IsRenderLink","value":"true"}],"sort":2},{"action":[],"authority":[],"children":[],"code":"workFlowName","control":"Text","dataPermission":[],"isReference":false,"name":"待审批事项","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"160"},{"isHide":false,"name":"align","value":"left"},{"isHide":false,"name":"halign","value":"left"}],"sort":0},{"action":[],"authority":[],"children":[],"code":"toDoDescription","control":"Text","dataPermission":[],"isReference":false,"name":"事项描述","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"400"},{"isHide":false,"name":"IsRenderLink","value":"true"}],"sort":3},{"action":[],"authority":[],"children":[],"code":"submitBy","control":"Text","dataPermission":[],"isReference":false,"name":"提交人","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"90"}],"sort":5},{"action":[],"authority":[],"children":[],"code":"department","control":"Text","dataPermission":[],"isReference":false,"name":"部门","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"130"}],"sort":7},{"action":[],"authority":[],"children":[],"code":"created_Time","control":"Date","dataPermission":[],"isReference":false,"name":"提交日期","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"130"}],"sort":8},{"action":[],"authority":[],"children":[],"code":"taskinStance_Name","control":"Text","dataPermission":[],"isReference":false,"name":"审批人角色","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"130"}],"sort":9},{"action":[],"authority":[],"children":[],"code":"monomerOrConsolidatedReport","control":"Text","dataPermission":[],"isReference":false,"name":"单体/合并报告","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"130"}],"sort":4},{"action":[],"authority":[],"children":[],"code":"workitem_Id","control":"Text","dataPermission":[],"isReference":false,"name":"审批流id","otherChildren":[],"property":[{"isHide":false,"name":"Hidden","value":"true"}],"sort":1},{"action":[],"authority":[],"children":[],"code":"toDoType","control":"Text","dataPermission":[],"isReference":false,"name":"待办类型","otherChildren":[],"property":[{"isHide":false,"name":"Hidden","value":"true"}],"sort":10}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列组","otherChildren":[],"property":[],"sort":6},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"wR_MyTodoListHomePage","control":"GridPanel","dataPermission":[],"isReference":false,"javaScript":"this.AfterRender=function(){\n&nbsp;&nbsp;&nbsp;&nbsp;var me = this;\n&nbsp;&nbsp;&nbsp;&nbsp;var win = me.Up(&quot;[controltype='Window']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(win)) return;\n&nbsp;&nbsp;&nbsp;&nbsp;win.BeforeClose = function(){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;!!!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;homePageMyToDo=this.Opener.Top().DownForCode('homePageMyToDo');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;homePageMyToDo.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.OpenLinkForm&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('RunNextFun');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;row;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(selected.uiFormCode))&nbsp;Framework.Message(&quot;未找到流程表单！&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;selected.uiFormCode;\n&nbsp;&nbsp;&nbsp;&nbsp;//parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.readOnly&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;data.id&nbsp;=&nbsp;selected.entityId;\n&nbsp;&nbsp;&nbsp;&nbsp;data.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data.id)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OpenEmbedForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.IsWorkCenter&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.select&nbsp;=&nbsp;data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};","name":"我的待办复制","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"wR_MyTodoListHomePage"},{"isHide":false,"name":"Name","value":"我的待办"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":343066},{"isHide":false,"name":"OrderBy","value":"Created_Time"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.AfterRender=function(){\n&nbsp;&nbsp;&nbsp;&nbsp;var me = this;\n&nbsp;&nbsp;&nbsp;&nbsp;var win = me.Up(&quot;[controltype='Window']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(win)) return;\n&nbsp;&nbsp;&nbsp;&nbsp;win.BeforeClose = function(){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;!!!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;homePageMyToDo=this.Opener.Top().DownForCode('homePageMyToDo');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;homePageMyToDo.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.OpenLinkForm&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('RunNextFun');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;row;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(selected.uiFormCode))&nbsp;Framework.Message(&quot;未找到流程表单！&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;selected.uiFormCode;\n&nbsp;&nbsp;&nbsp;&nbsp;//parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.readOnly&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;data.id&nbsp;=&nbsp;selected.entityId;\n&nbsp;&nbsp;&nbsp;&nbsp;data.workItemId&nbsp;=&nbsp;selected.workitem_Id;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data.id)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OpenEmbedForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.IsWorkCenter&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.select&nbsp;=&nbsp;data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n};\r\n \r\n};"},{"isHide":false,"name":"queryUrl","value":"/WorkFlow-GetMyTodoList.json"},{"isHide":false,"name":"Params","value":"[{param:'ignoreProcessCode',value:'dgfhlczbcjbg,dgfhlc,dgfhlcfsyfsdmycjbg'}]"}],"sort":0}
2020-04-04 19:30:40