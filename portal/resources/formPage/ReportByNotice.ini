{
	"action":[
		{
			"code":"Delete",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"ActionGroup",
					"value":"操作"
				},
				{
					"isHide":false,
					"name":"IsRenderColumn",
					"value":"true"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function(){
 if(!AppContext.Profile.departmentalAttributes){
      Framework.Message('职能部门,不允许维护报告');
      return false;
    }
}

 

};"
				}
			],
			"sort":3
		},
		{
			"code":"Save",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function () {
  var me = this;
  console.log("123");
   if(!AppContext.Profile.departmentalAttributes){
      Framework.Message('职能部门,不允许维护报告');
      return false;
    }
  var auditReportDate = me.Top().DownForCode('AuditReportDate');
  var reportIssue= me.Top().DownForCode('ReportIssue');
  var issueDeptId= me.Top().DownForCode('issueDeptId');

  if(auditReportDate  &&  auditReportDate.GetValue()){
     var array = auditReportDate.GetValue().split('-');
     var currentDate = new Date();
     if(currentDate.getFullYear() != array[0]){
           Framework.Message('审计报告日不能选除了当前年度的其它年');
           return false;
    }
  }
var tree = me.Top().Opener.Top().DownForCode("compositionCustomer");
    var selected = tree ? tree.GetSelected() : {};
    console.log(selected);
   var params = {'type':reportIssue.GetValue().id,'compositionId':selected.id};
  Framework.AjaxRequest(me, "Report-queryReportOfficeId.do", 'get', params, false, function (result) {
       issueDeptId.SetValue(result);
  })
}

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"ReportModify",
			"name":"申请修改",
			"property":[
				{
					"isHide":false,
					"name":"ConfirmMessage",
					"value":"申请修改将自动删除已做的报备及签章，此报告需重走审批流程！"
				},
				{
					"isHide":false,
					"name":"AuthorityRemark",
					"value":"业务报告-申请修改-按钮"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"ReportModifyClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.ReportModifyClick = function () {
    var me = this;
console.log("123");
     if(!AppContext.Profile.departmentalAttributes){
      Framework.Message('职能部门,不允许维护报告');
      return false;
    }
    var form = me.Top("[code='report']");
    var registFormId=form.DownForCode('registFormId')
    var registFormDocState=0;
    var parameter = {};      
        parameter.registFormId= registFormId.GetValue();   
        Framework.AjaxRequest(me, 'RegistForm-gainRegistFormDocState.do', 'get', parameter, false, function (result) {       
            registFormDocState= result;
    }); 
    if(registFormDocState == 20){
        Framework.Message("您还有未审批完成的业务报备流程，请确保流程结束后再进行修改!");
        return;
    }else{
    Framework.Confirm(me.confirmmessage, function () {
        var mes = "";
        var reportId = form.DownForCode("id");
        var reportCode = form.DownForCode("ReportCode");
        var projectShowName = form.DownForCode("ProjectShowName");
        Progress.Task(function () {

            var url = "UIForm-Web-Schema.json";
            parameter = {};
            parameter.schemaType = "FormPanel";
            parameter.schemaCode = "ReportModify";
            Framework.OpenForm(form, url, parameter, function (form) {
                var data = {}
                data.reportId = reportId.GetValue();
                data.reportId_reportCode = reportCode.GetValue();
                data.reportId_projectShowName = projectShowName.GetValue();
                if (form.SetValue) form.SetValue(data);
            });

        }, function () {
            if (Framework.IsNotNullOrEmpty(mes)) Framework.Message(mes);
        });
    });}
}

 

};"
				}
			],
			"sort":2
		},
		{
			"code":"Back",
			"name":"Back",
			"property":[
				{
					"isHide":false,
					"name":"ReadOnlyShow",
					"value":"true"
				}
			],
			"sort":1
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":36
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":0
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":43
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"projectShowName",
							"control":"Text",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"项目名称",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":500
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"select":"ProjectShowName",
							"sort":5
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_docstateAlle",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"底稿复核状态",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"ManuscriptReviewStateType"
								}
							],
							"sort":11
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_riskLevel",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"风险等级",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"RiskLevel"
								}
							],
							"sort":10
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportingStatus",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"报备状态",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"ReportingStatus"
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Enum(ReportingStatus)]"
								},
								{
									"isHide":false,
									"name":"DefaultValue",
									"value":"10"
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"select":"ReportingStatus[Enum(ReportingStatus)]",
							"sort":12
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_customerType",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"客户类型(值)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"sort":15
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_businessType",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"业务类型(值)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"sort":19
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"deptId",
							"control":"GridCombobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"部门",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Entity(Department|Code(Code)#Name(Name))]"
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"Department"
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"select":"DeptId[Entity(Department|Code(Code)#Name(Name))]",
							"sort":23
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_projectManagerId_name",
							"control":"Text",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"项目经理",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"sort":27
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"所属审计",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"CompositionCustomer"
								}
							],
							"select":"CompositionCustomerId",
							"sort":2
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"projectId",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"审计单位对应项目",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"Project"
								}
							],
							"select":"ProjectId",
							"sort":3
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_customerTypeValue",
							"control":"Text",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"客户类型",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"sort":17
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"compositionCustomerId_businessTypeValue",
							"control":"Text",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"业务类型",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"true"
								}
							],
							"sort":21
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"deptId_masterId",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"部门经理",
							"otherChildren":[
								
							],
							"property":[
								
							],
							"sort":25
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"registFormId",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"报备Id",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":18
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"RegistFormId",
							"sort":29
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"project_Dept_Org_UnitAttributes",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"单位属性",
							"otherChildren":[
								
							],
							"property":[
								
							],
							"sort":34
						}
					],
					"code":"fristColumnGroup",
					"control":"ColumnGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目信息",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"DetailColumns",
							"value":"3"
						}
					],
					"sort":31
				}
			],
			"code":"fristFieldSet",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"项目信息",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":33
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"businessSubclasses",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnChange = function (newValue, oldValue, isLoad) {
    var me = this;
    if (!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var isVisible = newValue == 1000 || newValue == 1001;
    var reportTypeId = form.DownForCode("reportTypeId");
    var reportCode = form.DownForCode("reportCode");
    var mergingMonomer = form.DownForCode("mergingMonomer");
    var auditOpinion = form.DownForCode("auditOpinion");
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var auditReportDate = form.DownForCode("auditReportDate");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var remarks = form.DownForCode("Remarks");

    //报告类型
    reportTypeId.SetVisible(isVisible);
    reportTypeId.SetRequired(!isVisible);
    var reportTypeValue = reportTypeId.GetValue();
\tconsole.log(reportTypeValue);
    var isVisReport = Framework.IsNotNullOrEmpty(reportTypeValue) && (reportTypeValue.code == "003" || reportTypeValue.code == "004" || reportTypeValue.code == "005" || reportTypeValue.code == "1000");
    if (form.IsManualReport)
        reportCode.SetVisible(true);
    else
        reportCode.SetVisible(isVisible);
    //合并\\单体
    mergingMonomer.SetVisible(isVisible || isVisReport);
    mergingMonomer.SetRequired(!(isVisible || isVisReport));
    //审核意见
    auditOpinion.SetVisible(isVisible || (Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字"));
    auditOpinion.SetRequired(!(isVisible || (Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字")));
    //签字合伙人
    signingPartnerId.SetVisible(isVisible);
    signingPartnerId.SetRequired(!isVisible);
    //签字会计师
    signingAccountantId.SetVisible(isVisible);
    signingAccountantId.SetRequired(!isVisible);
    //审计报告日
    auditReportDate.SetVisible(isVisible);
    auditReportDate.SetRequired(!isVisible);
    signingAccountantOtherId.SetVisible(isVisible);
    remarks.SetRequired(isVisible);
    var files = form.DownForCode("reportFiles");

    if (files) {
        if (isLoad) files.isMajor = isVisible;
        // if (Framework.IsNullOrEmpty(files.isMajor)) files.isMajor = isVisible;
        if (files.isMajor != isVisible) {
            var list = [];
            var notMajor = [10, 20, 30, 30, 30, 30, 30, 30];
            Framework.ForEach(files.GetValue(), function (item, index) {
                var row = Framework.CopyModel(item);
                row.fileType = isVisible ? files.GetReportType(40) : files.GetReportType(notMajor[index]);
                list.push(row);
            });
            if (list.length > 0)
                files.PushAllRow(list);
            files.isMajor = isVisible;
        }
    }
}

this.OnSelect = function (row) {
    var me = this;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var businessSubclassesValue = form.DownForCode("BusinessSubclassesValue");
    if (businessSubclassesValue)
        businessSubclassesValue.SetValue(row.text)
}",
							"name":"业务子类",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":4
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue, isLoad) {
    var me = this;
    if (!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var isVisible = newValue == 1000 || newValue == 1001;
    var reportTypeId = form.DownForCode("reportTypeId");
    var reportCode = form.DownForCode("reportCode");
    var mergingMonomer = form.DownForCode("mergingMonomer");
    var auditOpinion = form.DownForCode("auditOpinion");
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var auditReportDate = form.DownForCode("auditReportDate");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var remarks = form.DownForCode("Remarks");

    //报告类型
    reportTypeId.SetVisible(isVisible);
    reportTypeId.SetRequired(!isVisible);
    var reportTypeValue = reportTypeId.GetValue();
\tconsole.log(reportTypeValue);
    var isVisReport = Framework.IsNotNullOrEmpty(reportTypeValue) && (reportTypeValue.code == "003" || reportTypeValue.code == "004" || reportTypeValue.code == "005" || reportTypeValue.code == "1000");
    if (form.IsManualReport)
        reportCode.SetVisible(true);
    else
        reportCode.SetVisible(isVisible);
    //合并\\单体
    mergingMonomer.SetVisible(isVisible || isVisReport);
    mergingMonomer.SetRequired(!(isVisible || isVisReport));
    //审核意见
    auditOpinion.SetVisible(isVisible || (Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字"));
    auditOpinion.SetRequired(!(isVisible || (Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字")));
    //签字合伙人
    signingPartnerId.SetVisible(isVisible);
    signingPartnerId.SetRequired(!isVisible);
    //签字会计师
    signingAccountantId.SetVisible(isVisible);
    signingAccountantId.SetRequired(!isVisible);
    //审计报告日
    auditReportDate.SetVisible(isVisible);
    auditReportDate.SetRequired(!isVisible);
    signingAccountantOtherId.SetVisible(isVisible);
    remarks.SetRequired(isVisible);
    var files = form.DownForCode("reportFiles");

    if (files) {
        if (isLoad) files.isMajor = isVisible;
        // if (Framework.IsNullOrEmpty(files.isMajor)) files.isMajor = isVisible;
        if (files.isMajor != isVisible) {
            var list = [];
            var notMajor = [10, 20, 30, 30, 30, 30, 30, 30];
            Framework.ForEach(files.GetValue(), function (item, index) {
                var row = Framework.CopyModel(item);
                row.fileType = isVisible ? files.GetReportType(40) : files.GetReportType(notMajor[index]);
                list.push(row);
            });
            if (list.length > 0)
                files.PushAllRow(list);
            files.isMajor = isVisible;
        }
    }
}

this.OnSelect = function (row) {
    var me = this;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var businessSubclassesValue = form.DownForCode("BusinessSubclassesValue");
    if (businessSubclassesValue)
        businessSubclassesValue.SetValue(row.text)
}

 

};"
								}
							],
							"select":"BusinessSubclasses",
							"sort":6
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportIssue",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnSelect = function (row) {
    var me = this;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var reportIssueValue = form.DownForCode("reportIssueValue");
    if (reportIssueValue)
        reportIssueValue.SetValue(row.text)
}",
							"name":"总/分所出具报告",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":4
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnSelect = function (row) {
    var me = this;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var reportIssueValue = form.DownForCode("reportIssueValue");
    if (reportIssueValue)
        reportIssueValue.SetValue(row.text)
}

 

};"
								}
							],
							"select":"ReportIssue",
							"sort":7
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"mergingMonomer",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"合并/单体",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":4
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"MergingMonomer"
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Enum(MergingMonomer)]"
								}
							],
							"select":"MergingMonomer[Enum(MergingMonomer)]",
							"sort":9
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportCode",
							"control":"AutoCode",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"报告文号",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":200
								},
								{
									"isHide":false,
									"name":"Required",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":"false"
								}
							],
							"select":"ReportCode",
							"sort":14
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportTypeId",
							"control":"TreeCombobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnChange = function(){
    var form = me.Top("[container='FormPanel']");
    var auditOpinion = form.DownForCode("auditOpinion");
    var reportTypeId = form.DownForCode("reportTypeId");
    var reportTypeValue = reportTypeId.GetValue();
    auditOpinion.SetVisible(Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字");
    auditOpinion.SetRequired(!(Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字"));
}
this.AfterSetValue = function (value) {
    var me = this;
    console.log("AfterSetValue");
    var isValueNull = Framework.IsNullOrEmpty(value);
    if (isValueNull) value = {};

    var form = me.Top("[container='FormPanel']");
    if (!form) return;

    var auditOpinion = form.DownForCode("auditOpinion");
    var mergingMonomer = form.DownForCode("mergingMonomer");
    var reportTypeShortName = form.DownForCode("ReportTypeShortName");

    if (reportTypeShortName) reportTypeShortName.SetValue(value.shortName);

    var isVisible = isValueNull || value.code == "003" || value.code == "004" || value.code == "005" || value.code == "1000";
    mergingMonomer.SetVisible(isVisible,true);
    mergingMonomer.SetRequired(!isVisible);
    //审字报告类型的隐藏审批意见
    auditOpinion.SetVisible(value.code != "001");
    auditOpinion.SetRequired(value.code == "001");
}",
							"name":"报告类型",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":200
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Entity(ReportType|Code(Code)#Name(Name))]"
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"ReportType"
								},
								{
									"isHide":false,
									"name":"queryUrl",
									"value":"ReportType-Tree.json?query_isEnabled=true"
								},
								{
									"isHide":false,
									"name":"textfield",
									"value":"treeName"
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnChange = function(){
    var form = me.Top("[container='FormPanel']");
    var auditOpinion = form.DownForCode("auditOpinion");
    var reportTypeId = form.DownForCode("reportTypeId");
    var reportTypeValue = reportTypeId.GetValue();
    auditOpinion.SetVisible(Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字");
    auditOpinion.SetRequired(!(Framework.IsNotNullOrEmpty(reportTypeValue) && reportTypeValue.text!= "审字"));
}
this.AfterSetValue = function (value) {
    var me = this;
    console.log("AfterSetValue");
    var isValueNull = Framework.IsNullOrEmpty(value);
    if (isValueNull) value = {};

    var form = me.Top("[container='FormPanel']");
    if (!form) return;

    var auditOpinion = form.DownForCode("auditOpinion");
    var mergingMonomer = form.DownForCode("mergingMonomer");
    var reportTypeShortName = form.DownForCode("ReportTypeShortName");

    if (reportTypeShortName) reportTypeShortName.SetValue(value.shortName);

    var isVisible = isValueNull || value.code == "003" || value.code == "004" || value.code == "005" || value.code == "1000";
    mergingMonomer.SetVisible(isVisible,true);
    mergingMonomer.SetRequired(!isVisible);
    //审字报告类型的隐藏审批意见
    auditOpinion.SetVisible(value.code != "001");
    auditOpinion.SetRequired(value.code == "001");
}

 

};"
								}
							],
							"select":"ReportTypeId[Entity(ReportType|Code(Code)#Name(Name))]",
							"sort":16
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditOpinion",
							"control":"Combobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"审计意见",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":4
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"AuditOpinion"
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Enum(AuditOpinion)]"
								}
							],
							"select":"AuditOpinion[Enum(AuditOpinion)]",
							"sort":20
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"signingPartnerId",
							"control":"GridCombobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
   /☆ if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
          this.SetValue(null);
          Framework.Message("签字合伙人必须是具有证券签字资格的合伙人！");
     }☆/
    if(signingAccountantId.GetValue()){
       if(newValue.id==signingAccountantId.GetValue().id){
           this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantOtherId.GetValue()){
       if(newValue.id==signingAccountantOtherId.GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }

}",
							"name":"签字合伙人",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Entity(User|Code(Code)#Name(Name))]"
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"User"
								},
								{
									"isHide":false,
									"name":"SchemaCode",
									"value":"UserSelecterReportPersonnel"
								},
								{
									"isHide":false,
									"name":"Params",
									"value":"{param:'query_id',fieldId:'projectId'}
"
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
   /☆ if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
          this.SetValue(null);
          Framework.Message("签字合伙人必须是具有证券签字资格的合伙人！");
     }☆/
    if(signingAccountantId.GetValue()){
       if(newValue.id==signingAccountantId.GetValue().id){
           this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantOtherId.GetValue()){
       if(newValue.id==signingAccountantOtherId.GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }

}

 

};"
								}
							],
							"select":"SigningPartnerId[Entity(User|Code(Code)#Name(Name))]",
							"sort":24
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"signingAccountantId",
							"control":"GridCombobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
    /☆if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
     this.SetValue(null);
     Framework.Message("签字CPA必须是具有证券资格！");
    }☆/
    if(signingPartnerId .GetValue()){
       if(newValue.id==signingPartnerId .GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantOtherId.GetValue()){
       if(newValue.id==signingAccountantOtherId.GetValue().id){
          this.SetValue(null);
          Framework.Message("签字会计师人与签字会计师(可选)不能重复！");
       }
    }

}",
							"name":"签字会计师",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Entity(User|Code(Code)#Name(Name))]"
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"User"
								},
								{
									"isHide":false,
									"name":"SchemaCode",
									"value":"UserSelecterReportPerson"
								},
								{
									"isHide":false,
									"name":"Params",
									"value":"{param:'query_id',fieldId:'projectId'}
"
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
    /☆if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
     this.SetValue(null);
     Framework.Message("签字CPA必须是具有证券资格！");
    }☆/
    if(signingPartnerId .GetValue()){
       if(newValue.id==signingPartnerId .GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantOtherId.GetValue()){
       if(newValue.id==signingAccountantOtherId.GetValue().id){
          this.SetValue(null);
          Framework.Message("签字会计师人与签字会计师(可选)不能重复！");
       }
    }

}

 

};"
								}
							],
							"select":"SigningAccountantId[Entity(User|Code(Code)#Name(Name))]",
							"sort":26
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditReportDate",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.AfterRender = function () {
    var me = this;
    console.log("AuditReportDateAfterRender");
    var firstDay = Framework.Format("{0}-01-01", new Date().getFullYear());
    var lastDay = Framework.Format("{0}-12-31", new Date().getFullYear() + 1);
    me.SetInterval(firstDay, lastDay)
}",
							"name":"审计报告日",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.AfterRender = function () {
    var me = this;
    console.log("AuditReportDateAfterRender");
    var firstDay = Framework.Format("{0}-01-01", new Date().getFullYear());
    var lastDay = Framework.Format("{0}-12-31", new Date().getFullYear() + 1);
    me.SetInterval(firstDay, lastDay)
}

 

};"
								}
							],
							"select":"AuditReportDate",
							"sort":22
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"signingAccountantOtherId",
							"control":"GridCombobox",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
  /☆ if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
         this.SetValue(null);
          Framework.Message("签字CPA必须是具有证券资格！");
     }☆/
    if(signingPartnerId .GetValue()){
       if(newValue.id==signingPartnerId .GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantId.GetValue()){
       if(newValue.id==signingAccountantId.GetValue().id){
           this.SetValue(null);
          Framework.Message("签字会计师人与签字会计师(可选)不能重复！");
       }
    }

}",
							"name":"签字会计师（可选）",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Entity(User|Code(Code)#Name(Name))]"
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"User"
								},
								{
									"isHide":false,
									"name":"SchemaCode",
									"value":"UserSelecterReportPerson"
								},
								{
									"isHide":false,
									"name":"Params",
									"value":"{param:'query_id',fieldId:'projectId'}
"
								},
								{
									"isHide":false,
									"name":"JavaScript",
									"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldValue, newValue) {
    var me = this;
console.log("123");
    if(!newValue) return;
    var form = me.Top("[container='FormPanel']");
    if (!form) return;
    var signingPartnerId = form.DownForCode("signingPartnerId");
    var signingAccountantId = form.DownForCode("signingAccountantId");
    var signingAccountantOtherId = form.DownForCode("signingAccountantOtherId");
    var customerTypeValue= form.DownForCode("CompositionCustomerId_customerTypeValue");
  /☆ if(newValue.isSecuritiesSignature!=10 && customerTypeValue.GetValue().indexOf("非")==-1){
         this.SetValue(null);
          Framework.Message("签字CPA必须是具有证券资格！");
     }☆/
    if(signingPartnerId .GetValue()){
       if(newValue.id==signingPartnerId .GetValue().id){
          this.SetValue(null);
          Framework.Message("签章合伙人与签字会计师不能重复！");
       }
    }
    if(signingAccountantId.GetValue()){
       if(newValue.id==signingAccountantId.GetValue().id){
           this.SetValue(null);
          Framework.Message("签字会计师人与签字会计师(可选)不能重复！");
       }
    }

}

 

};"
								}
							],
							"select":"SigningAccountantOtherId[Entity(User|Code(Code)#Name(Name))]",
							"sort":28
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"remarks",
							"control":"TextArea",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"备注",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":500
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":true,
									"name":"Colspan",
									"value":"3"
								}
							],
							"select":"Remarks",
							"sort":30
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportIssueValue",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"总所/分所出具报告文本值",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":50
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"ReportIssueValue",
							"sort":8
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"reportTypeShortName",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"报告类型简称",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":200
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"Description",
									"value":"冗余字段，编码规则使用"
								}
							],
							"select":"ReportTypeShortName",
							"sort":18
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"docState",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"运营状态",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":16
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":true
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EnumType",
									"value":"ReportDocStatus"
								},
								{
									"isHide":false,
									"name":"EntityConfig",
									"value":"[Enum(ReportDocStatus)]"
								},
								{
									"isHide":false,
									"name":"DefaultValue",
									"value":"10"
								}
							],
							"select":"DocState[Enum(ReportDocStatus)]",
							"sort":32
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"businessSubclassesValue",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"业务子类值",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":200
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								}
							],
							"select":"BusinessSubclassesValue",
							"sort":4
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"year",
							"control":"Year",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"报告年度",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":4
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"FrontNum",
									"value":"2"
								},
								{
									"isHide":false,
									"name":"notthenyear",
									"value":"true"
								}
							],
							"select":"Year",
							"sort":13
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"issueDeptId",
							"control":"Hidden",
							"dataPermission":[
								
							],
							"isReference":false,
							"name":"出具报告总所/分所id",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":50
								},
								{
									"isHide":false,
									"name":"Required",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"EntityCode",
									"value":"Department"
								}
							],
							"select":"issueDeptId",
							"sort":1
						}
					],
					"code":"secondColumnGroup",
					"control":"ColumnGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"报告信息",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"DetailColumns",
							"value":"3"
						}
					],
					"sort":40
				}
			],
			"code":"secondFieldSet",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"报告信息",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":35
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"dataPermission":[
								
							],
							"isReference":true,
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":true,
									"name":"referenceFormId",
									"value":343102
								},
								{
									"isHide":false,
									"name":"MainParams",
									"value":"[{param:'reportId',fieldId:'id'}]"
								},
								{
									"isHide":false,
									"name":"MustParam",
									"value":"query_reportId"
								}
							],
							"sort":0
						}
					],
					"code":"reportFileTab",
					"control":"Tab",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"报告及附件",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":39
				}
			],
			"code":"thirdFieldSet",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"报告及附件",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":37
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"dataPermission":[
						
					],
					"isReference":false,
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":true,
							"name":"referenceFormId",
							"value":30504
						}
					],
					"sort":0
				}
			],
			"code":"fourthFieldSet",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"审批轨迹",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"style:min-height",
					"value":"200px"
				},
				{
					"isHide":false,
					"name":"IsWorkFlowHide",
					"value":"false"
				}
			],
			"sort":42
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"reportByNotice",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
     console.log("1211113");
    var me = this;
    var year = me.DownForCode("Year");
    var reportCode = me.DownForCode("ReportCode");
    if (me.IsAdd) {
        var projectFieldSet = me.DownForCode("fristFieldSet");
        if (projectFieldSet)
            projectFieldSet.SetChildrenValue(me.TreeSelected);
        var reportAnnex = me.DownForCode("reportFiles");
        if (reportAnnex && reportAnnex.AfterLoadData) {
            reportAnnex.AfterLoadData();
        }
        if (me.IsManualReport) {
            year.SetVisible(false);
            year.SetRequired(true);
            reportCode.SetVisible(true);
        } else {
            year.SetVisible(true,false);
            reportCode.SetVisible(false);
        }
    } else {
        year.SetVisible(true,false);
    }

    if (me.ToolBar) {
        var modify = me.ToolBar.DownForCode("Modify");
        if (modify && modify.OnClick && me.IsReportModify) {
            me.IsReportModify = false;
            modify.OnClick();
            return false;
        }
        var deleteBtn = me.ToolBar.DownForCode("Delete");
        if (deleteBtn) deleteBtn.SetVisible(true);
    }
}

this.AfterLoad = function () {
    var me = this;
    console.log("123");
    var doc = this.DownForCode("DocState");
    var businessSubclasses = me.DownForCode("businessSubclasses");
    var businessSubclassesValue = me.DownForCode("businessSubclassesValue");
    var docstateAlle = me.DownForCode("CompositionCustomerId_docstateAlle");
    var year = me.DownForCode("Year");
    var reportCode = me.DownForCode("ReportCode");
    if (doc && me.ToolBar) {
        var isBtnVis = doc.GetValue() == 30;
        var modify = me.ToolBar.DownForCode("Modify");
        var isModify = doc.GetValue() == 100;
        if (modify && isModify) modify.SetVisible(false);
        var reportModify = me.ToolBar.DownForCode("ReportModify");
        if (reportModify && reportModify.SetVisible) reportModify.SetVisible(!isBtnVis);
    }
    if (reportCode.GetValue() != "") {
        year.SetVisible(true,false);
        reportCode.SetVisible(false);
    }

    var timestamp = me.DownForCode("timestamp");
    var customerType = me.DownForCode("compositionCustomerId_customerType");
    var businessType = me.DownForCode("compositionCustomerId_businessType");
    var isModify = false;
    var reportTypeId = me.DownForCode("reportTypeId");

    if (timestamp && Framework.IsNotNullOrEmpty(timestamp.GetValue())) {
        var reportIssue = me.DownForCode("ReportIssue");
        businessSubclasses .SetReadOnly(true);
        reportIssue.SetReadOnly(true);
        reportTypeId.SetReadOnly(true);
        isModify = true;

        if (doc.GetValue() == 10 && me.ModifyBtn && me.ModifyBtn.IsModifyClick) {
            if (AppContext.Profile.isSuperAdmin || (businessSubclasses.GetValue() < 1000 && me.Data && Framework.IsNotNullOrEmpty(me.Data.deptId_masterId) && me.Data.deptId_masterId.id == AppContext.Profile.id)) {
                var deleteBtn = me.ToolBar.DownForCode("Delete");
                if (deleteBtn) deleteBtn.SetVisible(false);
            }
        }
    }

    if (Framework.IsNotNullOrEmpty(businessSubclasses)) {
        var businessSbV = businessSubclasses.GetSubmitValue();
        if (customerType && customerType.GetValue() && businessType && businessType.GetValue()) {
            var url = Framework.Format("/risk-level/business-type-sub/{0}/{1}", customerType.GetValue(), businessType.GetValue());
            var busSubList = []
            Framework.AjaxRequest(me, url, 'get', {}, false, function (result) {
                busSubList = result;
            }, null, true);
            if (isModify) {
                if (businessSbV < 1000) {
                    busSubList = busSubList.filter(function (a) {
                        return a.id < 1000
                    });
                } else {
                    busSubList = busSubList.filter(function (a) {
                        return a.id >= 1000
                    });
                }
            } else {
                if (docstateAlle.GetValue().id != 70&&customerType.GetValue()!=47&&customerType.GetValue()!=50) {
                    busSubList = busSubList.filter(function (a) {
                        return a.id >= 1000
                    });
                }
            }
            businessSubclasses.IsModify = isModify;
            businessSubclasses.LoadData(busSubList);
        }
        if (Framework.IsNotNullOrEmpty(businessSubclassesValue) && businessSubclassesValue.GetValue()!='null') {
            businessSubclasses.SetValueText(businessSubclassesValue.GetValue());
        }
        var isVisible = businessSbV == 1000 || businessSbV == 1001;
        var mergingMonomer = me.DownForCode("mergingMonomer");
        var auditOpinion = me.DownForCode("auditOpinion");
        var signingPartnerId = me.DownForCode("signingPartnerId");
        var signingAccountantId = me.DownForCode("signingAccountantId");
        var auditReportDate = me.DownForCode("auditReportDate");

        reportTypeId.SetRequired(!isVisible);
        // //合并\\单体
        // mergingMonomer.SetRequired(!isVisible);
        // //审核意见
        // auditOpinion.SetRequired(!isVisible);
        //签字合伙人
        signingPartnerId.SetRequired(!isVisible);
        //签字会计师
        signingAccountantId.SetRequired(!isVisible);
        //审计报告日
        auditReportDate.SetRequired(!isVisible);

        var reportTypeData = reportTypeId.GetValue();
        var isNull = Framework.IsNullOrEmpty(reportTypeData);
        if (isNull) reportTypeData = {};
        var reportTypeIsNull = isNull || reportTypeData.code == "003" || reportTypeData.code == "004" || reportTypeData.code == "005";
        mergingMonomer.SetRequired((!reportTypeIsNull && !isVisible) || businessSbV == "");
        auditOpinion.SetRequired((reportTypeData.code == "001" && !isVisible) || businessSbV == "");
    }


    var reportIssue = me.DownForCode("reportIssue");
    var unitAttributes = me.DownForCode("project_Dept_Org_UnitAttributes");
    var riskLevel = me.DownForCode("compositionCustomerId_riskLevel");
    var dept = me.DownForCode("deptId");
    if (Framework.IsNotNullOrEmpty(dept) && reportIssue) {

        var params = {};
        if (Framework.IsNotNullOrEmpty(dept.myValue))
            params.deptId = dept.myValue.id;
        params.riskLevel = riskLevel.GetSubmitValue();

        Framework.AjaxRequest(me, 'Report-getSignOrg.do', 'post', params, false, function (result) {
            reportIssue.LoadData(result);
            if (unitAttributes.GetValue() == 10 && Framework.IsNotNullOrEmpty(result.Find('id', 20))) {
                reportIssue.SetValue(20);
                reportIssue.SetReadOnly(true)

            }
        });
    }
}
this.BeforeWorkFlowSubmit = function () {
     if(!AppContext.Profile.departmentalAttributes){
      Framework.Message('职能部门,不允许维护报告');
      return false;
    }
     var issueDeptId= me.Top().DownForCode('issueDeptId');
    var reportIssue= me.Top().DownForCode('ReportIssue');
    var tree = me.Top().Opener.Top().DownForCode("compositionCustomer");
    var selected = tree ? tree.GetSelected() : {};
    console.log(selected);
    var params = {'type':reportIssue.GetValue().id,'compositionId':selected.id};
    Framework.AjaxRequest(me, "Report-queryReportOfficeId.do", 'get', params, false, function (result) {
       issueDeptId.SetValue(result);
   })
}",
	"name":"报告添加",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"reportAdd"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"消息-业务报告"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":342999
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
     console.log("1211113");
    var me = this;
    var year = me.DownForCode("Year");
    var reportCode = me.DownForCode("ReportCode");
    if (me.IsAdd) {
        var projectFieldSet = me.DownForCode("fristFieldSet");
        if (projectFieldSet)
            projectFieldSet.SetChildrenValue(me.TreeSelected);
        var reportAnnex = me.DownForCode("reportFiles");
        if (reportAnnex && reportAnnex.AfterLoadData) {
            reportAnnex.AfterLoadData();
        }
        if (me.IsManualReport) {
            year.SetVisible(false);
            year.SetRequired(true);
            reportCode.SetVisible(true);
        } else {
            year.SetVisible(true,false);
            reportCode.SetVisible(false);
        }
    } else {
        year.SetVisible(true,false);
    }

    if (me.ToolBar) {
        var modify = me.ToolBar.DownForCode("Modify");
        if (modify && modify.OnClick && me.IsReportModify) {
            me.IsReportModify = false;
            modify.OnClick();
            return false;
        }
        var deleteBtn = me.ToolBar.DownForCode("Delete");
        if (deleteBtn) deleteBtn.SetVisible(true);
    }
}

this.AfterLoad = function () {
    var me = this;
    console.log("123");
    var doc = this.DownForCode("DocState");
    var businessSubclasses = me.DownForCode("businessSubclasses");
    var businessSubclassesValue = me.DownForCode("businessSubclassesValue");
    var docstateAlle = me.DownForCode("CompositionCustomerId_docstateAlle");
    var year = me.DownForCode("Year");
    var reportCode = me.DownForCode("ReportCode");
    if (doc && me.ToolBar) {
        var isBtnVis = doc.GetValue() == 30;
        var modify = me.ToolBar.DownForCode("Modify");
        var isModify = doc.GetValue() == 100;
        if (modify && isModify) modify.SetVisible(false);
        var reportModify = me.ToolBar.DownForCode("ReportModify");
        if (reportModify && reportModify.SetVisible) reportModify.SetVisible(!isBtnVis);
    }
    if (reportCode.GetValue() != "") {
        year.SetVisible(true,false);
        reportCode.SetVisible(false);
    }

    var timestamp = me.DownForCode("timestamp");
    var customerType = me.DownForCode("compositionCustomerId_customerType");
    var businessType = me.DownForCode("compositionCustomerId_businessType");
    var isModify = false;
    var reportTypeId = me.DownForCode("reportTypeId");

    if (timestamp && Framework.IsNotNullOrEmpty(timestamp.GetValue())) {
        var reportIssue = me.DownForCode("ReportIssue");
        businessSubclasses .SetReadOnly(true);
        reportIssue.SetReadOnly(true);
        reportTypeId.SetReadOnly(true);
        isModify = true;

        if (doc.GetValue() == 10 && me.ModifyBtn && me.ModifyBtn.IsModifyClick) {
            if (AppContext.Profile.isSuperAdmin || (businessSubclasses.GetValue() < 1000 && me.Data && Framework.IsNotNullOrEmpty(me.Data.deptId_masterId) && me.Data.deptId_masterId.id == AppContext.Profile.id)) {
                var deleteBtn = me.ToolBar.DownForCode("Delete");
                if (deleteBtn) deleteBtn.SetVisible(false);
            }
        }
    }

    if (Framework.IsNotNullOrEmpty(businessSubclasses)) {
        var businessSbV = businessSubclasses.GetSubmitValue();
        if (customerType && customerType.GetValue() && businessType && businessType.GetValue()) {
            var url = Framework.Format("/risk-level/business-type-sub/{0}/{1}", customerType.GetValue(), businessType.GetValue());
            var busSubList = []
            Framework.AjaxRequest(me, url, 'get', {}, false, function (result) {
                busSubList = result;
            }, null, true);
            if (isModify) {
                if (businessSbV < 1000) {
                    busSubList = busSubList.filter(function (a) {
                        return a.id < 1000
                    });
                } else {
                    busSubList = busSubList.filter(function (a) {
                        return a.id >= 1000
                    });
                }
            } else {
                if (docstateAlle.GetValue().id != 70&&customerType.GetValue()!=47&&customerType.GetValue()!=50) {
                    busSubList = busSubList.filter(function (a) {
                        return a.id >= 1000
                    });
                }
            }
            businessSubclasses.IsModify = isModify;
            businessSubclasses.LoadData(busSubList);
        }
        if (Framework.IsNotNullOrEmpty(businessSubclassesValue) && businessSubclassesValue.GetValue()!='null') {
            businessSubclasses.SetValueText(businessSubclassesValue.GetValue());
        }
        var isVisible = businessSbV == 1000 || businessSbV == 1001;
        var mergingMonomer = me.DownForCode("mergingMonomer");
        var auditOpinion = me.DownForCode("auditOpinion");
        var signingPartnerId = me.DownForCode("signingPartnerId");
        var signingAccountantId = me.DownForCode("signingAccountantId");
        var auditReportDate = me.DownForCode("auditReportDate");

        reportTypeId.SetRequired(!isVisible);
        // //合并\\单体
        // mergingMonomer.SetRequired(!isVisible);
        // //审核意见
        // auditOpinion.SetRequired(!isVisible);
        //签字合伙人
        signingPartnerId.SetRequired(!isVisible);
        //签字会计师
        signingAccountantId.SetRequired(!isVisible);
        //审计报告日
        auditReportDate.SetRequired(!isVisible);

        var reportTypeData = reportTypeId.GetValue();
        var isNull = Framework.IsNullOrEmpty(reportTypeData);
        if (isNull) reportTypeData = {};
        var reportTypeIsNull = isNull || reportTypeData.code == "003" || reportTypeData.code == "004" || reportTypeData.code == "005";
        mergingMonomer.SetRequired((!reportTypeIsNull && !isVisible) || businessSbV == "");
        auditOpinion.SetRequired((reportTypeData.code == "001" && !isVisible) || businessSbV == "");
    }


    var reportIssue = me.DownForCode("reportIssue");
    var unitAttributes = me.DownForCode("project_Dept_Org_UnitAttributes");
    var riskLevel = me.DownForCode("compositionCustomerId_riskLevel");
    var dept = me.DownForCode("deptId");
    if (Framework.IsNotNullOrEmpty(dept) && reportIssue) {

        var params = {};
        if (Framework.IsNotNullOrEmpty(dept.myValue))
            params.deptId = dept.myValue.id;
        params.riskLevel = riskLevel.GetSubmitValue();

        Framework.AjaxRequest(me, 'Report-getSignOrg.do', 'post', params, false, function (result) {
            reportIssue.LoadData(result);
            if (unitAttributes.GetValue() == 10 && Framework.IsNotNullOrEmpty(result.Find('id', 20))) {
                reportIssue.SetValue(20);
                reportIssue.SetReadOnly(true)

            }
        });
    }
}
this.BeforeWorkFlowSubmit = function () {
     if(!AppContext.Profile.departmentalAttributes){
      Framework.Message('职能部门,不允许维护报告');
      return false;
    }
     var issueDeptId= me.Top().DownForCode('issueDeptId');
    var reportIssue= me.Top().DownForCode('ReportIssue');
    var tree = me.Top().Opener.Top().DownForCode("compositionCustomer");
    var selected = tree ? tree.GetSelected() : {};
    console.log(selected);
    var params = {'type':reportIssue.GetValue().id,'compositionId':selected.id};
    Framework.AjaxRequest(me, "Report-queryReportOfficeId.do", 'get', params, false, function (result) {
       issueDeptId.SetValue(result);
   })
}

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"Report"
		},
		{
			"isHide":false,
			"name":"WorkFlowForm",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"HelpPrompt",
			"value":""
		},
		{
			"container":"Window",
			"isHide":false,
			"name":"Height",
			"value":"100%"
		},
		{
			"container":"Window",
			"isHide":false,
			"name":"Width",
			"value":"100%"
		},
		{
			"container":"Window",
			"isHide":false,
			"name":"style:left",
			"value":"0"
		},
		{
			"container":"Window",
			"isHide":false,
			"name":"style:top",
			"value":"0"
		},
		{
			"isHide":false,
			"name":"IsShowRefresh",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"IsShowBackButton",
			"value":"false"
		}
	],
	"sort":0
}
{"action":[{"code":"Delete","name":"删除","property":[{"isHide":false,"name":"ActionGroup","value":"操作"},{"isHide":false,"name":"IsRenderColumn","value":"true"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function(){\n&nbsp;if(!AppContext.Profile.departmentalAttributes){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('职能部门,不允许维护报告');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"sort":3},{"code":"Save","name":"保存","property":[{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;console.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;if(!AppContext.Profile.departmentalAttributes){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('职能部门,不允许维护报告');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;var&nbsp;auditReportDate&nbsp;=&nbsp;me.Top().DownForCode('AuditReportDate');\n&nbsp;&nbsp;var&nbsp;reportIssue=&nbsp;me.Top().DownForCode('ReportIssue');\n&nbsp;&nbsp;var&nbsp;issueDeptId=&nbsp;me.Top().DownForCode('issueDeptId');\n\n&nbsp;&nbsp;if(auditReportDate&nbsp;&nbsp;&&&nbsp;&nbsp;auditReportDate.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;array&nbsp;=&nbsp;auditReportDate.GetValue().split('-');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;currentDate&nbsp;=&nbsp;new&nbsp;Date();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(currentDate.getFullYear()&nbsp;!=&nbsp;array[0]){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('审计报告日不能选除了当前年度的其它年');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\nvar&nbsp;tree&nbsp;=&nbsp;me.Top().Opener.Top().DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;tree&nbsp;?&nbsp;tree.GetSelected()&nbsp;:&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(selected);\n&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{'type':reportIssue.GetValue().id,'compositionId':selected.id};\n&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Report-queryReportOfficeId.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;issueDeptId.SetValue(result);\n&nbsp;&nbsp;})\n}\r\n \r\n};"}],"sort":0},{"code":"ReportModify","name":"申请修改","property":[{"isHide":false,"name":"ConfirmMessage","value":"申请修改将自动删除已做的报备及签章，此报告需重走审批流程！"},{"isHide":false,"name":"AuthorityRemark","value":"业务报告-申请修改-按钮"},{"isHide":false,"name":"OnClick","value":"ReportModifyClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.ReportModifyClick&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!AppContext.Profile.departmentalAttributes){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('职能部门,不允许维护报告');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[code='report']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;registFormId=form.DownForCode('registFormId')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;registFormDocState=0;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.registFormId=&nbsp;registFormId.GetValue();&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;'RegistForm-gainRegistFormDocState.do',&nbsp;'get',&nbsp;parameter,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registFormDocState=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if(registFormDocState&nbsp;==&nbsp;20){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;您还有未审批完成的业务报备流程，请确保流程结束后再进行修改!&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(me.confirmmessage,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mes&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportId&nbsp;=&nbsp;form.DownForCode(&quot;id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportCode&nbsp;=&nbsp;form.DownForCode(&quot;ReportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectShowName&nbsp;=&nbsp;form.DownForCode(&quot;ProjectShowName&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;ReportModify&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(form,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.reportId&nbsp;=&nbsp;reportId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.reportId_reportCode&nbsp;=&nbsp;reportCode.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.reportId_projectShowName&nbsp;=&nbsp;projectShowName.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.SetValue)&nbsp;form.SetValue(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(mes))&nbsp;Framework.Message(mes);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});}\n}\r\n \r\n};"}],"sort":2},{"code":"Back","name":"Back","property":[{"isHide":false,"name":"ReadOnlyShow","value":"true"}],"sort":1}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":36},{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":0}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":43},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"projectShowName","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":500},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"ProjectShowName","sort":5},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_docstateAlle","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"底稿复核状态","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"},{"isHide":false,"name":"EnumType","value":"ManuscriptReviewStateType"}],"sort":11},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_riskLevel","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"},{"isHide":false,"name":"EnumType","value":"RiskLevel"}],"sort":10},{"action":[],"authority":[],"children":[],"code":"reportingStatus","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"报备状态","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ReportingStatus"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ReportingStatus)]"},{"isHide":false,"name":"DefaultValue","value":"10"},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"ReportingStatus[Enum(ReportingStatus)]","sort":12},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_customerType","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型(值)","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"}],"sort":15},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_businessType","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型(值)","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"}],"sort":19},{"action":[],"authority":[],"children":[],"code":"deptId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"","name":"部门","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Department|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Department"},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"DeptId[Entity(Department|Code(Code)#Name(Name))]","sort":23},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_projectManagerId_name","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目经理","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"}],"sort":27},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"所属审计","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"}],"select":"CompositionCustomerId","sort":2},{"action":[],"authority":[],"children":[],"code":"projectId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"审计单位对应项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityCode","value":"Project"}],"select":"ProjectId","sort":3},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_customerTypeValue","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"}],"sort":17},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId_businessTypeValue","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"IsReadOnly","value":"true"}],"sort":21},{"action":[],"authority":[],"children":[],"code":"deptId_masterId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"部门经理","otherChildren":[],"property":[],"sort":25},{"action":[],"authority":[],"children":[],"code":"registFormId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"报备Id","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":18},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"RegistFormId","sort":29},{"action":[],"authority":[],"children":[],"code":"project_Dept_Org_UnitAttributes","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"单位属性","otherChildren":[],"property":[],"sort":34}],"code":"fristColumnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"项目信息","otherChildren":[],"property":[{"isHide":false,"name":"DetailColumns","value":"3"}],"sort":31}],"code":"fristFieldSet","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"项目信息","otherChildren":[],"property":[],"sort":33},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"businessSubclasses","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue,&nbsp;isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisible&nbsp;=&nbsp;newValue&nbsp;==&nbsp;1000&nbsp;||&nbsp;newValue&nbsp;==&nbsp;1001;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeId&nbsp;=&nbsp;form.DownForCode(&quot;reportTypeId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportCode&nbsp;=&nbsp;form.DownForCode(&quot;reportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mergingMonomer&nbsp;=&nbsp;form.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditReportDate&nbsp;=&nbsp;form.DownForCode(&quot;auditReportDate&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;remarks&nbsp;=&nbsp;form.DownForCode(&quot;Remarks&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;//报告类型\n&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeValue&nbsp;=&nbsp;reportTypeId.GetValue();\n\tconsole.log(reportTypeValue);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisReport&nbsp;=&nbsp;Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;(reportTypeValue.code&nbsp;==&nbsp;&quot;003&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;004&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;005&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;1000&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.IsManualReport)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//合并\\单体\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetVisible(isVisible&nbsp;||&nbsp;isVisReport);\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired(!(isVisible&nbsp;||&nbsp;isVisReport));\n&nbsp;&nbsp;&nbsp;&nbsp;//审核意见\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(isVisible&nbsp;||&nbsp;(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;));\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(!(isVisible&nbsp;||&nbsp;(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;)));\n&nbsp;&nbsp;&nbsp;&nbsp;//签字合伙人\n&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//签字会计师\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//审计报告日\n&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantOtherId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;remarks.SetRequired(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;files&nbsp;=&nbsp;form.DownForCode(&quot;reportFiles&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(files)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isLoad)&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNullOrEmpty(files.isMajor))&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(files.isMajor&nbsp;!=&nbsp;isVisible)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;list&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;notMajor&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(files.GetValue(),&nbsp;function&nbsp;(item,&nbsp;index)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;row&nbsp;=&nbsp;Framework.CopyModel(item);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.fileType&nbsp;=&nbsp;isVisible&nbsp;?&nbsp;files.GetReportType(40)&nbsp;:&nbsp;files.GetReportType(notMajor[index]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.push(row);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(list.length&nbsp;&gt;&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;files.PushAllRow(list);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.OnSelect&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessSubclassesValue&nbsp;=&nbsp;form.DownForCode(&quot;BusinessSubclassesValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(businessSubclassesValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclassesValue.SetValue(row.text)\n}","name":"业务子类","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue,&nbsp;isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisible&nbsp;=&nbsp;newValue&nbsp;==&nbsp;1000&nbsp;||&nbsp;newValue&nbsp;==&nbsp;1001;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeId&nbsp;=&nbsp;form.DownForCode(&quot;reportTypeId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportCode&nbsp;=&nbsp;form.DownForCode(&quot;reportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mergingMonomer&nbsp;=&nbsp;form.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditReportDate&nbsp;=&nbsp;form.DownForCode(&quot;auditReportDate&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;remarks&nbsp;=&nbsp;form.DownForCode(&quot;Remarks&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;//报告类型\n&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeValue&nbsp;=&nbsp;reportTypeId.GetValue();\n\tconsole.log(reportTypeValue);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisReport&nbsp;=&nbsp;Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;(reportTypeValue.code&nbsp;==&nbsp;&quot;003&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;004&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;005&quot;&nbsp;||&nbsp;reportTypeValue.code&nbsp;==&nbsp;&quot;1000&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.IsManualReport)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//合并\\单体\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetVisible(isVisible&nbsp;||&nbsp;isVisReport);\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired(!(isVisible&nbsp;||&nbsp;isVisReport));\n&nbsp;&nbsp;&nbsp;&nbsp;//审核意见\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(isVisible&nbsp;||&nbsp;(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;));\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(!(isVisible&nbsp;||&nbsp;(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;)));\n&nbsp;&nbsp;&nbsp;&nbsp;//签字合伙人\n&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//签字会计师\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//审计报告日\n&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantOtherId.SetVisible(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;remarks.SetRequired(isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;files&nbsp;=&nbsp;form.DownForCode(&quot;reportFiles&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(files)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isLoad)&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNullOrEmpty(files.isMajor))&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(files.isMajor&nbsp;!=&nbsp;isVisible)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;list&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;notMajor&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30,&nbsp;30];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(files.GetValue(),&nbsp;function&nbsp;(item,&nbsp;index)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;row&nbsp;=&nbsp;Framework.CopyModel(item);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.fileType&nbsp;=&nbsp;isVisible&nbsp;?&nbsp;files.GetReportType(40)&nbsp;:&nbsp;files.GetReportType(notMajor[index]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.push(row);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(list.length&nbsp;&gt;&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;files.PushAllRow(list);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;files.isMajor&nbsp;=&nbsp;isVisible;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.OnSelect&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessSubclassesValue&nbsp;=&nbsp;form.DownForCode(&quot;BusinessSubclassesValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(businessSubclassesValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclassesValue.SetValue(row.text)\n}\r\n \r\n};"}],"select":"BusinessSubclasses","sort":6},{"action":[],"authority":[],"children":[],"code":"reportIssue","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnSelect&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportIssueValue&nbsp;=&nbsp;form.DownForCode(&quot;reportIssueValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportIssueValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssueValue.SetValue(row.text)\n}","name":"总/分所出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnSelect&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportIssueValue&nbsp;=&nbsp;form.DownForCode(&quot;reportIssueValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportIssueValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssueValue.SetValue(row.text)\n}\r\n \r\n};"}],"select":"ReportIssue","sort":7},{"action":[],"authority":[],"children":[],"code":"mergingMonomer","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"合并/单体","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"MergingMonomer"},{"isHide":false,"name":"EntityConfig","value":"[Enum(MergingMonomer)]"}],"select":"MergingMonomer[Enum(MergingMonomer)]","sort":9},{"action":[],"authority":[],"children":[],"code":"reportCode","control":"AutoCode","dataPermission":[],"isReference":false,"javaScript":"","name":"报告文号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"IsReadOnly","value":"false"}],"select":"ReportCode","sort":14},{"action":[],"authority":[],"children":[],"code":"reportTypeId","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function(){\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeId&nbsp;=&nbsp;form.DownForCode(&quot;reportTypeId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeValue&nbsp;=&nbsp;reportTypeId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(!(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;));\n}\nthis.AfterSetValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AfterSetValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isValueNull&nbsp;=&nbsp;Framework.IsNullOrEmpty(value);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isValueNull)&nbsp;value&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mergingMonomer&nbsp;=&nbsp;form.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeShortName&nbsp;=&nbsp;form.DownForCode(&quot;ReportTypeShortName&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportTypeShortName)&nbsp;reportTypeShortName.SetValue(value.shortName);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisible&nbsp;=&nbsp;isValueNull&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;003&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;004&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;005&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;1000&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetVisible(isVisible,true);\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//审字报告类型的隐藏审批意见\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(value.code&nbsp;!=&nbsp;&quot;001&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(value.code&nbsp;==&nbsp;&quot;001&quot;);\n}","name":"报告类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(ReportType|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"ReportType"},{"isHide":false,"name":"queryUrl","value":"ReportType-Tree.json?query_isEnabled=true"},{"isHide":false,"name":"textfield","value":"treeName"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function(){\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeId&nbsp;=&nbsp;form.DownForCode(&quot;reportTypeId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeValue&nbsp;=&nbsp;reportTypeId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(!(Framework.IsNotNullOrEmpty(reportTypeValue)&nbsp;&&&nbsp;reportTypeValue.text!=&nbsp;&quot;审字&quot;));\n}\nthis.AfterSetValue&nbsp;=&nbsp;function&nbsp;(value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AfterSetValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isValueNull&nbsp;=&nbsp;Framework.IsNullOrEmpty(value);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isValueNull)&nbsp;value&nbsp;=&nbsp;{};\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditOpinion&nbsp;=&nbsp;form.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mergingMonomer&nbsp;=&nbsp;form.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportTypeShortName&nbsp;=&nbsp;form.DownForCode(&quot;ReportTypeShortName&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportTypeShortName)&nbsp;reportTypeShortName.SetValue(value.shortName);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisible&nbsp;=&nbsp;isValueNull&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;003&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;004&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;005&quot;&nbsp;||&nbsp;value.code&nbsp;==&nbsp;&quot;1000&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetVisible(isVisible,true);\n&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;//审字报告类型的隐藏审批意见\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetVisible(value.code&nbsp;!=&nbsp;&quot;001&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired(value.code&nbsp;==&nbsp;&quot;001&quot;);\n}\r\n \r\n};"}],"select":"ReportTypeId[Entity(ReportType|Code(Code)#Name(Name))]","sort":16},{"action":[],"authority":[],"children":[],"code":"auditOpinion","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"审计意见","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"AuditOpinion"},{"isHide":false,"name":"EntityConfig","value":"[Enum(AuditOpinion)]"}],"select":"AuditOpinion[Enum(AuditOpinion)]","sort":20},{"action":[],"authority":[],"children":[],"code":"signingPartnerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;/*&nbsp;if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字合伙人必须是具有证券签字资格的合伙人！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantOtherId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantOtherId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}","name":"签字合伙人","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"SchemaCode","value":"UserSelecterReportPersonnel"},{"isHide":false,"name":"Params","value":"{param:'query_id',fieldId:'projectId'}\n"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;/*&nbsp;if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字合伙人必须是具有证券签字资格的合伙人！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantOtherId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantOtherId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}\r\n \r\n};"}],"select":"SigningPartnerId[Entity(User|Code(Code)#Name(Name))]","sort":24},{"action":[],"authority":[],"children":[],"code":"signingAccountantId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;/*if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字CPA必须是具有证券资格！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingPartnerId&nbsp;.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingPartnerId&nbsp;.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantOtherId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantOtherId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字会计师人与签字会计师(可选)不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}","name":"签字会计师","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"SchemaCode","value":"UserSelecterReportPerson"},{"isHide":false,"name":"Params","value":"{param:'query_id',fieldId:'projectId'}\n"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;/*if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字CPA必须是具有证券资格！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingPartnerId&nbsp;.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingPartnerId&nbsp;.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantOtherId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantOtherId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字会计师人与签字会计师(可选)不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}\r\n \r\n};"}],"select":"SigningAccountantId[Entity(User|Code(Code)#Name(Name))]","sort":26},{"action":[],"authority":[],"children":[],"code":"auditReportDate","control":"Date","dataPermission":[],"isReference":false,"javaScript":"this.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AuditReportDateAfterRender&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;firstDay&nbsp;=&nbsp;Framework.Format(&quot;{0}-01-01&quot;,&nbsp;new&nbsp;Date().getFullYear());\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;lastDay&nbsp;=&nbsp;Framework.Format(&quot;{0}-12-31&quot;,&nbsp;new&nbsp;Date().getFullYear()&nbsp;+&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;me.SetInterval(firstDay,&nbsp;lastDay)\n}","name":"审计报告日","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AuditReportDateAfterRender&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;firstDay&nbsp;=&nbsp;Framework.Format(&quot;{0}-01-01&quot;,&nbsp;new&nbsp;Date().getFullYear());\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;lastDay&nbsp;=&nbsp;Framework.Format(&quot;{0}-12-31&quot;,&nbsp;new&nbsp;Date().getFullYear()&nbsp;+&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;me.SetInterval(firstDay,&nbsp;lastDay)\n}\r\n \r\n};"}],"select":"AuditReportDate","sort":22},{"action":[],"authority":[],"children":[],"code":"signingAccountantOtherId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;/*&nbsp;if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字CPA必须是具有证券资格！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingPartnerId&nbsp;.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingPartnerId&nbsp;.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字会计师人与签字会计师(可选)不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}","name":"签字会计师（可选）","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"SchemaCode","value":"UserSelecterReportPerson"},{"isHide":false,"name":"Params","value":"{param:'query_id',fieldId:'projectId'}\n"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldValue,&nbsp;newValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\nconsole.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(!newValue)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top(&quot;[container='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!form)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingPartnerId&nbsp;=&nbsp;form.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;signingAccountantOtherId&nbsp;=&nbsp;form.DownForCode(&quot;signingAccountantOtherId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerTypeValue=&nbsp;form.DownForCode(&quot;CompositionCustomerId_customerTypeValue&quot;);\n&nbsp;&nbsp;/*&nbsp;if(newValue.isSecuritiesSignature!=10&nbsp;&&&nbsp;customerTypeValue.GetValue().indexOf(&quot;非&quot;)==-1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字CPA必须是具有证券资格！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingPartnerId&nbsp;.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingPartnerId&nbsp;.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签章合伙人与签字会计师不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if(signingAccountantId.GetValue()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(newValue.id==signingAccountantId.GetValue().id){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValue(null);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;签字会计师人与签字会计师(可选)不能重复！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}\r\n \r\n};"}],"select":"SigningAccountantOtherId[Entity(User|Code(Code)#Name(Name))]","sort":28},{"action":[],"authority":[],"children":[],"code":"remarks","control":"TextArea","dataPermission":[],"isReference":false,"javaScript":"","name":"备注","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":500},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":true,"name":"Colspan","value":"3"}],"select":"Remarks","sort":30},{"action":[],"authority":[],"children":[],"code":"reportIssueValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"总所/分所出具报告文本值","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"ReportIssueValue","sort":8},{"action":[],"authority":[],"children":[],"code":"reportTypeShortName","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"报告类型简称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Description","value":"冗余字段，编码规则使用"}],"select":"ReportTypeShortName","sort":18},{"action":[],"authority":[],"children":[],"code":"docState","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"运营状态","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ReportDocStatus"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ReportDocStatus)]"},{"isHide":false,"name":"DefaultValue","value":"10"}],"select":"DocState[Enum(ReportDocStatus)]","sort":32},{"action":[],"authority":[],"children":[],"code":"businessSubclassesValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务子类值","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessSubclassesValue","sort":4},{"action":[],"authority":[],"children":[],"code":"year","control":"Year","dataPermission":[],"isReference":false,"javaScript":"","name":"报告年度","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"FrontNum","value":"2"},{"isHide":false,"name":"notthenyear","value":"true"}],"select":"Year","sort":13},{"action":[],"authority":[],"children":[],"code":"issueDeptId","control":"Hidden","dataPermission":[],"isReference":false,"name":"出具报告总所/分所id","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityCode","value":"Department"}],"select":"issueDeptId","sort":1}],"code":"secondColumnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"报告信息","otherChildren":[],"property":[{"isHide":false,"name":"DetailColumns","value":"3"}],"sort":40}],"code":"secondFieldSet","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"报告信息","otherChildren":[],"property":[],"sort":35},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":true,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":343102},{"isHide":false,"name":"MainParams","value":"[{param:'reportId',fieldId:'id'}]"},{"isHide":false,"name":"MustParam","value":"query_reportId"}],"sort":0}],"code":"reportFileTab","control":"Tab","dataPermission":[],"isReference":false,"javaScript":"","name":"报告及附件","otherChildren":[],"property":[],"sort":39}],"code":"thirdFieldSet","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"报告及附件","otherChildren":[],"property":[],"sort":37},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":30504}],"sort":0}],"code":"fourthFieldSet","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"审批轨迹","otherChildren":[],"property":[{"isHide":false,"name":"style:min-height","value":"200px"},{"isHide":false,"name":"IsWorkFlowHide","value":"false"}],"sort":42},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"reportByNotice","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;1211113&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;year&nbsp;=&nbsp;me.DownForCode(&quot;Year&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportCode&nbsp;=&nbsp;me.DownForCode(&quot;ReportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectFieldSet&nbsp;=&nbsp;me.DownForCode(&quot;fristFieldSet&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(projectFieldSet)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectFieldSet.SetChildrenValue(me.TreeSelected);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportAnnex&nbsp;=&nbsp;me.DownForCode(&quot;reportFiles&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportAnnex&nbsp;&&&nbsp;reportAnnex.AfterLoadData)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportAnnex.AfterLoadData();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsManualReport)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetRequired(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.ToolBar)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;modify&nbsp;=&nbsp;me.ToolBar.DownForCode(&quot;Modify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(modify&nbsp;&&&nbsp;modify.OnClick&nbsp;&&&nbsp;me.IsReportModify)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.IsReportModify&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modify.OnClick();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;deleteBtn&nbsp;=&nbsp;me.ToolBar.DownForCode(&quot;Delete&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(deleteBtn)&nbsp;deleteBtn.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.AfterLoad = function () {\n&nbsp;&nbsp;&nbsp;&nbsp;var me = this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var doc = this.DownForCode(&quot;DocState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessSubclasses = me.DownForCode(&quot;businessSubclasses&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessSubclassesValue = me.DownForCode(&quot;businessSubclassesValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var docstateAlle = me.DownForCode(&quot;CompositionCustomerId_docstateAlle&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var year = me.DownForCode(&quot;Year&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var reportCode = me.DownForCode(&quot;ReportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if (doc && me.ToolBar) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isBtnVis = doc.GetValue() == 30;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var modify = me.ToolBar.DownForCode(&quot;Modify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isModify = doc.GetValue() == 100;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (modify && isModify) modify.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportModify = me.ToolBar.DownForCode(&quot;ReportModify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (reportModify && reportModify.SetVisible) reportModify.SetVisible(!isBtnVis);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if (reportCode.GetValue() != &quot;&quot;) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var timestamp = me.DownForCode(&quot;timestamp&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var customerType = me.DownForCode(&quot;compositionCustomerId_customerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessType = me.DownForCode(&quot;compositionCustomerId_businessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var isModify = false;\n&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeId = me.DownForCode(&quot;reportTypeId&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if (timestamp && Framework.IsNotNullOrEmpty(timestamp.GetValue())) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportIssue = me.DownForCode(&quot;ReportIssue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses .SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isModify = true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (doc.GetValue() == 10 && me.ModifyBtn && me.ModifyBtn.IsModifyClick) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (AppContext.Profile.isSuperAdmin || (businessSubclasses.GetValue() &lt; 1000 && me.Data && Framework.IsNotNullOrEmpty(me.Data.deptId_masterId) && me.Data.deptId_masterId.id == AppContext.Profile.id)) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var deleteBtn = me.ToolBar.DownForCode(&quot;Delete&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (deleteBtn) deleteBtn.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(businessSubclasses)) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var businessSbV = businessSubclasses.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (customerType && customerType.GetValue() && businessType && businessType.GetValue()) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var url = Framework.Format(&quot;/risk-level/business-type-sub/{0}/{1}&quot;, customerType.GetValue(), businessType.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var busSubList = []\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me, url, 'get', {}, false, function (result) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, null, true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isModify) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (businessSbV &lt; 1000) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &lt; 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &gt;= 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (docstateAlle.GetValue().id != 70&&customerType.GetValue()!=47&&customerType.GetValue()!=50) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &gt;= 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.IsModify = isModify;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.LoadData(busSubList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(businessSubclassesValue) && businessSubclassesValue.GetValue()!='null') {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.SetValueText(businessSubclassesValue.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isVisible = businessSbV == 1000 || businessSbV == 1001;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mergingMonomer = me.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var auditOpinion = me.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var signingPartnerId = me.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var signingAccountantId = me.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var auditReportDate = me.DownForCode(&quot;auditReportDate&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// //合并\\单体\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// mergingMonomer.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// //审核意见\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// auditOpinion.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//签字合伙人\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//签字会计师\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//审计报告日\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetRequired(!isVisible);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeData = reportTypeId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isNull = Framework.IsNullOrEmpty(reportTypeData);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isNull) reportTypeData = {};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeIsNull = isNull || reportTypeData.code == &quot;003&quot; || reportTypeData.code == &quot;004&quot; || reportTypeData.code == &quot;005&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired((!reportTypeIsNull && !isVisible) || businessSbV == &quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired((reportTypeData.code == &quot;001&quot; && !isVisible) || businessSbV == &quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var reportIssue = me.DownForCode(&quot;reportIssue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var unitAttributes = me.DownForCode(&quot;project_Dept_Org_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var riskLevel = me.DownForCode(&quot;compositionCustomerId_riskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var dept = me.DownForCode(&quot;deptId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(dept) && reportIssue) {\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params = {};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(dept.myValue))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.deptId = dept.myValue.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.riskLevel = riskLevel.GetSubmitValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me, 'Report-getSignOrg.do', 'post', params, false, function (result) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.LoadData(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (unitAttributes.GetValue() == 10 && Framework.IsNotNullOrEmpty(result.Find('id', 20))) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetValue(20);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetReadOnly(true)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\nthis.BeforeWorkFlowSubmit&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!AppContext.Profile.departmentalAttributes){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('职能部门,不允许维护报告');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;issueDeptId=&nbsp;me.Top().DownForCode('issueDeptId');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportIssue=&nbsp;me.Top().DownForCode('ReportIssue');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;me.Top().Opener.Top().DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;tree&nbsp;?&nbsp;tree.GetSelected()&nbsp;:&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(selected);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{'type':reportIssue.GetValue().id,'compositionId':selected.id};\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Report-queryReportOfficeId.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;issueDeptId.SetValue(result);\n&nbsp;&nbsp;&nbsp;})\n}","name":"报告添加","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"reportAdd"},{"isHide":false,"name":"Name","value":"消息-业务报告"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":342999},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;1211113&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;year&nbsp;=&nbsp;me.DownForCode(&quot;Year&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportCode&nbsp;=&nbsp;me.DownForCode(&quot;ReportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectFieldSet&nbsp;=&nbsp;me.DownForCode(&quot;fristFieldSet&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(projectFieldSet)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectFieldSet.SetChildrenValue(me.TreeSelected);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportAnnex&nbsp;=&nbsp;me.DownForCode(&quot;reportFiles&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reportAnnex&nbsp;&&&nbsp;reportAnnex.AfterLoadData)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportAnnex.AfterLoadData();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsManualReport)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetRequired(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.ToolBar)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;modify&nbsp;=&nbsp;me.ToolBar.DownForCode(&quot;Modify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(modify&nbsp;&&&nbsp;modify.OnClick&nbsp;&&&nbsp;me.IsReportModify)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.IsReportModify&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modify.OnClick();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;deleteBtn&nbsp;=&nbsp;me.ToolBar.DownForCode(&quot;Delete&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(deleteBtn)&nbsp;deleteBtn.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.AfterLoad = function () {\n&nbsp;&nbsp;&nbsp;&nbsp;var me = this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;123&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var doc = this.DownForCode(&quot;DocState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessSubclasses = me.DownForCode(&quot;businessSubclasses&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessSubclassesValue = me.DownForCode(&quot;businessSubclassesValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var docstateAlle = me.DownForCode(&quot;CompositionCustomerId_docstateAlle&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var year = me.DownForCode(&quot;Year&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var reportCode = me.DownForCode(&quot;ReportCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if (doc && me.ToolBar) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isBtnVis = doc.GetValue() == 30;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var modify = me.ToolBar.DownForCode(&quot;Modify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isModify = doc.GetValue() == 100;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (modify && isModify) modify.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportModify = me.ToolBar.DownForCode(&quot;ReportModify&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (reportModify && reportModify.SetVisible) reportModify.SetVisible(!isBtnVis);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if (reportCode.GetValue() != &quot;&quot;) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;year.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportCode.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;var timestamp = me.DownForCode(&quot;timestamp&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var customerType = me.DownForCode(&quot;compositionCustomerId_customerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var businessType = me.DownForCode(&quot;compositionCustomerId_businessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var isModify = false;\n&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeId = me.DownForCode(&quot;reportTypeId&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if (timestamp && Framework.IsNotNullOrEmpty(timestamp.GetValue())) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportIssue = me.DownForCode(&quot;ReportIssue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses .SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isModify = true;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (doc.GetValue() == 10 && me.ModifyBtn && me.ModifyBtn.IsModifyClick) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (AppContext.Profile.isSuperAdmin || (businessSubclasses.GetValue() &lt; 1000 && me.Data && Framework.IsNotNullOrEmpty(me.Data.deptId_masterId) && me.Data.deptId_masterId.id == AppContext.Profile.id)) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var deleteBtn = me.ToolBar.DownForCode(&quot;Delete&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (deleteBtn) deleteBtn.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(businessSubclasses)) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var businessSbV = businessSubclasses.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (customerType && customerType.GetValue() && businessType && businessType.GetValue()) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var url = Framework.Format(&quot;/risk-level/business-type-sub/{0}/{1}&quot;, customerType.GetValue(), businessType.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var busSubList = []\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me, url, 'get', {}, false, function (result) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, null, true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isModify) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (businessSbV &lt; 1000) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &lt; 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &gt;= 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (docstateAlle.GetValue().id != 70&&customerType.GetValue()!=47&&customerType.GetValue()!=50) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;busSubList = busSubList.filter(function (a) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.id &gt;= 1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.IsModify = isModify;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.LoadData(busSubList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(businessSubclassesValue) && businessSubclassesValue.GetValue()!='null') {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessSubclasses.SetValueText(businessSubclassesValue.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isVisible = businessSbV == 1000 || businessSbV == 1001;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mergingMonomer = me.DownForCode(&quot;mergingMonomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var auditOpinion = me.DownForCode(&quot;auditOpinion&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var signingPartnerId = me.DownForCode(&quot;signingPartnerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var signingAccountantId = me.DownForCode(&quot;signingAccountantId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var auditReportDate = me.DownForCode(&quot;auditReportDate&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportTypeId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// //合并\\单体\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// mergingMonomer.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// //审核意见\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// auditOpinion.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//签字合伙人\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signingPartnerId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//签字会计师\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signingAccountantId.SetRequired(!isVisible);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//审计报告日\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auditReportDate.SetRequired(!isVisible);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeData = reportTypeId.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isNull = Framework.IsNullOrEmpty(reportTypeData);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isNull) reportTypeData = {};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reportTypeIsNull = isNull || reportTypeData.code == &quot;003&quot; || reportTypeData.code == &quot;004&quot; || reportTypeData.code == &quot;005&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mergingMonomer.SetRequired((!reportTypeIsNull && !isVisible) || businessSbV == &quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auditOpinion.SetRequired((reportTypeData.code == &quot;001&quot; && !isVisible) || businessSbV == &quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var reportIssue = me.DownForCode(&quot;reportIssue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var unitAttributes = me.DownForCode(&quot;project_Dept_Org_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var riskLevel = me.DownForCode(&quot;compositionCustomerId_riskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var dept = me.DownForCode(&quot;deptId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(dept) && reportIssue) {\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params = {};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Framework.IsNotNullOrEmpty(dept.myValue))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.deptId = dept.myValue.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.riskLevel = riskLevel.GetSubmitValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me, 'Report-getSignOrg.do', 'post', params, false, function (result) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.LoadData(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (unitAttributes.GetValue() == 10 && Framework.IsNotNullOrEmpty(result.Find('id', 20))) {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetValue(20);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportIssue.SetReadOnly(true)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\nthis.BeforeWorkFlowSubmit&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!AppContext.Profile.departmentalAttributes){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message('职能部门,不允许维护报告');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;issueDeptId=&nbsp;me.Top().DownForCode('issueDeptId');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reportIssue=&nbsp;me.Top().DownForCode('ReportIssue');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree&nbsp;=&nbsp;me.Top().Opener.Top().DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selected&nbsp;=&nbsp;tree&nbsp;?&nbsp;tree.GetSelected()&nbsp;:&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(selected);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{'type':reportIssue.GetValue().id,'compositionId':selected.id};\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Report-queryReportOfficeId.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;issueDeptId.SetValue(result);\n&nbsp;&nbsp;&nbsp;})\n}\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"Report"},{"isHide":false,"name":"WorkFlowForm","value":"true"},{"isHide":false,"name":"HelpPrompt","value":""},{"container":"Window","isHide":false,"name":"Height","value":"100%"},{"container":"Window","isHide":false,"name":"Width","value":"100%"},{"container":"Window","isHide":false,"name":"style:left","value":"0"},{"container":"Window","isHide":false,"name":"style:top","value":"0"},{"isHide":false,"name":"IsShowRefresh","value":"false"},{"isHide":false,"name":"IsShowBackButton","value":"false"}],"sort":0}
2020-05-05 22:07:48