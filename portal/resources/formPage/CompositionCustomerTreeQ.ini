{
	"action":[
		
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"compositionCustomerTreeQ",
	"control":"Tree",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.OnSelected = function (node) {
    console.log('OnSelected ');
    var panel = this.Top("[container='FormPanel']");

    if (Framework.IsNullOrEmpty(panel)) return;

    var dr = this.UpForCode("draftReviewBatch");

    var itemTree = panel.DownForCode('manuscriptItem');
    var itemGrid = panel.DownForCode('manuscriptItems');
    if (Framework.IsNullOrEmpty(itemTree)) return;
    if (!itemTree.Load) return;

    if (dr.isReview) {//复核界面 没有提交的项目不能查看底稿信息
        if (Framework.IsNullOrEmpty(node.stateText)) {
            itemTree.ClearTree();
            return;
        }
    }
    var itemTree = panel.DownForCode('manuscriptItem');

    if (Framework.IsNullOrEmpty(itemTree)) return;
    if (!itemTree.Load) return;
    //itemTree.params=JSON.stringify({param:'auditworkProjectID',value:node.id});
    var params = {};
    params.param = "auditworkProjectID";
    params.value = node.id;
    itemTree.params = JSON.stringify(params);
    // console.log("abc");
    if(Framework.IsNotNullOrEmpty(itemGrid)) itemGrid.SetValue([]);
    itemTree.Load();
};

this.SetCheckBox = function () {
    var t = this.Top();
    var dr = t.DownForCode("draftReviewBatch");
    if (dr && Framework.IsNotNullOrEmpty(dr.isReview)) {
        return !dr.isReview;
    }
    return true;
};

this.OnCheck = function (node, checked) {
    var me = this;
    if (checked) return;
    //当有一个节点不选中时取消根节点的选中
    me.SetRootUnCheck();
};

this.NodeEndIcoOnClick = function (item) {
    //结尾图标点击事件
    console.log('NodeEndIcoOnClick');
    var me = this;
    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaType = "GridPanel";
    parameter.schemaCode = "QualityReviewApprovalRecord";

    var entityId = item.draftReviewBatchId;
   var entityIdothers =item.draftReviewBatchIdhis;

    Framework.OpenForm(me, url, parameter, function (form) {
        form.entityId = entityId;
        form.entityIdothers=entityIdothers
        if (form.Load) form.Load();
    });
};

this.RenderNodeStyle = function (node) {
    var me = this;
    if (!node.isCurrentProjectManage && node.target) {
        //设置不是自己的只读
        me.SetNodeReadOnlyStyle(node.target)
    }
    if (node.parentId) {//根节点不设置
        var startClass = node.companyRelationship == 10 ? "subsidiary" : "branch";
        me.SetNodeStartIco(node, startClass);//设置节点前面图标样式
    }

    //设置节点尾部样式
    if (node.stateText) {
        var icoName = '';
        if (node.stateText == '二级复核')
            icoName = 'Secondary'
        if (node.stateText == '三级复核')
            icoName = 'ThirdGrade'
        if (node.stateText == '分所复核')
            icoName = 'BranchOrg'
        if (node.stateText == '总所复核')
            icoName = 'HeadOrg'
        if (node.stateText == '三级复核/分所复核')
            icoName = 'ThirdOrBranch'
        if (node.stateText == '三级复核/总所复核')
            icoName = 'ThirdOrHead'
        if (node.stateText == '复核完成')
            icoName = 'Complete'
        if (node.stateText == '已拒绝')
            icoName = 'refused'

        if (icoName) me.SetNodeEndIco(node, icoName);
    }
};

this.AfterLoad = function () {
    var me = this;
    console.log('AfterLoad 222');
    if (!me.LoadData) return;
    var node = Framework.TreeDataFirst(me.LoadData, 'isCurrentProjectManage', true);
    if (node) {
        me.LocateNodeSelect(node);
    }else
    {
        me.isloadroot =true;
        me.AutoLoadRoot()
    }
};
",
	"name":"质量复核项目树",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"compositionCustomerTreeQ"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"质量复核项目树"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":23827
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"level asc,CompanyRelationship asc,SortCode asc"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.OnSelected = function (node) {
    console.log('OnSelected ');
    var panel = this.Top("[container='FormPanel']");

    if (Framework.IsNullOrEmpty(panel)) return;

    var dr = this.UpForCode("draftReviewBatch");

    var itemTree = panel.DownForCode('manuscriptItem');
    var itemGrid = panel.DownForCode('manuscriptItems');
    if (Framework.IsNullOrEmpty(itemTree)) return;
    if (!itemTree.Load) return;

    if (dr.isReview) {//复核界面 没有提交的项目不能查看底稿信息
        if (Framework.IsNullOrEmpty(node.stateText)) {
            itemTree.ClearTree();
            return;
        }
    }
    var itemTree = panel.DownForCode('manuscriptItem');

    if (Framework.IsNullOrEmpty(itemTree)) return;
    if (!itemTree.Load) return;
    //itemTree.params=JSON.stringify({param:'auditworkProjectID',value:node.id});
    var params = {};
    params.param = "auditworkProjectID";
    params.value = node.id;
    itemTree.params = JSON.stringify(params);
    // console.log("abc");
    if(Framework.IsNotNullOrEmpty(itemGrid)) itemGrid.SetValue([]);
    itemTree.Load();
};

this.SetCheckBox = function () {
    var t = this.Top();
    var dr = t.DownForCode("draftReviewBatch");
    if (dr && Framework.IsNotNullOrEmpty(dr.isReview)) {
        return !dr.isReview;
    }
    return true;
};

this.OnCheck = function (node, checked) {
    var me = this;
    if (checked) return;
    //当有一个节点不选中时取消根节点的选中
    me.SetRootUnCheck();
};

this.NodeEndIcoOnClick = function (item) {
    //结尾图标点击事件
    console.log('NodeEndIcoOnClick');
    var me = this;
    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    parameter.schemaType = "GridPanel";
    parameter.schemaCode = "QualityReviewApprovalRecord";

    var entityId = item.draftReviewBatchId;
   var entityIdothers =item.draftReviewBatchIdhis;

    Framework.OpenForm(me, url, parameter, function (form) {
        form.entityId = entityId;
        form.entityIdothers=entityIdothers
        if (form.Load) form.Load();
    });
};

this.RenderNodeStyle = function (node) {
    var me = this;
    if (!node.isCurrentProjectManage && node.target) {
        //设置不是自己的只读
        me.SetNodeReadOnlyStyle(node.target)
    }
    if (node.parentId) {//根节点不设置
        var startClass = node.companyRelationship == 10 ? "subsidiary" : "branch";
        me.SetNodeStartIco(node, startClass);//设置节点前面图标样式
    }

    //设置节点尾部样式
    if (node.stateText) {
        var icoName = '';
        if (node.stateText == '二级复核')
            icoName = 'Secondary'
        if (node.stateText == '三级复核')
            icoName = 'ThirdGrade'
        if (node.stateText == '分所复核')
            icoName = 'BranchOrg'
        if (node.stateText == '总所复核')
            icoName = 'HeadOrg'
        if (node.stateText == '三级复核/分所复核')
            icoName = 'ThirdOrBranch'
        if (node.stateText == '三级复核/总所复核')
            icoName = 'ThirdOrHead'
        if (node.stateText == '复核完成')
            icoName = 'Complete'
        if (node.stateText == '已拒绝')
            icoName = 'refused'

        if (icoName) me.SetNodeEndIco(node, icoName);
    }
};

this.AfterLoad = function () {
    var me = this;
    console.log('AfterLoad 222');
    if (!me.LoadData) return;
    var node = Framework.TreeDataFirst(me.LoadData, 'isCurrentProjectManage', true);
    if (node) {
        me.LocateNodeSelect(node);
    }else
    {
        me.isloadroot =true;
        me.AutoLoadRoot()
    }
};


 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionCustomer"
		},
		{
			"isHide":false,
			"name":"queryUrl",
			"value":"/CompositionCustomer-getCompositionCustomerTreeDTO.do"
		},
		{
			"isHide":false,
			"name":"IsCheckbox",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"DisableCascade",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"IsLoadRoot",
			"value":"false"
		}
	],
	"sort":0
}
{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"compositionCustomerTreeQ","control":"Tree","dataPermission":[],"isReference":false,"javaScript":"this.OnSelected&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('OnSelected&nbsp;');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Top(&quot;[container='FormPanel']&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(panel))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dr&nbsp;=&nbsp;this.UpForCode(&quot;draftReviewBatch&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemTree&nbsp;=&nbsp;panel.DownForCode('manuscriptItem');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemGrid&nbsp;=&nbsp;panel.DownForCode('manuscriptItems');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemTree))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemTree.Load)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(dr.isReview)&nbsp;{//复核界面&nbsp;没有提交的项目不能查看底稿信息\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node.stateText))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemTree.ClearTree();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemTree&nbsp;=&nbsp;panel.DownForCode('manuscriptItem');\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemTree))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemTree.Load)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//itemTree.params=JSON.stringify({param:'auditworkProjectID',value:node.id});\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.param&nbsp;=&nbsp;&quot;auditworkProjectID&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;node.id;\n&nbsp;&nbsp;&nbsp;&nbsp;itemTree.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;console.log(&quot;abc&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(itemGrid))&nbsp;itemGrid.SetValue([]);\n&nbsp;&nbsp;&nbsp;&nbsp;itemTree.Load();\n};\n\nthis.SetCheckBox&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dr&nbsp;=&nbsp;t.DownForCode(&quot;draftReviewBatch&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(dr&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(dr.isReview))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;!dr.isReview;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n};\n\nthis.OnCheck&nbsp;=&nbsp;function&nbsp;(node,&nbsp;checked)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(checked)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//当有一个节点不选中时取消根节点的选中\n&nbsp;&nbsp;&nbsp;&nbsp;me.SetRootUnCheck();\n};\n\nthis.NodeEndIcoOnClick&nbsp;=&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//结尾图标点击事件\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('NodeEndIcoOnClick');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;QualityReviewApprovalRecord&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityId&nbsp;=&nbsp;item.draftReviewBatchId;\n&nbsp;&nbsp;&nbsp;var&nbsp;entityIdothers&nbsp;=item.draftReviewBatchIdhis;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.entityId&nbsp;=&nbsp;entityId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.entityIdothers=entityIdothers\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.RenderNodeStyle&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!node.isCurrentProjectManage&nbsp;&&&nbsp;node.target)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置不是自己的只读\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeReadOnlyStyle(node.target)\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.parentId)&nbsp;{//根节点不设置\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;startClass&nbsp;=&nbsp;node.companyRelationship&nbsp;==&nbsp;10&nbsp;?&nbsp;&quot;subsidiary&quot;&nbsp;:&nbsp;&quot;branch&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeStartIco(node,&nbsp;startClass);//设置节点前面图标样式\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;//设置节点尾部样式\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;icoName&nbsp;=&nbsp;'';\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'二级复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'Secondary'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdGrade'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'分所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'BranchOrg'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'总所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'HeadOrg'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核/分所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdOrBranch'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核/总所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdOrHead'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'复核完成')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'Complete'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'已拒绝')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'refused'\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(icoName)&nbsp;me.SetNodeEndIco(node,&nbsp;icoName);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoad&nbsp;222');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'isCurrentProjectManage',&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.LocateNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;}else\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.isloadroot&nbsp;=true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.AutoLoadRoot()\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n","name":"质量复核项目树","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"compositionCustomerTreeQ"},{"isHide":false,"name":"Name","value":"质量复核项目树"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":23827},{"isHide":false,"name":"OrderBy","value":"level asc,CompanyRelationship asc,SortCode asc"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnSelected&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('OnSelected&nbsp;');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Top(&quot;[container='FormPanel']&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(panel))&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dr&nbsp;=&nbsp;this.UpForCode(&quot;draftReviewBatch&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemTree&nbsp;=&nbsp;panel.DownForCode('manuscriptItem');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemGrid&nbsp;=&nbsp;panel.DownForCode('manuscriptItems');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemTree))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemTree.Load)&nbsp;return;\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(dr.isReview)&nbsp;{//复核界面&nbsp;没有提交的项目不能查看底稿信息\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(node.stateText))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemTree.ClearTree();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;itemTree&nbsp;=&nbsp;panel.DownForCode('manuscriptItem');\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(itemTree))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!itemTree.Load)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//itemTree.params=JSON.stringify({param:'auditworkProjectID',value:node.id});\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.param&nbsp;=&nbsp;&quot;auditworkProjectID&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;node.id;\n&nbsp;&nbsp;&nbsp;&nbsp;itemTree.params&nbsp;=&nbsp;JSON.stringify(params);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;console.log(&quot;abc&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNotNullOrEmpty(itemGrid))&nbsp;itemGrid.SetValue([]);\n&nbsp;&nbsp;&nbsp;&nbsp;itemTree.Load();\n};\n\nthis.SetCheckBox&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dr&nbsp;=&nbsp;t.DownForCode(&quot;draftReviewBatch&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(dr&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(dr.isReview))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;!dr.isReview;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n};\n\nthis.OnCheck&nbsp;=&nbsp;function&nbsp;(node,&nbsp;checked)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(checked)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//当有一个节点不选中时取消根节点的选中\n&nbsp;&nbsp;&nbsp;&nbsp;me.SetRootUnCheck();\n};\n\nthis.NodeEndIcoOnClick&nbsp;=&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//结尾图标点击事件\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('NodeEndIcoOnClick');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;QualityReviewApprovalRecord&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;entityId&nbsp;=&nbsp;item.draftReviewBatchId;\n&nbsp;&nbsp;&nbsp;var&nbsp;entityIdothers&nbsp;=item.draftReviewBatchIdhis;\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.entityId&nbsp;=&nbsp;entityId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.entityIdothers=entityIdothers\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\n\nthis.RenderNodeStyle&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!node.isCurrentProjectManage&nbsp;&&&nbsp;node.target)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置不是自己的只读\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeReadOnlyStyle(node.target)\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.parentId)&nbsp;{//根节点不设置\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;startClass&nbsp;=&nbsp;node.companyRelationship&nbsp;==&nbsp;10&nbsp;?&nbsp;&quot;subsidiary&quot;&nbsp;:&nbsp;&quot;branch&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeStartIco(node,&nbsp;startClass);//设置节点前面图标样式\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;//设置节点尾部样式\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;icoName&nbsp;=&nbsp;'';\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'二级复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'Secondary'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdGrade'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'分所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'BranchOrg'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'总所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'HeadOrg'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核/分所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdOrBranch'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'三级复核/总所复核')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'ThirdOrHead'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'复核完成')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'Complete'\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.stateText&nbsp;==&nbsp;'已拒绝')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icoName&nbsp;=&nbsp;'refused'\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(icoName)&nbsp;me.SetNodeEndIco(node,&nbsp;icoName);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('AfterLoad&nbsp;222');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'isCurrentProjectManage',&nbsp;true);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.LocateNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;}else\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.isloadroot&nbsp;=true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.AutoLoadRoot()\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionCustomer"},{"isHide":false,"name":"queryUrl","value":"/CompositionCustomer-getCompositionCustomerTreeDTO.do"},{"isHide":false,"name":"IsCheckbox","value":"true"},{"isHide":false,"name":"DisableCascade","value":"true"},{"isHide":false,"name":"IsLoadRoot","value":"false"}],"sort":0}
2020-04-14 20:50:00