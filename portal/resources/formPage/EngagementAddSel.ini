{
	"action":[
		{
			"code":"Confirma",
			"name":"确定",
			"property":[
				{
					"isHide":false,
					"name":"SchemaCodeEngagementAdd",
					"value":"EngagementAdd"
				},
				{
					"isHide":false,
					"name":"SchemaCodeEngagementReference",
					"value":"EngagementReference"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"OnClicka"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.OnClicka = function () {
    console.log("MMM");
    var url = "UIForm-Web-Schema.json";
    var parameter = {};
    var me=this;
    // var m = me.Up();
    var mu = me.Top();
    var aoR = mu.DownForCode("addOrReference");
    var aoRv = aoR.GetValue();

    var opener=me.GetParent().GetParent().Opener;

    var custId = mu.DownForCode("compositionCustomerId");
    var custIdv = custId.GetValue();

    if (Framework.IsNullOrEmpty(custIdv.text)) {
        Framework.Message("请先选择被审计单位！", "");
        return;
    }
    if (Framework.IsNullOrEmpty(aoRv)) {
        Framework.Message("请先选择新增类型！", "");
        return;
    }

    //判断该单位下是否有业务约定书
    var params = {};
    params.customId = custIdv.id;


    var res = 0;
    Framework.AjaxRequest(opener, "Engagement-getAddReference.do", 'get', params, false, function (result) {
        res = result;
    });

    if(res >0 )
    {
        if (res != aoRv) {
            if (res == 10) {
                Framework.Message("该单位只能选择新增业务约定书！", "");
            } else {
                Framework.Message("该单位只能选择引用业务约定书！", "");
            }
            return;
        }
    }

    if (aoRv == 10) {
        parameter.schemaType = "FormPanel";
        parameter.schemaCode = "EngagementAdd";
        parameter.workFlowTypeId = "24612";//Base_WorkFlowType 中的ID
        Framework.OpenForm(opener, url, parameter, function (form) {
            form.smllWinows=me;
            if (form.Load) form.Load();
        });
    } else if (aoRv == 20) {
        parameter.schemaType = "GridPanel";
        parameter.schemaCode = "EngagementReference";
        Framework.OpenForm(opener, url, parameter, function (form) {
            form.cId = custIdv;
            form.smllWinows=me;
            if (form.Load) form.Load();
        });
        mu.Close();

    }
};

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"Close",
			"name":"取消",
			"property":[
				
			],
			"sort":1
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"compositionCustomerId",
					"control":"TreeCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnBeforeSelect = function (node) {
    if (node.readOnly)
        return false;
};


this.OnChange = function (newValue, oldValue) {
    console.log("OnChange");
    var params = {};
    params.customId = newValue;
    var AddOrReference = this.Top().DownForCode("AddOrReference")

    Framework.AjaxRequest(opener, "Engagement-getAddReference.do", 'get', params, false, function (result) {
        if (result > 0) {
            AddOrReference.SetValue(result);
            AddOrReference.SetReadOnly(true)
        } else {
            AddOrReference.SetReadOnly(false)
        }
    });
};",
					"name":"被审计单位",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"CompositionCustomer"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"CompositionCustomerTree1"
						},
						{
							"isHide":true,
							"name":"Colspan",
							"value":"2"
						},
						{
							"isHide":false,
							"name":"IsSelectParent",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"textfield",
							"value":"treeName"
						},
						{
							"isHide":false,
							"name":"DisableClosed",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"EnableNodeReadOnly",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnBeforeSelect = function (node) {
    if (node.readOnly)
        return false;
};


this.OnChange = function (newValue, oldValue) {
    console.log("OnChange");
    var params = {};
    params.customId = newValue;
    var AddOrReference = this.Top().DownForCode("AddOrReference")

    Framework.AjaxRequest(opener, "Engagement-getAddReference.do", 'get', params, false, function (result) {
        if (result > 0) {
            AddOrReference.SetValue(result);
            AddOrReference.SetReadOnly(true)
        } else {
            AddOrReference.SetReadOnly(false)
        }
    });
};

 

};"
						}
					],
					"select":"CompositionCustomerId[Entity(CompositionCustomer|Code(Code)#Name(Name))]",
					"sort":3
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"AddOrReferenceItem",
							"control":"RadioButtonItem",
							"dataPermission":[
								
							],
							"isReference":false,
							"name":"新增约定书",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Value",
									"value":"10"
								}
							],
							"sort":0
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"AddOrReferenceItem",
							"control":"RadioButtonItem",
							"dataPermission":[
								
							],
							"isReference":false,
							"name":"引用主项目约定书",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Value",
									"value":"20"
								}
							],
							"sort":1
						}
					],
					"code":"addOrReference",
					"control":"RadioButtonGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"新增/引用",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"AddOrReferenceType"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(AddOrReferenceType)]"
						},
						{
							"isHide":false,
							"name":"IsHorizontally",
							"value":"false"
						},
						{
							"isHide":false,
							"name":"DefaultValue",
							"value":"10"
						},
						{
							"isHide":false,
							"name":"style:margin-left",
							"value":"30px"
						}
					],
					"select":"AddOrReference[Enum(AddOrReferenceType)]",
					"sort":4
				}
			],
			"code":"fieldSet1",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":" ",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"engagementAddSel",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    console.log("MMM");
    var me = this;
    var tops = me.Opener.Top();
    var project = tops.Down('[entitytype="Project"]').First;
    var prjData = project.GetValue();
    var comp = me.DownForCode("CompositionCustomerId");
    if (Framework.IsNullOrEmpty(comp)) return;
    if (Framework.IsNullOrEmpty(prjData.id)) return;
    if (comp.LoadEnum) {
        //加载下拉
        comp.queryurl = "CompositionCustomer-getCompositionCompetenceTreeDTO.do?query_projectId=" + prjData.id;
        comp.LoadEnum();
    }

    if (prjData.financialReportProject == 20) { //非财报项目
        var params = {};
        params.prjId = prjData.id;
        Framework.AjaxRequest(this, "CompositionCustomer-getCompositionCustomerByPrjId.do", 'get', params, false, function (result) {
            comp.SetValue(result);
            comp.SetReadOnly(true)
        });
    }
};",
	"name":"提示",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"engagementAddSel"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"新增"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":18276
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    console.log("MMM");
    var me = this;
    var tops = me.Opener.Top();
    var project = tops.Down('[entitytype="Project"]').First;
    var prjData = project.GetValue();
    var comp = me.DownForCode("CompositionCustomerId");
    if (Framework.IsNullOrEmpty(comp)) return;
    if (Framework.IsNullOrEmpty(prjData.id)) return;
    if (comp.LoadEnum) {
        //加载下拉
        comp.queryurl = "CompositionCustomer-getCompositionCompetenceTreeDTO.do?query_projectId=" + prjData.id;
        comp.LoadEnum();
    }

    if (prjData.financialReportProject == 20) { //非财报项目
        var params = {};
        params.prjId = prjData.id;
        Framework.AjaxRequest(this, "CompositionCustomer-getCompositionCustomerByPrjId.do", 'get', params, false, function (result) {
            comp.SetValue(result);
            comp.SetReadOnly(true)
        });
    }
};

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"Engagement"
		},
		{
			"container":"Window",
			"isHide":true,
			"name":"Width",
			"value":"613"
		},
		{
			"container":"Window",
			"isHide":true,
			"name":"Height",
			"value":"250"
		},
		{
			"isHide":false,
			"name":"HelpPrompt",
			"value":""
		},
		{
			"isHide":false,
			"name":"IsShowRefresh",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"toolbarPosition",
			"value":"bottom"
		}
	],
	"sort":0
}
{"action":[{"code":"Confirma","name":"确定","property":[{"isHide":false,"name":"SchemaCodeEngagementAdd","value":"EngagementAdd"},{"isHide":false,"name":"SchemaCodeEngagementReference","value":"EngagementReference"},{"isHide":false,"name":"OnClick","value":"OnClicka"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnClicka&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;MMM&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me=this;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;m&nbsp;=&nbsp;me.Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mu&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;aoR&nbsp;=&nbsp;mu.DownForCode(&quot;addOrReference&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;aoRv&nbsp;=&nbsp;aoR.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;opener=me.GetParent().GetParent().Opener;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;custId&nbsp;=&nbsp;mu.DownForCode(&quot;compositionCustomerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;custIdv&nbsp;=&nbsp;custId.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(custIdv.text))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;请先选择被审计单位！&quot;,&nbsp;&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(aoRv))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;请先选择新增类型！&quot;,&nbsp;&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;//判断该单位下是否有业务约定书\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.customId&nbsp;=&nbsp;custIdv.id;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;res&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(opener,&nbsp;&quot;Engagement-getAddReference.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res&nbsp;=&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;});\n\n&nbsp;&nbsp;&nbsp;&nbsp;if(res&nbsp;&gt;0&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(res&nbsp;!=&nbsp;aoRv)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(res&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该单位只能选择新增业务约定书！&quot;,&nbsp;&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该单位只能选择引用业务约定书！&quot;,&nbsp;&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(aoRv&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EngagementAdd&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.workFlowTypeId&nbsp;=&nbsp;&quot;24612&quot;;//Base_WorkFlowType&nbsp;中的ID\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(opener,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.smllWinows=me;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(aoRv&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;EngagementReference&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(opener,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.cId&nbsp;=&nbsp;custIdv;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.smllWinows=me;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mu.Close();\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\r\n \r\n};"}],"sort":0},{"code":"Close","name":"取消","property":[],"sort":1}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":2},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":5},{"action":[],"authority":[],"children":[],"code":"compositionCustomerId","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnBeforeSelect&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.readOnly)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;OnChange&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.customId&nbsp;=&nbsp;newValue;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AddOrReference&nbsp;=&nbsp;this.Top().DownForCode(&quot;AddOrReference&quot;)\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(opener,&nbsp;&quot;Engagement-getAddReference.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetReadOnly(false)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};","name":"被审计单位","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"},{"isHide":false,"name":"SchemaCode","value":"CompositionCustomerTree1"},{"isHide":true,"name":"Colspan","value":"2"},{"isHide":false,"name":"IsSelectParent","value":"true"},{"isHide":false,"name":"textfield","value":"treeName"},{"isHide":false,"name":"DisableClosed","value":"true"},{"isHide":false,"name":"EnableNodeReadOnly","value":"true"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnBeforeSelect&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node.readOnly)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;OnChange&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.customId&nbsp;=&nbsp;newValue;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;AddOrReference&nbsp;=&nbsp;this.Top().DownForCode(&quot;AddOrReference&quot;)\n\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(opener,&nbsp;&quot;Engagement-getAddReference.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;&gt;&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddOrReference.SetReadOnly(false)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"}],"select":"CompositionCustomerId[Entity(CompositionCustomer|Code(Code)#Name(Name))]","sort":3}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"AddOrReferenceItem","control":"RadioButtonItem","dataPermission":[],"isReference":false,"name":"新增约定书","otherChildren":[],"property":[{"isHide":false,"name":"Value","value":"10"}],"sort":0},{"action":[],"authority":[],"children":[],"code":"AddOrReferenceItem","control":"RadioButtonItem","dataPermission":[],"isReference":false,"name":"引用主项目约定书","otherChildren":[],"property":[{"isHide":false,"name":"Value","value":"20"}],"sort":1}],"code":"addOrReference","control":"RadioButtonGroup","dataPermission":[],"isReference":false,"name":"新增/引用","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"AddOrReferenceType"},{"isHide":false,"name":"EntityConfig","value":"[Enum(AddOrReferenceType)]"},{"isHide":false,"name":"IsHorizontally","value":"false"},{"isHide":false,"name":"DefaultValue","value":"10"},{"isHide":false,"name":"style:margin-left","value":"30px"}],"select":"AddOrReference[Enum(AddOrReferenceType)]","sort":4}],"code":"fieldSet1","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":" ","otherChildren":[],"property":[],"sort":1},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"engagementAddSel","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;MMM&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tops&nbsp;=&nbsp;me.Opener.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;tops.Down('[entitytype=&quot;Project&quot;]').First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;prjData&nbsp;=&nbsp;project.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;comp&nbsp;=&nbsp;me.DownForCode(&quot;CompositionCustomerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(comp))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(prjData.id))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(comp.LoadEnum)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//加载下拉\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.queryurl&nbsp;=&nbsp;&quot;CompositionCustomer-getCompositionCompetenceTreeDTO.do?query_projectId=&quot;&nbsp;+&nbsp;prjData.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.LoadEnum();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(prjData.financialReportProject&nbsp;==&nbsp;20)&nbsp;{&nbsp;//非财报项目\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.prjId&nbsp;=&nbsp;prjData.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(this,&nbsp;&quot;CompositionCustomer-getCompositionCustomerByPrjId.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};","name":"提示","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"engagementAddSel"},{"isHide":false,"name":"Name","value":"新增"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":18276},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;MMM&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tops&nbsp;=&nbsp;me.Opener.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;project&nbsp;=&nbsp;tops.Down('[entitytype=&quot;Project&quot;]').First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;prjData&nbsp;=&nbsp;project.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;comp&nbsp;=&nbsp;me.DownForCode(&quot;CompositionCustomerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(comp))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(prjData.id))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(comp.LoadEnum)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//加载下拉\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.queryurl&nbsp;=&nbsp;&quot;CompositionCustomer-getCompositionCompetenceTreeDTO.do?query_projectId=&quot;&nbsp;+&nbsp;prjData.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.LoadEnum();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(prjData.financialReportProject&nbsp;==&nbsp;20)&nbsp;{&nbsp;//非财报项目\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.prjId&nbsp;=&nbsp;prjData.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(this,&nbsp;&quot;CompositionCustomer-getCompositionCustomerByPrjId.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"Engagement"},{"container":"Window","isHide":true,"name":"Width","value":"613"},{"container":"Window","isHide":true,"name":"Height","value":"250"},{"isHide":false,"name":"HelpPrompt","value":""},{"isHide":false,"name":"IsShowRefresh","value":"false"},{"isHide":false,"name":"toolbarPosition","value":"bottom"}],"sort":0}
2020-04-21 17:40:55