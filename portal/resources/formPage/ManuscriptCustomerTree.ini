{
	"action":[
		
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"manuscriptCustomerTree",
	"control":"Tree",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeAutoLoadRoot = function (b = false) {
    var me = this;
    var root = me.SetRootSelect();
    me.OnBeforeOnClick(root);
    return false;
}


this.OnBeforeOnClick = function (node) {
    console.log("node");
    var me = this;

    var Top = me.Top();
    var FormPanel = Top.DownForCode('Center').Down("[controltype='FormPanel']").First;
    var archiveDate = FormPanel.DownForCode('ArchiveDate');
    var transfererStaff = FormPanel.DownForCode('TransfererStaff');
    // if (Framework.IsNotNullOrEmpty(Top.Opener.GetSelected().docState)){
    // if(Framework.IsNotNullOrEmpty(archiveDate)&& Top.Opener.GetSelected().docState.id==33) archiveDate.SetReadOnly(TRUE);
    // if(Framework.IsNotNullOrEmpty(transfererStaff)&& Top.Opener.GetSelected().docState.id==33) transfererStaff.SetReadOnly(TRUE);
    // }
    var report = Top.DownForCode('ReporFileSet').Down("[controltype='GridPanel']").First;
    var boxs = Top.DownForCode('BoxAndBookFieldSet').Down("[controltype='EditorGridPanel']").First;
    if (FormPanel.SetBusinessTitle) FormPanel.SetBusinessTitle(node.text);
    var compostionCustomerId = node.id;
    if (Framework.IsNullOrEmpty(compostionCustomerId))
        return false;
    var params = {};
    params.compostionCustomerId = parseInt(compostionCustomerId);
    Framework.AjaxRequest(me, "/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation-Query.do", 'get', params, true, function (result) {
        FormPanel.SetValue(result)
        report.SetValue(result.repostList);
        boxs.SetValue(result.boxAndBookDTOList);
        setTableData(Top, result.reviewOpinionsDataDTOList);
    });
    return false;
}


function setTableData(Top, data) {
    var fenOpinionsFirstTable = null;
    var FenOpinionsThreeTable = null;
    var FenOpinionsTwoTable = null;
    var generalOpinionsFirstTable = null;
    var generalOpinionsTwoTable = null;
    var generalOpinionsThreeTable = null;
    //分所重点问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('fenOpinionsFirstTable')))
        fenOpinionsFirstTable = Top.DownForCode('fenOpinionsFirstTable');
    var FirstTableArray = [];
    //分所报告问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsTwoTable')))
        FenOpinionsTwoTable = Top.DownForCode('FenOpinionsTwoTable');
    var TwoTableArray = [];
    //分所底稿问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsThreeTable')))
        FenOpinionsThreeTable = Top.DownForCode('FenOpinionsThreeTable');
    var ThreeTableArray = [];

    //总所重点问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernalOpinionsFirstTable')))
        generalOpinionsFirstTable = Top.DownForCode('genernalOpinionsFirstTable');
    var generalFirstTableArray = [];
    //总所报告问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsTwoTable')))
        generalOpinionsTwoTable = Top.DownForCode('genernaOpinionsTwoTable');
    var generalTwoTableArray = [];
    //总所底稿问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsThreeTable')))
        generalOpinionsThreeTable = Top.DownForCode('genernaOpinionsThreeTable');
    var generalThreeTableArray = [];
    for (i = 0; i < data.length; i++) {
        if (data[i].manuscriptReviewState == 50) {
            if (data[i].rCType == 10) {
                FirstTableArray.push(data[i]);
            } else if (data[i].rCType == 20) {
                TwoTableArray.push(data[i]);
            } else {
                ThreeTableArray.push(data[i]);
            }
        } else {
            if (data[i].rCType == 10) {
                generalFirstTableArray.push(data[i]);
            } else if (data[i].rCType == 20) {
                generalTwoTableArray.push(data[i]);
            } else {
                generalThreeTableArray.push(data[i]);
            }
        }
    }
    if (Framework.IsNotNullOrEmpty(fenOpinionsFirstTable))
        fenOpinionsFirstTable.SetValue(FirstTableArray);
    if (Framework.IsNotNullOrEmpty(FenOpinionsTwoTable))
        FenOpinionsTwoTable.SetValue(TwoTableArray);
    if (Framework.IsNotNullOrEmpty(FenOpinionsThreeTable))
        FenOpinionsThreeTable.SetValue(ThreeTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsFirstTable))
        generalOpinionsFirstTable.SetValue(generalFirstTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsTwoTable))
        generalOpinionsTwoTable.SetValue(generalTwoTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsThreeTable))
        generalOpinionsThreeTable.SetValue(generalThreeTableArray);
};

function LocateNode(me) {
    if (!me.LoadData) return;
    var node = Framework.TreeDataFirst(me.LoadData, 'readOnly', false);
    if (node) {
        me.SetNodeSelect(node);
        me.OnBeforeOnClick(node);
    }
};
this.AfterLoad = function () {
    console.log("tree");
    var me = this;
    LocateNode(me);//定位节点

};

this.OnBeforeSelect = function (node) {
console.log("22222")
    var me = this;
    if (me.IsTreeLoad) return;
    console.log("OnBeforeSelect");
    var model = me.Top();
    var form = model.DownForCode("ManuscriptItemArchivesInfo");
  //  var form=forminfo.DownForCode("archiveInfo")
    if (form && form.GetIsChange()) {
        Framework.Confirm("存在未保存数据，是否强制离开!", function () {
            var bs = me.OnBeforeSelect;
            me.OnBeforeSelect = null;
            me.SetNodeSelect(node);
           // me.OnClick(node);
            me.OnBeforeOnClick(node);
            node.IsEnforce = false;
            me.OnBeforeSelect = bs;
        });
        node.IsEnforce = true;
        return false;
    }
}

",
	"name":"底稿被审计单位树",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"manuscriptCustomerTree"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"底稿被审计单位树"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":334194
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"Code"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeAutoLoadRoot = function (b = false) {
    var me = this;
    var root = me.SetRootSelect();
    me.OnBeforeOnClick(root);
    return false;
}


this.OnBeforeOnClick = function (node) {
    console.log("node");
    var me = this;

    var Top = me.Top();
    var FormPanel = Top.DownForCode('Center').Down("[controltype='FormPanel']").First;
    var archiveDate = FormPanel.DownForCode('ArchiveDate');
    var transfererStaff = FormPanel.DownForCode('TransfererStaff');
    // if (Framework.IsNotNullOrEmpty(Top.Opener.GetSelected().docState)){
    // if(Framework.IsNotNullOrEmpty(archiveDate)&& Top.Opener.GetSelected().docState.id==33) archiveDate.SetReadOnly(TRUE);
    // if(Framework.IsNotNullOrEmpty(transfererStaff)&& Top.Opener.GetSelected().docState.id==33) transfererStaff.SetReadOnly(TRUE);
    // }
    var report = Top.DownForCode('ReporFileSet').Down("[controltype='GridPanel']").First;
    var boxs = Top.DownForCode('BoxAndBookFieldSet').Down("[controltype='EditorGridPanel']").First;
    if (FormPanel.SetBusinessTitle) FormPanel.SetBusinessTitle(node.text);
    var compostionCustomerId = node.id;
    if (Framework.IsNullOrEmpty(compostionCustomerId))
        return false;
    var params = {};
    params.compostionCustomerId = parseInt(compostionCustomerId);
    Framework.AjaxRequest(me, "/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation-Query.do", 'get', params, true, function (result) {
        FormPanel.SetValue(result)
        report.SetValue(result.repostList);
        boxs.SetValue(result.boxAndBookDTOList);
        setTableData(Top, result.reviewOpinionsDataDTOList);
    });
    return false;
}


function setTableData(Top, data) {
    var fenOpinionsFirstTable = null;
    var FenOpinionsThreeTable = null;
    var FenOpinionsTwoTable = null;
    var generalOpinionsFirstTable = null;
    var generalOpinionsTwoTable = null;
    var generalOpinionsThreeTable = null;
    //分所重点问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('fenOpinionsFirstTable')))
        fenOpinionsFirstTable = Top.DownForCode('fenOpinionsFirstTable');
    var FirstTableArray = [];
    //分所报告问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsTwoTable')))
        FenOpinionsTwoTable = Top.DownForCode('FenOpinionsTwoTable');
    var TwoTableArray = [];
    //分所底稿问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsThreeTable')))
        FenOpinionsThreeTable = Top.DownForCode('FenOpinionsThreeTable');
    var ThreeTableArray = [];

    //总所重点问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernalOpinionsFirstTable')))
        generalOpinionsFirstTable = Top.DownForCode('genernalOpinionsFirstTable');
    var generalFirstTableArray = [];
    //总所报告问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsTwoTable')))
        generalOpinionsTwoTable = Top.DownForCode('genernaOpinionsTwoTable');
    var generalTwoTableArray = [];
    //总所底稿问题
    if (Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsThreeTable')))
        generalOpinionsThreeTable = Top.DownForCode('genernaOpinionsThreeTable');
    var generalThreeTableArray = [];
    for (i = 0; i < data.length; i++) {
        if (data[i].manuscriptReviewState == 50) {
            if (data[i].rCType == 10) {
                FirstTableArray.push(data[i]);
            } else if (data[i].rCType == 20) {
                TwoTableArray.push(data[i]);
            } else {
                ThreeTableArray.push(data[i]);
            }
        } else {
            if (data[i].rCType == 10) {
                generalFirstTableArray.push(data[i]);
            } else if (data[i].rCType == 20) {
                generalTwoTableArray.push(data[i]);
            } else {
                generalThreeTableArray.push(data[i]);
            }
        }
    }
    if (Framework.IsNotNullOrEmpty(fenOpinionsFirstTable))
        fenOpinionsFirstTable.SetValue(FirstTableArray);
    if (Framework.IsNotNullOrEmpty(FenOpinionsTwoTable))
        FenOpinionsTwoTable.SetValue(TwoTableArray);
    if (Framework.IsNotNullOrEmpty(FenOpinionsThreeTable))
        FenOpinionsThreeTable.SetValue(ThreeTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsFirstTable))
        generalOpinionsFirstTable.SetValue(generalFirstTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsTwoTable))
        generalOpinionsTwoTable.SetValue(generalTwoTableArray);
    if (Framework.IsNotNullOrEmpty(generalOpinionsThreeTable))
        generalOpinionsThreeTable.SetValue(generalThreeTableArray);
};

function LocateNode(me) {
    if (!me.LoadData) return;
    var node = Framework.TreeDataFirst(me.LoadData, 'readOnly', false);
    if (node) {
        me.SetNodeSelect(node);
        me.OnBeforeOnClick(node);
    }
};
this.AfterLoad = function () {
    console.log("tree");
    var me = this;
    LocateNode(me);//定位节点

};

this.OnBeforeSelect = function (node) {
console.log("22222")
    var me = this;
    if (me.IsTreeLoad) return;
    console.log("OnBeforeSelect");
    var model = me.Top();
    var form = model.DownForCode("ManuscriptItemArchivesInfo");
  //  var form=forminfo.DownForCode("archiveInfo")
    if (form && form.GetIsChange()) {
        Framework.Confirm("存在未保存数据，是否强制离开!", function () {
            var bs = me.OnBeforeSelect;
            me.OnBeforeSelect = null;
            me.SetNodeSelect(node);
           // me.OnClick(node);
            me.OnBeforeOnClick(node);
            node.IsEnforce = false;
            me.OnBeforeSelect = bs;
        });
        node.IsEnforce = true;
        return false;
    }
}



 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionCustomer"
		},
		{
			"isHide":false,
			"name":"IsLoadRoot",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"queryurl",
			"value":"CompositionCustomer-getCompositionCompetenceTreeDTO.do"
		},
		{
			"isHide":false,
			"name":"EnableNodeReadOnly",
			"value":"true"
		}
	],
	"sort":0
}
{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"manuscriptCustomerTree","control":"Tree","dataPermission":[],"isReference":false,"javaScript":"this.BeforeAutoLoadRoot&nbsp;=&nbsp;function&nbsp;(b&nbsp;=&nbsp;false)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;root&nbsp;=&nbsp;me.SetRootSelect();\n&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(root);\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\n\nthis.OnBeforeOnClick&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;node&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;Top&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FormPanel&nbsp;=&nbsp;Top.DownForCode('Center').Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;archiveDate&nbsp;=&nbsp;FormPanel.DownForCode('ArchiveDate');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;transfererStaff&nbsp;=&nbsp;FormPanel.DownForCode('TransfererStaff');\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.Opener.GetSelected().docState)){\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if(Framework.IsNotNullOrEmpty(archiveDate)&&&nbsp;Top.Opener.GetSelected().docState.id==33)&nbsp;archiveDate.SetReadOnly(TRUE);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if(Framework.IsNotNullOrEmpty(transfererStaff)&&&nbsp;Top.Opener.GetSelected().docState.id==33)&nbsp;transfererStaff.SetReadOnly(TRUE);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;report&nbsp;=&nbsp;Top.DownForCode('ReporFileSet').Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxs&nbsp;=&nbsp;Top.DownForCode('BoxAndBookFieldSet').Down(&quot;[controltype='EditorGridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(FormPanel.SetBusinessTitle)&nbsp;FormPanel.SetBusinessTitle(node.text);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compostionCustomerId&nbsp;=&nbsp;node.id;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(compostionCustomerId))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionCustomerId&nbsp;=&nbsp;parseInt(compostionCustomerId);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation-Query.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormPanel.SetValue(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report.SetValue(result.repostList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.SetValue(result.boxAndBookDTOList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTableData(Top,&nbsp;result.reviewOpinionsDataDTOList);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\n\nfunction&nbsp;setTableData(Top,&nbsp;data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;fenOpinionsFirstTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FenOpinionsThreeTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FenOpinionsTwoTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsFirstTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsTwoTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsThreeTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;//分所重点问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('fenOpinionsFirstTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fenOpinionsFirstTable&nbsp;=&nbsp;Top.DownForCode('fenOpinionsFirstTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//分所报告问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsTwoTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsTwoTable&nbsp;=&nbsp;Top.DownForCode('FenOpinionsTwoTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TwoTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//分所底稿问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsThreeTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsThreeTable&nbsp;=&nbsp;Top.DownForCode('FenOpinionsThreeTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ThreeTableArray&nbsp;=&nbsp;[];\n\n&nbsp;&nbsp;&nbsp;&nbsp;//总所重点问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernalOpinionsFirstTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsFirstTable&nbsp;=&nbsp;Top.DownForCode('genernalOpinionsFirstTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalFirstTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//总所报告问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsTwoTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsTwoTable&nbsp;=&nbsp;Top.DownForCode('genernaOpinionsTwoTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalTwoTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//总所底稿问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsThreeTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsThreeTable&nbsp;=&nbsp;Top.DownForCode('genernaOpinionsThreeTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalThreeTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;data.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].manuscriptReviewState&nbsp;==&nbsp;50)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TwoTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThreeTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalFirstTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalTwoTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalThreeTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(fenOpinionsFirstTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fenOpinionsFirstTable.SetValue(FirstTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(FenOpinionsTwoTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsTwoTable.SetValue(TwoTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(FenOpinionsThreeTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsThreeTable.SetValue(ThreeTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsFirstTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsFirstTable.SetValue(generalFirstTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsTwoTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsTwoTable.SetValue(generalTwoTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsThreeTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsThreeTable.SetValue(generalThreeTableArray);\n};\n\nfunction&nbsp;LocateNode(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'readOnly',&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;tree&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;LocateNode(me);//定位节点\n\n};\n\nthis.OnBeforeSelect&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\nconsole.log(&quot;22222&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsTreeLoad)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;OnBeforeSelect&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;model.DownForCode(&quot;ManuscriptItemArchivesInfo&quot;);\n&nbsp;&nbsp;//&nbsp;&nbsp;var&nbsp;form=forminfo.DownForCode(&quot;archiveInfo&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form&nbsp;&&&nbsp;form.GetIsChange())&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;存在未保存数据，是否强制离开!&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;bs&nbsp;=&nbsp;me.OnBeforeSelect;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeSelect&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;me.OnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.IsEnforce&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeSelect&nbsp;=&nbsp;bs;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.IsEnforce&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n","name":"底稿被审计单位树","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"manuscriptCustomerTree"},{"isHide":false,"name":"Name","value":"底稿被审计单位树"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":334194},{"isHide":false,"name":"OrderBy","value":"Code"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeAutoLoadRoot&nbsp;=&nbsp;function&nbsp;(b&nbsp;=&nbsp;false)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;root&nbsp;=&nbsp;me.SetRootSelect();\n&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(root);\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\n\nthis.OnBeforeOnClick&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;node&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;Top&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FormPanel&nbsp;=&nbsp;Top.DownForCode('Center').Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;archiveDate&nbsp;=&nbsp;FormPanel.DownForCode('ArchiveDate');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;transfererStaff&nbsp;=&nbsp;FormPanel.DownForCode('TransfererStaff');\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.Opener.GetSelected().docState)){\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if(Framework.IsNotNullOrEmpty(archiveDate)&&&nbsp;Top.Opener.GetSelected().docState.id==33)&nbsp;archiveDate.SetReadOnly(TRUE);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if(Framework.IsNotNullOrEmpty(transfererStaff)&&&nbsp;Top.Opener.GetSelected().docState.id==33)&nbsp;transfererStaff.SetReadOnly(TRUE);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;report&nbsp;=&nbsp;Top.DownForCode('ReporFileSet').Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxs&nbsp;=&nbsp;Top.DownForCode('BoxAndBookFieldSet').Down(&quot;[controltype='EditorGridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(FormPanel.SetBusinessTitle)&nbsp;FormPanel.SetBusinessTitle(node.text);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compostionCustomerId&nbsp;=&nbsp;node.id;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(compostionCustomerId))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionCustomerId&nbsp;=&nbsp;parseInt(compostionCustomerId);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation-Query.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormPanel.SetValue(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report.SetValue(result.repostList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.SetValue(result.boxAndBookDTOList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTableData(Top,&nbsp;result.reviewOpinionsDataDTOList);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\n\nfunction&nbsp;setTableData(Top,&nbsp;data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;fenOpinionsFirstTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FenOpinionsThreeTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FenOpinionsTwoTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsFirstTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsTwoTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalOpinionsThreeTable&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;//分所重点问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('fenOpinionsFirstTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fenOpinionsFirstTable&nbsp;=&nbsp;Top.DownForCode('fenOpinionsFirstTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//分所报告问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsTwoTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsTwoTable&nbsp;=&nbsp;Top.DownForCode('FenOpinionsTwoTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TwoTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//分所底稿问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('FenOpinionsThreeTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsThreeTable&nbsp;=&nbsp;Top.DownForCode('FenOpinionsThreeTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ThreeTableArray&nbsp;=&nbsp;[];\n\n&nbsp;&nbsp;&nbsp;&nbsp;//总所重点问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernalOpinionsFirstTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsFirstTable&nbsp;=&nbsp;Top.DownForCode('genernalOpinionsFirstTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalFirstTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//总所报告问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsTwoTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsTwoTable&nbsp;=&nbsp;Top.DownForCode('genernaOpinionsTwoTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalTwoTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;//总所底稿问题\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(Top.DownForCode('genernaOpinionsThreeTable')))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsThreeTable&nbsp;=&nbsp;Top.DownForCode('genernaOpinionsThreeTable');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;generalThreeTableArray&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;data.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].manuscriptReviewState&nbsp;==&nbsp;50)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TwoTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThreeTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalFirstTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(data[i].rCType&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalTwoTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalThreeTableArray.push(data[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(fenOpinionsFirstTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fenOpinionsFirstTable.SetValue(FirstTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(FenOpinionsTwoTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsTwoTable.SetValue(TwoTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(FenOpinionsThreeTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FenOpinionsThreeTable.SetValue(ThreeTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsFirstTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsFirstTable.SetValue(generalFirstTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsTwoTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsTwoTable.SetValue(generalTwoTableArray);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(generalOpinionsThreeTable))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generalOpinionsThreeTable.SetValue(generalThreeTableArray);\n};\n\nfunction&nbsp;LocateNode(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!me.LoadData)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;node&nbsp;=&nbsp;Framework.TreeDataFirst(me.LoadData,&nbsp;'readOnly',&nbsp;false);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(node)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;tree&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;LocateNode(me);//定位节点\n\n};\n\nthis.OnBeforeSelect&nbsp;=&nbsp;function&nbsp;(node)&nbsp;{\nconsole.log(&quot;22222&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsTreeLoad)&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;OnBeforeSelect&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;model.DownForCode(&quot;ManuscriptItemArchivesInfo&quot;);\n&nbsp;&nbsp;//&nbsp;&nbsp;var&nbsp;form=forminfo.DownForCode(&quot;archiveInfo&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form&nbsp;&&&nbsp;form.GetIsChange())&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;存在未保存数据，是否强制离开!&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;bs&nbsp;=&nbsp;me.OnBeforeSelect;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeSelect&nbsp;=&nbsp;null;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetNodeSelect(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;me.OnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeOnClick(node);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.IsEnforce&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnBeforeSelect&nbsp;=&nbsp;bs;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.IsEnforce&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionCustomer"},{"isHide":false,"name":"IsLoadRoot","value":"false"},{"isHide":false,"name":"queryurl","value":"CompositionCustomer-getCompositionCompetenceTreeDTO.do"},{"isHide":false,"name":"EnableNodeReadOnly","value":"true"}],"sort":0}
2020-05-06 18:40:28