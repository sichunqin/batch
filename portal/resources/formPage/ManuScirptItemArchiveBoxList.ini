{
	"action":[
		{
			"code":"AddRow",
			"name":"新增行",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"AddRow"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.AddRow = function () {
    console.log("addrow1")
    var me = this.ParentNode;
    var index = me.GetRows().length + 1;
    var row = {};
    row.uuid = Framework.NewGuid();
    row.box = "第" + index + "盒";
    var rowData = {};
    rowData.index = index;
    rowData.row = row;
    me.InsertRow(rowData);
    
    me.Top().DownForCode("BoxNumber").SetValue(parseInt(me.Top().DownForCode("BoxNumber").GetValue())+1);
}

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"printLabelPaperAll",
			"name":"批量打印标签纸",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"OnClickabcd"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.OnClickabcd = function () {
    console.log("MMM2222");
    var attachmentSelections =  this.GetParent().GetParent().GetChecked();
    if (attachmentSelections.length == 0) {
        Framework.Message("请选择一条数据操作！");
        return;
    }
    var parameter={};
    var url = "UIForm-Web-Schema.json";
    parameter.schemaType = "GridPanelSelecter";
    parameter.schemaCode = "LabelPaperTemplateSelecter";
    Framework.OpenForm(me, url, parameter, function (form) {
        if (form.Load) form.Load();
    });
}

 

};"
				}
			],
			"sort":1
		},
		{
			"code":"printLabelPaper",
			"name":"打印标签纸",
			"property":[
				{
					"isHide":false,
					"name":"IsRenderColumn",
					"value":"true"
				},
				{
					"isHide":false,
					"name":"LinkImg",
					"value":"/Styles/icons/index/icon_files.png"
				},
				{
					"isHide":false,
					"name":"ReferenceId",
					"value":20000044
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"printLabelPaper"
				}
			],
			"sort":2
		},
		{
			"code":"Delete",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"IsRenderColumn",
					"value":"true"
				},
				{
					"isHide":false,
					"name":"ActionGroup",
					"value":"操作"
				},
				{
					"isHide":false,
					"name":"LinkImg",
					"value":"/Styles/icons/index/icon_delete.png"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"deleteRow"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 





this.deleteRow = function () {
    console.log("del");
    var Top = this.Top();
    var boxs = Top.DownForCode('BoxAndBookFieldSet').Down("[controltype='EditorGridPanel']").First;
    var data = boxs.LinkSelectData;
    var compostionCustomerId = Top.DownForCode('CompostionCustomerId').GetValue();

    if (Framework.IsNotNullOrEmpty(data) && Framework.IsNotNullOrEmpty(data.id)) {
        Framework.Confirm("确定要删除该数据吗?", function () {
            var params = {};
            params.ArchiveId = data.id;
            Framework.AjaxRequest(me, "ManuScirptItemArchive-deleteDataRow.do", 'get', params, false, function (result) {
                boxs.Load();
                var param = {};
                param.compostionCustomerId = compostionCustomerId;
                Framework.AjaxRequest(me, "/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation.do", 'get', param, true, function (result) {
                    boxs.SetValue(result.boxAndBookDTOList);
                })
            })
            var boxcount = Top.DownForCode("BoxNumber").GetValue()
            var bookcount = Top.DownForCode("BookNumber").GetValue()
            if (boxcount > 0 && bookcount) {
                Top.DownForCode("BoxNumber").SetValue(boxcount - 1);
                Top.DownForCode("BookNumber").SetValue(bookcount - data.book);
            }
        });
    } else {
        boxs.DeleteRow(data);
        boxs.SetValue(boxs.GetRows());
        var boxcount = Top.DownForCode("BoxNumber").GetValue()
        var bookcount = Top.DownForCode("BookNumber").GetValue()
        if (boxcount > 0 && bookcount) {
            Top.DownForCode("BoxNumber").SetValue(boxcount - 1);
            Top.DownForCode("BookNumber").SetValue(bookcount - data.book);
        }
    }
   
}

function stringParseInt(str) {
    return str.replace(/[^0-9]/ig, "");
};




 

};"
				}
			],
			"sort":3
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"box",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"纸质底稿盒号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"background-color",
							"value":"pink"
						}
					],
					"select":"Box",
					"sort":1
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"book",
					"control":"Number",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"纸质底稿册数",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						}
					],
					"select":"book",
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"bookRange",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"册数范围",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						}
					],
					"select":"bookRange",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"content",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"内容",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":1000
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"align",
							"value":"left"
						},
						{
							"isHide":false,
							"name":"halign",
							"value":"center"
						}
					],
					"select":"Content",
					"sort":4
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"manuScirptItemArchiveBoxList",
	"control":"EditorGridPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.OnEditCell = function (index, field, row) {
    if (field == "box" || field == "bookRange")
        return false;
};


this.SetActionColumnVisible = function (btn, row) {
    var me = this;
    var state = me.Top().DownForCode("manuscriptItemArchiveState");
    if (Framework.IsNotNullOrEmpty(state)) {
        var stateVal = state.GetValue();
        if (btn.code == "Delete" && stateVal > 10)
            return true;
    }
};

this.bookEndEdit = function (index, field, value, row) {
    console.log("1")
    var me = this;
    if (index == 0) {
        var rowdata = GetRowData(index, me);
        var model = Framework.CopyModel(rowdata)
        var value = rowdata.book;
        var reg = /(^[1-9]{1}[0-9]☆$)|(^[0-9]☆\\.[0-9]{2}$)/
        if (!reg.test(value)) {
            model.book = "";
            model.bookRange = "";
        } else {
            model.bookRange = "第" + stringParseInt(model.box) + "-" + model.book + "册";

        }
        this.PushRow(model);
        boxAndBookCount(me);
    } else {
        var upRowData = GetRowData(index - 1, me);
        var rowData = GetRowData(index, me);
        if (Framework.IsNotNullOrEmpty(rowData.book)) {
            var model = Framework.CopyModel(rowData);
            var value = rowData.book;
            var reg = /(^[1-9]{1}[0-9]☆$)|(^[0-9]☆\\.[0-9]{2}$)/
            if (!reg.test(value)) {
                model.book = "";
                model.bookRange = "";
            } else {
                var range = upRowData.bookRange.indexOf("-");
                var end = parseInt(stringParseInt(upRowData.bookRange.substring(range)));
                //var boxnum = parseInt(stringParseInt(upRowData.box)) + parseInt(upRowData.book);
                var boxnum = end + 1;
                var booknum = end + parseInt(rowData.book);
                model.bookRange = "第" + boxnum + "-" + booknum + "册";
            }
            ;
            this.PushRow(model);
            boxAndBookCount(me);
        }
    }
};

function GetRowData(index, me) {
    return me.GetData(index);
};

function stringParseInt(str) {
    return str.replace(/[^0-9]/ig, "");
};

function boxAndBookCount(me) {
    var model = {
        boxnum: 0,
        booknum: 0
    };
    for (i = 0; i < me.GetRows().length; i++) {
        var rowData = GetRowData(i, me);
        model.boxnum = parseInt(model.boxnum) + parseInt(stringParseInt(rowData.box));
        model.booknum = parseInt(model.booknum) + parseInt(stringParseInt(rowData.book));
    }
    var top = me.Top();
    top.DownForCode("BoxNumber").SetValue(me.GetRows().length);
    top.DownForCode("BookNumber").SetValue(model.booknum);
}

this.AfterRender = function () {
    if (this.Load) this.Load();
};",
	"name":"底稿归档盒数",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"manuScirptItemArchiveBoxList"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"底稿归档盒数"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":341542
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"Id"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.OnEditCell = function (index, field, row) {
    if (field == "box" || field == "bookRange")
        return false;
};


this.SetActionColumnVisible = function (btn, row) {
    var me = this;
    var state = me.Top().DownForCode("manuscriptItemArchiveState");
    if (Framework.IsNotNullOrEmpty(state)) {
        var stateVal = state.GetValue();
        if (btn.code == "Delete" && stateVal > 10)
            return true;
    }
};

this.bookEndEdit = function (index, field, value, row) {
    console.log("1")
    var me = this;
    if (index == 0) {
        var rowdata = GetRowData(index, me);
        var model = Framework.CopyModel(rowdata)
        var value = rowdata.book;
        var reg = /(^[1-9]{1}[0-9]☆$)|(^[0-9]☆\\.[0-9]{2}$)/
        if (!reg.test(value)) {
            model.book = "";
            model.bookRange = "";
        } else {
            model.bookRange = "第" + stringParseInt(model.box) + "-" + model.book + "册";

        }
        this.PushRow(model);
        boxAndBookCount(me);
    } else {
        var upRowData = GetRowData(index - 1, me);
        var rowData = GetRowData(index, me);
        if (Framework.IsNotNullOrEmpty(rowData.book)) {
            var model = Framework.CopyModel(rowData);
            var value = rowData.book;
            var reg = /(^[1-9]{1}[0-9]☆$)|(^[0-9]☆\\.[0-9]{2}$)/
            if (!reg.test(value)) {
                model.book = "";
                model.bookRange = "";
            } else {
                var range = upRowData.bookRange.indexOf("-");
                var end = parseInt(stringParseInt(upRowData.bookRange.substring(range)));
                //var boxnum = parseInt(stringParseInt(upRowData.box)) + parseInt(upRowData.book);
                var boxnum = end + 1;
                var booknum = end + parseInt(rowData.book);
                model.bookRange = "第" + boxnum + "-" + booknum + "册";
            }
            ;
            this.PushRow(model);
            boxAndBookCount(me);
        }
    }
};

function GetRowData(index, me) {
    return me.GetData(index);
};

function stringParseInt(str) {
    return str.replace(/[^0-9]/ig, "");
};

function boxAndBookCount(me) {
    var model = {
        boxnum: 0,
        booknum: 0
    };
    for (i = 0; i < me.GetRows().length; i++) {
        var rowData = GetRowData(i, me);
        model.boxnum = parseInt(model.boxnum) + parseInt(stringParseInt(rowData.box));
        model.booknum = parseInt(model.booknum) + parseInt(stringParseInt(rowData.book));
    }
    var top = me.Top();
    top.DownForCode("BoxNumber").SetValue(me.GetRows().length);
    top.DownForCode("BookNumber").SetValue(model.booknum);
}

this.AfterRender = function () {
    if (this.Load) this.Load();
};

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"BoxAndNumberBook"
		},
		{
			"isHide":false,
			"name":"fitColumns",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"Checkbox",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"pagination",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"rownumbers",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"Height",
			"value":"auto"
		}
	],
	"sort":0
}
{"action":[{"code":"AddRow","name":"新增行","property":[{"isHide":false,"name":"OnClick","value":"AddRow"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.AddRow&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;addrow1&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this.ParentNode;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;index&nbsp;=&nbsp;me.GetRows().length&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;row&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;row.uuid&nbsp;=&nbsp;Framework.NewGuid();\n&nbsp;&nbsp;&nbsp;&nbsp;row.box&nbsp;=&nbsp;&quot;第&quot;&nbsp;+&nbsp;index&nbsp;+&nbsp;&quot;盒&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowData&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;rowData.index&nbsp;=&nbsp;index;\n&nbsp;&nbsp;&nbsp;&nbsp;rowData.row&nbsp;=&nbsp;row;\n&nbsp;&nbsp;&nbsp;&nbsp;me.InsertRow(rowData);\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;me.Top().DownForCode(&quot;BoxNumber&quot;).SetValue(parseInt(me.Top().DownForCode(&quot;BoxNumber&quot;).GetValue())+1);\n}\r\n \r\n};"}],"sort":0},{"code":"printLabelPaperAll","name":"批量打印标签纸","property":[{"isHide":false,"name":"OnClick","value":"OnClickabcd"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnClickabcd&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;MMM2222&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;attachmentSelections&nbsp;=&nbsp; this.GetParent().GetParent().GetChecked();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(attachmentSelections.length&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;请选择一条数据操作！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter={};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanelSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;LabelPaperTemplateSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":1},{"code":"printLabelPaper","name":"打印标签纸","property":[{"isHide":false,"name":"IsRenderColumn","value":"true"},{"isHide":false,"name":"LinkImg","value":"/Styles/icons/index/icon_files.png"},{"isHide":false,"name":"ReferenceId","value":20000044},{"isHide":false,"name":"OnClick","value":"printLabelPaper"}],"sort":2},{"code":"Delete","name":"删除","property":[{"isHide":false,"name":"IsRenderColumn","value":"true"},{"isHide":false,"name":"ActionGroup","value":"操作"},{"isHide":false,"name":"LinkImg","value":"/Styles/icons/index/icon_delete.png"},{"isHide":false,"name":"OnClick","value":"deleteRow"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\n\n\n\n\nthis.deleteRow&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;del&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;Top&nbsp;=&nbsp;this.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxs&nbsp;=&nbsp;Top.DownForCode('BoxAndBookFieldSet').Down(&quot;[controltype='EditorGridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;data&nbsp;=&nbsp;boxs.LinkSelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compostionCustomerId&nbsp;=&nbsp;Top.DownForCode('CompostionCustomerId').GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(data)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(data.id))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;确定要删除该数据吗?&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.ArchiveId&nbsp;=&nbsp;data.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ManuScirptItemArchive-deleteDataRow.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;param&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.compostionCustomerId&nbsp;=&nbsp;compostionCustomerId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/ManuScirptItemArchive-geCompostionCustomerAndArchiveInformation.do&quot;,&nbsp;'get',&nbsp;param,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.SetValue(result.boxAndBookDTOList);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxcount&nbsp;=&nbsp;Top.DownForCode(&quot;BoxNumber&quot;).GetValue()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;bookcount&nbsp;=&nbsp;Top.DownForCode(&quot;BookNumber&quot;).GetValue()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(boxcount&nbsp;&gt;&nbsp;0&nbsp;&&&nbsp;bookcount)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Top.DownForCode(&quot;BoxNumber&quot;).SetValue(boxcount&nbsp;-&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Top.DownForCode(&quot;BookNumber&quot;).SetValue(bookcount&nbsp;-&nbsp;data.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.DeleteRow(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxs.SetValue(boxs.GetRows());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxcount&nbsp;=&nbsp;Top.DownForCode(&quot;BoxNumber&quot;).GetValue()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;bookcount&nbsp;=&nbsp;Top.DownForCode(&quot;BookNumber&quot;).GetValue()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(boxcount&nbsp;&gt;&nbsp;0&nbsp;&&&nbsp;bookcount)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Top.DownForCode(&quot;BoxNumber&quot;).SetValue(boxcount&nbsp;-&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Top.DownForCode(&quot;BookNumber&quot;).SetValue(bookcount&nbsp;-&nbsp;data.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;\n}\n\nfunction&nbsp;stringParseInt(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str.replace(/[^0-9]/ig,&nbsp;&quot;&quot;);\n};\n\n\n\r\n \r\n};"}],"sort":3}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":5},{"action":[],"authority":[],"children":[],"code":"box","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"纸质底稿盒号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"},{"isHide":false,"name":"background-color","value":"pink"}],"select":"Box","sort":1},{"action":[],"authority":[],"children":[],"code":"book","control":"Number","dataPermission":[],"isReference":false,"name":"纸质底稿册数","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"book","sort":2},{"action":[],"authority":[],"children":[],"code":"bookRange","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"册数范围","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"bookRange","sort":3},{"action":[],"authority":[],"children":[],"code":"content","control":"Text","dataPermission":[],"isReference":false,"name":"内容","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":1000},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"},{"isHide":false,"name":"align","value":"left"},{"isHide":false,"name":"halign","value":"center"}],"select":"Content","sort":4}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"manuScirptItemArchiveBoxList","control":"EditorGridPanel","dataPermission":[],"isReference":false,"javaScript":"this.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;box&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;bookRange&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;state&nbsp;=&nbsp;me.Top().DownForCode(&quot;manuscriptItemArchiveState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(state))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stateVal&nbsp;=&nbsp;state.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.code&nbsp;==&nbsp;&quot;Delete&quot;&nbsp;&&&nbsp;stateVal&nbsp;&gt;&nbsp;10)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.bookEndEdit&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;value,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;1&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(index&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowdata&nbsp;=&nbsp;GetRowData(index,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;Framework.CopyModel(rowdata)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;rowdata.book;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reg&nbsp;=&nbsp;/(^[1-9]{1}[0-9]*$)|(^[0-9]*\\.[0-9]{2}$)/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!reg.test(value))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.book&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;第&quot;&nbsp;+&nbsp;stringParseInt(model.box)&nbsp;+&nbsp;&quot;-&quot;&nbsp;+&nbsp;model.book&nbsp;+&nbsp;&quot;册&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(model);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxAndBookCount(me);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;upRowData&nbsp;=&nbsp;GetRowData(index&nbsp;-&nbsp;1,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowData&nbsp;=&nbsp;GetRowData(index,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(rowData.book))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;Framework.CopyModel(rowData);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;rowData.book;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reg&nbsp;=&nbsp;/(^[1-9]{1}[0-9]*$)|(^[0-9]*\\.[0-9]{2}$)/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!reg.test(value))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.book&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;range&nbsp;=&nbsp;upRowData.bookRange.indexOf(&quot;-&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;end&nbsp;=&nbsp;parseInt(stringParseInt(upRowData.bookRange.substring(range)));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//var&nbsp;boxnum&nbsp;=&nbsp;parseInt(stringParseInt(upRowData.box))&nbsp;+&nbsp;parseInt(upRowData.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxnum&nbsp;=&nbsp;end&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;booknum&nbsp;=&nbsp;end&nbsp;+&nbsp;parseInt(rowData.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;第&quot;&nbsp;+&nbsp;boxnum&nbsp;+&nbsp;&quot;-&quot;&nbsp;+&nbsp;booknum&nbsp;+&nbsp;&quot;册&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(model);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxAndBookCount(me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nfunction&nbsp;GetRowData(index,&nbsp;me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;me.GetData(index);\n};\n\nfunction&nbsp;stringParseInt(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str.replace(/[^0-9]/ig,&nbsp;&quot;&quot;);\n};\n\nfunction&nbsp;boxAndBookCount(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxnum:&nbsp;0,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;booknum:&nbsp;0\n&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;me.GetRows().length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowData&nbsp;=&nbsp;GetRowData(i,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.boxnum&nbsp;=&nbsp;parseInt(model.boxnum)&nbsp;+&nbsp;parseInt(stringParseInt(rowData.box));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.booknum&nbsp;=&nbsp;parseInt(model.booknum)&nbsp;+&nbsp;parseInt(stringParseInt(rowData.book));\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;top&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;top.DownForCode(&quot;BoxNumber&quot;).SetValue(me.GetRows().length);\n&nbsp;&nbsp;&nbsp;&nbsp;top.DownForCode(&quot;BookNumber&quot;).SetValue(model.booknum);\n}\n\nthis.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.Load)&nbsp;this.Load();\n};","name":"底稿归档盒数","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"manuScirptItemArchiveBoxList"},{"isHide":false,"name":"Name","value":"底稿归档盒数"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":341542},{"isHide":false,"name":"OrderBy","value":"Id"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;box&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;bookRange&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n};\n\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;state&nbsp;=&nbsp;me.Top().DownForCode(&quot;manuscriptItemArchiveState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(state))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stateVal&nbsp;=&nbsp;state.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.code&nbsp;==&nbsp;&quot;Delete&quot;&nbsp;&&&nbsp;stateVal&nbsp;&gt;&nbsp;10)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.bookEndEdit&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;value,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;1&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(index&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowdata&nbsp;=&nbsp;GetRowData(index,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;Framework.CopyModel(rowdata)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;rowdata.book;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reg&nbsp;=&nbsp;/(^[1-9]{1}[0-9]*$)|(^[0-9]*\\.[0-9]{2}$)/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!reg.test(value))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.book&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;第&quot;&nbsp;+&nbsp;stringParseInt(model.box)&nbsp;+&nbsp;&quot;-&quot;&nbsp;+&nbsp;model.book&nbsp;+&nbsp;&quot;册&quot;;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(model);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxAndBookCount(me);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;upRowData&nbsp;=&nbsp;GetRowData(index&nbsp;-&nbsp;1,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowData&nbsp;=&nbsp;GetRowData(index,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(rowData.book))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;Framework.CopyModel(rowData);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;rowData.book;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reg&nbsp;=&nbsp;/(^[1-9]{1}[0-9]*$)|(^[0-9]*\\.[0-9]{2}$)/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!reg.test(value))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.book&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;range&nbsp;=&nbsp;upRowData.bookRange.indexOf(&quot;-&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;end&nbsp;=&nbsp;parseInt(stringParseInt(upRowData.bookRange.substring(range)));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//var&nbsp;boxnum&nbsp;=&nbsp;parseInt(stringParseInt(upRowData.box))&nbsp;+&nbsp;parseInt(upRowData.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;boxnum&nbsp;=&nbsp;end&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;booknum&nbsp;=&nbsp;end&nbsp;+&nbsp;parseInt(rowData.book);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.bookRange&nbsp;=&nbsp;&quot;第&quot;&nbsp;+&nbsp;boxnum&nbsp;+&nbsp;&quot;-&quot;&nbsp;+&nbsp;booknum&nbsp;+&nbsp;&quot;册&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(model);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxAndBookCount(me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nfunction&nbsp;GetRowData(index,&nbsp;me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;me.GetData(index);\n};\n\nfunction&nbsp;stringParseInt(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str.replace(/[^0-9]/ig,&nbsp;&quot;&quot;);\n};\n\nfunction&nbsp;boxAndBookCount(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxnum:&nbsp;0,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;booknum:&nbsp;0\n&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;me.GetRows().length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rowData&nbsp;=&nbsp;GetRowData(i,&nbsp;me);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.boxnum&nbsp;=&nbsp;parseInt(model.boxnum)&nbsp;+&nbsp;parseInt(stringParseInt(rowData.box));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.booknum&nbsp;=&nbsp;parseInt(model.booknum)&nbsp;+&nbsp;parseInt(stringParseInt(rowData.book));\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;top&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;top.DownForCode(&quot;BoxNumber&quot;).SetValue(me.GetRows().length);\n&nbsp;&nbsp;&nbsp;&nbsp;top.DownForCode(&quot;BookNumber&quot;).SetValue(model.booknum);\n}\n\nthis.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.Load)&nbsp;this.Load();\n};\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"BoxAndNumberBook"},{"isHide":false,"name":"fitColumns","value":"true"},{"isHide":false,"name":"Checkbox","value":"true"},{"isHide":false,"name":"pagination","value":"false"},{"isHide":false,"name":"rownumbers","value":"false"},{"isHide":false,"name":"Height","value":"auto"}],"sort":0}
2020-05-09 22:00:49