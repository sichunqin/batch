{
	"action":[
		{
			"code":"NewStart",
			"name":"增加",
			"property":[
				{
					"isHide":false,
					"name":"AuthorityRemark",
					"value":"项目组成员-新增-按钮"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"CreateOnClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.CreateOnClick =function(){
    console.log('d')
    var parameter={};
    var form = this.Top().DownForCode('projectTab');
    if (Framework.IsNullOrEmpty(form)) return false;
    var id = form.DownForCode("id");
    if (Framework.IsNullOrEmpty(id) || Framework.IsNullOrEmpty(id.GetValue())) return false;
    var projectId = id.GetValue();
    var url = "UIForm-Web-Schema.json";
    parameter.schemaType = "GridPanelSelecter";
    parameter.schemaCode = "UserSelecterProjectPersonnel";
    Progress.Task(function () {
        Framework.OpenForm(me, url, parameter, function (form) {
            form.cId=projectId;
            if(form.Load) form.Load();
            Progress.HideProgress();
        });
    });
}

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"Savas",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"OnClickSave"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.OnClickSave = function () {
    console.log("保存测试");
    var projectMemberss = this.Top().DownForCode('projectMemberss');
    var projectMemberssList = projectMemberss.GetValue();
    var projectIndependenceMembersList = this.Top().DownForCode('projectIndependenceMembers').GetValue();
    var params = {};
    var aggregate = [];
    var independentData = [];
    var msg = ""
    Framework.ForEach(projectMemberssList, function (item) {
        var objectModification = {};
        objectModification.id = item.id;
        objectModification.userId = item.nameId.id;
        objectModification.projectId = item.projectId.id;
        if (Framework.IsNullOrEmpty(item.isExperience.text)) {
            objectModification.IsExperience = item.isExperience;
        } else {
            objectModification.IsExperience = item.isExperience.id;
        }
        if (Framework.IsNullOrEmpty(item.projectRole.text)) {
            objectModification.projectRole = item.projectRole;
        } else {
            objectModification.projectRole = item.projectRole.id;
        }
        aggregate.push(objectModification);
        if (objectModification.projectRole == 20) {
            if (!(item.nameId_StaffId_StaffPositionId_PositionType != null && item.nameId_StaffId_StaffPositionId_PositionType < 20 || (item.nameId_StaffId_StaffPositionId_PositionType == 20 && item.nameId_StaffId_StaffPositionId_Sort < 11))) {//业务判断
                msg = "asdas";
            }
        }
    });
    if (Framework.IsNotNullOrEmpty(msg)) {
        Framework.Message("只有高审以上的才能设置高级项目经理");
        return false;
    }
    Framework.ForEach(projectIndependenceMembersList, function (item) {
        var projectIndependenceMembers = {};
        projectIndependenceMembers.Id = item.id;
        if (Framework.IsNullOrEmpty(item.processingOpinions.text)) {
            projectIndependenceMembers.processingOpinions = item.processingOpinions;
        } else {
            projectIndependenceMembers.processingOpinions = item.processingOpinions.id;
        }
        projectIndependenceMembers.projectId = item.projectId.id;
        independentData.push(projectIndependenceMembers);
    });
    console.log(aggregate);
    params.projectList = JSON.stringify(aggregate);
    params.independentDataList = JSON.stringify(independentData);
    Framework.AjaxRequest(this, "ProjectMembers-SavaUserMembers.do", 'post', params, true, function (result) {
        if (projectMemberss.Refresh)
            projectMemberss.Refresh();//刷新列表
        Framework.Message("保存成功");
    })
}


 

};"
				}
			],
			"sort":2
		},
		{
			"code":"Delete",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"IsRenderColumn",
					"value":"true"
				},
				{
					"isHide":false,
					"name":"ActionGroup",
					"value":"操作"
				},
				{
					"isHide":false,
					"name":"AuthorityRemark",
					"value":"项目组成员-删除-按钮"
				},
				{
					"isHide":false,
					"name":"LinkImg",
					"value":"/Styles/icons/index/icon_delete.png"
				},
				{
					"isHide":false,
					"name":"OnClick",
					"value":"DeleteMethod"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.DeleteMethod=function(){
    console.log('删除');
    var me=this;
    Framework.Confirm("您确定要删除当前数据吗？", function () {
        var aa=me.Top("[code='projectMember']");
        var s=aa.DownForCode("projectMemberss");
        var projectIndependenceMembers=aa.DownForCode("projectIndependenceMembers");
        var date=s.LinkSelectData;
        var sort=date.sort
        if(sort==0) return false;
        var projectId= me.Top().DownForCode('project').GetValue().id;
        var params={};
        params.memeberId=date.id;
        params.projectId=projectId;
\tparams.nameId=date.nameId.id;
        Framework.AjaxRequest(me, "ProjectMembers-deletePrompt.do", 'get', params, false, function (result){
            if(result!=1){
                Framework.Confirm(result, function () {
                   console.log('删除');
                   Framework.AjaxRequest(me, "ProjectMembers-delProjectMemberAdditional.do", 'get', params, false, function(result){
                        s.Load();
                        projectIndependenceMembers.Load();
                    })
                });
            }else{
                Framework.AjaxRequest(me, "ProjectMembers-delProjectMember.do", 'get', params, false, function (result){
                    s.Load();
                    projectIndependenceMembers.Load();
                })
            }
        })
    })
}

 

};"
				}
			],
			"sort":1
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":7
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_PractisingQualification",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"专业资质",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"300"
						}
					],
					"sort":11
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectRole",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目角色",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ProjectRoleLevels"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ProjectRoleLevels)]"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						},
						{
							"isHide":false,
							"name":"required",
							"value":"true"
						}
					],
					"select":"ProjectRole[Enum(ProjectRoleLevels)]",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":17
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_StaffPositionId_Name",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"职务",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Width",
							"value":"160"
						}
					],
					"sort":10
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"workingYears",
					"control":"Number",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"从业年限",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"90"
						}
					],
					"select":"WorkingYears",
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"姓名",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"90"
						}
					],
					"select":"NameId[Entity(User|Code(Code)#Name(Name))]",
					"sort":9
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isExperience",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"是否有从业经验",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"YesOrNo"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(YesOrNo)]"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"140"
						}
					],
					"select":"IsExperience[Enum(YesOrNo)]",
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(Project|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"Project"
						}
					],
					"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]",
					"sort":8
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isEnable",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"状态",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"YesOrNo"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(YesOrNo)]"
						}
					],
					"select":"IsEnable[Enum(YesOrNo)]",
					"sort":16
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"sort",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"排序",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Sort",
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"staffPositionId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"职级Id",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":30
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"StaffPosition"
						}
					],
					"select":"StaffPositionId",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"signatureOfIndependence",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"独立性签署",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"SignatureOfIndependence"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(SignatureOfIndependence)]"
						},
						{
							"isHide":false,
							"name":"IsRenderLink",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"Width",
							"value":"100"
						}
					],
					"select":"SignatureOfIndependence[Enum(SignatureOfIndependence)]",
					"sort":15
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_StaffPositionId_PositionType",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"职级类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_StaffId_StaffPositionId_Sort",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"排序",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"nameId_Name",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"名称测试",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"roleSort",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"角色等级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"roleSort",
					"sort":1
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"projectMembers",
	"control":"EditorGridPanel",
	"dataPermission":[
		
	],
	"filter":"isEnable==10",
	"isReference":false,
	"javaScript":"this.IsEnableColumnLink = function (field, row) {
    if (field == "signatureOfIndependence" && row[field].id == 20)
        return false;

}

this.AfterRender = function () {
    if (this.Load) this.Load();
}

this.BeforeLoad = function () {
    var me = this;
    me.MainContainer = this.Top().DownForCode('project');
}

this.OnEditCell = function (index, field, row) {
    console.log("relationsWithApplicantsEndEdit");
    if (field == "isExperience") return true;
    if (row.sort == 0) {
        return false;
    }
    if (field == "nameId" || field == "nameId_StaffId_StaffPositionId_Name" || field == "nameId_StaffId_PractisingQualification" || field == "workingYears" || field == "signatureOfIndependence")
        return false;
}

this.SetActionColumnVisible = function (btn, row) {
    console.log("SetActionColumnVisible ");
    var apply = this.Top().DownForCode("apply").GetValue();
    var docState = row.projectId.docState;
    var me = this;
    if (btn.code == "Delete" && (row.sort == 0 || ((docState > 10 && docState < 100) && !apply == 1)))//(row.sort == 0 || (docState != 10 && !apply==1))
        return true;
}


this.RenderColumnTextStyler = function (row, field, value) {
    console.log("RenderRowStyler");
    if (row['sort'] == 0) {
        return 'rgba(135,146,167,0.5)';
    }
}

this.RenderColumnStyler = function (row, field, value) {
    console.log("RenderColumnStyler");
    if (field == 'isExperience') {
        return '#FFFFFF';
    }
}


this.projectRoleEndEdit = function (index, field, value, row) {
    console.log("33333333333")
    if (value == 20) {
        var params = {};
        params.Id = row.id;
        params.staffId = row.nameId.staffId;
        var staffPositionId = row.staffPositionId;
        if (!(staffPositionId.positionType != null && staffPositionId.positionType < 20 || (staffPositionId.positionType == 20 && staffPositionId.sort < 11))) {
            Framework.Message("只能给高审以上才能设置项目经理", "提示");
            row.projectRole = 10;
            this.PushRow(row);
            return;
        }
    }
}
this.OpenLinkForm = function (row) {
    console.log("project");
    var me = this;
    if (row.signatureOfIndependence.id == 20) {
        Framework.Message("没有签署项目独立性声明不能点击链接", "提示");
        return false;
    }
    var parameter = {};
    var url = "UIForm-Web-Schema.json";
    parameter.schemaType = "FormPanel";
    parameter.schemaCode = 'ProjectIndependenceStatementProjectGroupOpen';
    Framework.OpenForm(me, url, parameter, function (form) {
        //form.parameter= row;
        if (form.Load) form.Load(row);
    });
};",
	"name":"项目项目组成员",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"projectMembers"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"项目项目组成员"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":20093
		},
		{
			"isHide":false,
			"name":"OrderBy",
			"value":"Sort asc,RoleSort desc, NameId_Name  asc"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.IsEnableColumnLink = function (field, row) {
    if (field == "signatureOfIndependence" && row[field].id == 20)
        return false;

}

this.AfterRender = function () {
    if (this.Load) this.Load();
}

this.BeforeLoad = function () {
    var me = this;
    me.MainContainer = this.Top().DownForCode('project');
}

this.OnEditCell = function (index, field, row) {
    console.log("relationsWithApplicantsEndEdit");
    if (field == "isExperience") return true;
    if (row.sort == 0) {
        return false;
    }
    if (field == "nameId" || field == "nameId_StaffId_StaffPositionId_Name" || field == "nameId_StaffId_PractisingQualification" || field == "workingYears" || field == "signatureOfIndependence")
        return false;
}

this.SetActionColumnVisible = function (btn, row) {
    console.log("SetActionColumnVisible ");
    var apply = this.Top().DownForCode("apply").GetValue();
    var docState = row.projectId.docState;
    var me = this;
    if (btn.code == "Delete" && (row.sort == 0 || ((docState > 10 && docState < 100) && !apply == 1)))//(row.sort == 0 || (docState != 10 && !apply==1))
        return true;
}


this.RenderColumnTextStyler = function (row, field, value) {
    console.log("RenderRowStyler");
    if (row['sort'] == 0) {
        return 'rgba(135,146,167,0.5)';
    }
}

this.RenderColumnStyler = function (row, field, value) {
    console.log("RenderColumnStyler");
    if (field == 'isExperience') {
        return '#FFFFFF';
    }
}


this.projectRoleEndEdit = function (index, field, value, row) {
    console.log("33333333333")
    if (value == 20) {
        var params = {};
        params.Id = row.id;
        params.staffId = row.nameId.staffId;
        var staffPositionId = row.staffPositionId;
        if (!(staffPositionId.positionType != null && staffPositionId.positionType < 20 || (staffPositionId.positionType == 20 && staffPositionId.sort < 11))) {
            Framework.Message("只能给高审以上才能设置项目经理", "提示");
            row.projectRole = 10;
            this.PushRow(row);
            return;
        }
    }
}
this.OpenLinkForm = function (row) {
    console.log("project");
    var me = this;
    if (row.signatureOfIndependence.id == 20) {
        Framework.Message("没有签署项目独立性声明不能点击链接", "提示");
        return false;
    }
    var parameter = {};
    var url = "UIForm-Web-Schema.json";
    parameter.schemaType = "FormPanel";
    parameter.schemaCode = 'ProjectIndependenceStatementProjectGroupOpen';
    Framework.OpenForm(me, url, parameter, function (form) {
        //form.parameter= row;
        if (form.Load) form.Load(row);
    });
};

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"ProjectMembers"
		},
		{
			"isHide":false,
			"name":"Params",
			"value":"[{param:'projectId',fieldId:'id'}]"
		},
		{
			"isHide":false,
			"name":"pagination",
			"value":"false"
		},
		{
			"isHide":false,
			"name":"PageSize",
			"value":"10000"
		}
	],
	"sort":0
}
{"action":[{"code":"NewStart","name":"增加","property":[{"isHide":false,"name":"AuthorityRemark","value":"项目组成员-新增-按钮"},{"isHide":false,"name":"OnClick","value":"CreateOnClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.CreateOnClick&nbsp;=function(){\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('d')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter={};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;this.Top().DownForCode('projectTab');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(form))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;id&nbsp;=&nbsp;form.DownForCode(&quot;id&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(id)&nbsp;||&nbsp;Framework.IsNullOrEmpty(id.GetValue()))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;id.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;GridPanelSelecter&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;&quot;UserSelecterProjectPersonnel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;Progress.Task(function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.cId=projectId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(form.Load)&nbsp;form.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Progress.HideProgress();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":0},{"code":"Savas","name":"保存","property":[{"isHide":false,"name":"OnClick","value":"OnClickSave"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnClickSave&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;保存测试&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectMemberss&nbsp;=&nbsp;this.Top().DownForCode('projectMemberss');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectMemberssList&nbsp;=&nbsp;projectMemberss.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectIndependenceMembersList&nbsp;=&nbsp;this.Top().DownForCode('projectIndependenceMembers').GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;aggregate&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;independentData&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;msg&nbsp;=&nbsp;&quot;&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(projectMemberssList,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;objectModification&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.id&nbsp;=&nbsp;item.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.userId&nbsp;=&nbsp;item.nameId.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.projectId&nbsp;=&nbsp;item.projectId.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(item.isExperience.text))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.IsExperience&nbsp;=&nbsp;item.isExperience;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.IsExperience&nbsp;=&nbsp;item.isExperience.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(item.projectRole.text))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.projectRole&nbsp;=&nbsp;item.projectRole;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectModification.projectRole&nbsp;=&nbsp;item.projectRole.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aggregate.push(objectModification);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(objectModification.projectRole&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(item.nameId_StaffId_StaffPositionId_PositionType&nbsp;!=&nbsp;null&nbsp;&&&nbsp;item.nameId_StaffId_StaffPositionId_PositionType&nbsp;&lt;&nbsp;20&nbsp;||&nbsp;(item.nameId_StaffId_StaffPositionId_PositionType&nbsp;==&nbsp;20&nbsp;&&&nbsp;item.nameId_StaffId_StaffPositionId_Sort&nbsp;&lt;&nbsp;11)))&nbsp;{//业务判断\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;asdas&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(msg))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;只有高审以上的才能设置高级项目经理&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(projectIndependenceMembersList,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectIndependenceMembers&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.Id&nbsp;=&nbsp;item.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(item.processingOpinions.text))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.processingOpinions&nbsp;=&nbsp;item.processingOpinions;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.processingOpinions&nbsp;=&nbsp;item.processingOpinions.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.projectId&nbsp;=&nbsp;item.projectId.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;independentData.push(projectIndependenceMembers);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(aggregate);\n&nbsp;&nbsp;&nbsp;&nbsp;params.projectList&nbsp;=&nbsp;JSON.stringify(aggregate);\n&nbsp;&nbsp;&nbsp;&nbsp;params.independentDataList&nbsp;=&nbsp;JSON.stringify(independentData);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(this,&nbsp;&quot;ProjectMembers-SavaUserMembers.do&quot;,&nbsp;'post',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(projectMemberss.Refresh)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectMemberss.Refresh();//刷新列表\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;保存成功&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;})\n}\n\r\n \r\n};"}],"sort":2},{"code":"Delete","name":"删除","property":[{"isHide":false,"name":"IsRenderColumn","value":"true"},{"isHide":false,"name":"ActionGroup","value":"操作"},{"isHide":false,"name":"AuthorityRemark","value":"项目组成员-删除-按钮"},{"isHide":false,"name":"LinkImg","value":"/Styles/icons/index/icon_delete.png"},{"isHide":false,"name":"OnClick","value":"DeleteMethod"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.DeleteMethod=function(){\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('删除');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me=this;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;您确定要删除当前数据吗？&quot;, function () {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;aa=me.Top(&quot;[code='projectMember']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;s=aa.DownForCode(&quot;projectMemberss&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectIndependenceMembers=aa.DownForCode(&quot;projectIndependenceMembers&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date=s.LinkSelectData;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sort=date.sort\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sort==0)&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId=&nbsp;me.Top().DownForCode('project').GetValue().id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params={};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.memeberId=date.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.projectId=projectId;\n\tparams.nameId=date.nameId.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ProjectMembers-deletePrompt.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(result!=1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(result,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log('删除');\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ProjectMembers-delProjectMemberAdditional.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function(result){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;ProjectMembers-delProjectMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;false,&nbsp;function&nbsp;(result){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectIndependenceMembers.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;})\n}\r\n \r\n};"}],"sort":1}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":7},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_PractisingQualification","control":"Text","dataPermission":[],"isReference":false,"name":"专业资质","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"300"}],"sort":11},{"action":[],"authority":[],"children":[],"code":"projectRole","control":"Combobox","dataPermission":[],"isReference":false,"name":"项目角色","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ProjectRoleLevels"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ProjectRoleLevels)]"},{"isHide":false,"name":"Width","value":"160"},{"isHide":false,"name":"required","value":"true"}],"select":"ProjectRole[Enum(ProjectRoleLevels)]","sort":14},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":17},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_StaffPositionId_Name","control":"Text","dataPermission":[],"isReference":false,"name":"职务","otherChildren":[],"property":[{"isHide":false,"name":"Width","value":"160"}],"sort":10},{"action":[],"authority":[],"children":[],"code":"workingYears","control":"Number","dataPermission":[],"isReference":false,"name":"从业年限","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Width","value":"90"}],"select":"WorkingYears","sort":12},{"action":[],"authority":[],"children":[],"code":"nameId","control":"GridCombobox","dataPermission":[],"isReference":false,"name":"姓名","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"Width","value":"90"}],"select":"NameId[Entity(User|Code(Code)#Name(Name))]","sort":9},{"action":[],"authority":[],"children":[],"code":"isExperience","control":"Combobox","dataPermission":[],"isReference":false,"name":"是否有从业经验","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"YesOrNo"},{"isHide":false,"name":"EntityConfig","value":"[Enum(YesOrNo)]"},{"isHide":false,"name":"Width","value":"140"}],"select":"IsExperience[Enum(YesOrNo)]","sort":13},{"action":[],"authority":[],"children":[],"code":"projectId","control":"Hidden","dataPermission":[],"isReference":false,"name":"项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Project|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Project"}],"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]","sort":8},{"action":[],"authority":[],"children":[],"code":"isEnable","control":"Hidden","dataPermission":[],"isReference":false,"name":"状态","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"YesOrNo"},{"isHide":false,"name":"EntityConfig","value":"[Enum(YesOrNo)]"}],"select":"IsEnable[Enum(YesOrNo)]","sort":16},{"action":[],"authority":[],"children":[],"code":"sort","control":"Hidden","dataPermission":[],"isReference":false,"name":"排序","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Sort","sort":6},{"action":[],"authority":[],"children":[],"code":"staffPositionId","control":"Hidden","dataPermission":[],"isReference":false,"name":"职级Id","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":30},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityCode","value":"StaffPosition"}],"select":"StaffPositionId","sort":3},{"action":[],"authority":[],"children":[],"code":"signatureOfIndependence","control":"Combobox","dataPermission":[],"isReference":false,"name":"独立性签署","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"SignatureOfIndependence"},{"isHide":false,"name":"EntityConfig","value":"[Enum(SignatureOfIndependence)]"},{"isHide":false,"name":"IsRenderLink","value":"true"},{"isHide":false,"name":"Width","value":"100"}],"select":"SignatureOfIndependence[Enum(SignatureOfIndependence)]","sort":15},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_StaffPositionId_PositionType","control":"Hidden","dataPermission":[],"isReference":false,"name":"职级类型","otherChildren":[],"property":[],"sort":5},{"action":[],"authority":[],"children":[],"code":"nameId_StaffId_StaffPositionId_Sort","control":"Hidden","dataPermission":[],"isReference":false,"name":"排序","otherChildren":[],"property":[],"sort":4},{"action":[],"authority":[],"children":[],"code":"nameId_Name","control":"Hidden","dataPermission":[],"isReference":false,"name":"名称测试","otherChildren":[],"property":[],"sort":2},{"action":[],"authority":[],"children":[],"code":"roleSort","control":"Hidden","dataPermission":[],"isReference":false,"name":"角色等级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"roleSort","sort":1}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"projectMembers","control":"EditorGridPanel","dataPermission":[],"filter":"isEnable==10","isReference":false,"javaScript":"this.IsEnableColumnLink&nbsp;=&nbsp;function&nbsp;(field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;signatureOfIndependence&quot;&nbsp;&&&nbsp;row[field].id&nbsp;==&nbsp;20)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n\n}\n\nthis.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.Load)&nbsp;this.Load();\n}\n\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;me.MainContainer&nbsp;=&nbsp;this.Top().DownForCode('project');\n}\n\nthis.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;relationsWithApplicantsEndEdit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;isExperience&quot;)&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;nameId&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;nameId_StaffId_StaffPositionId_Name&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;nameId_StaffId_PractisingQualification&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;workingYears&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;signatureOfIndependence&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;SetActionColumnVisible&nbsp;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;this.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;row.projectId.docState;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.code&nbsp;==&nbsp;&quot;Delete&quot;&nbsp;&&&nbsp;(row.sort&nbsp;==&nbsp;0&nbsp;||&nbsp;((docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;100)&nbsp;&&&nbsp;!apply&nbsp;==&nbsp;1)))//(row.sort&nbsp;==&nbsp;0&nbsp;||&nbsp;(docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;!apply==1))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\n\nthis.RenderColumnTextStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row['sort']&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.RenderColumnStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;RenderColumnStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;'isExperience')&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'#FFFFFF';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nthis.projectRoleEndEdit&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;value,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;33333333333&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.Id&nbsp;=&nbsp;row.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.staffId&nbsp;=&nbsp;row.nameId.staffId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;staffPositionId&nbsp;=&nbsp;row.staffPositionId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(staffPositionId.positionType&nbsp;!=&nbsp;null&nbsp;&&&nbsp;staffPositionId.positionType&nbsp;&lt;&nbsp;20&nbsp;||&nbsp;(staffPositionId.positionType&nbsp;==&nbsp;20&nbsp;&&&nbsp;staffPositionId.sort&nbsp;&lt;&nbsp;11)))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;只能给高审以上才能设置项目经理&quot;,&nbsp;&quot;提示&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.projectRole&nbsp;=&nbsp;10;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(row);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\nthis.OpenLinkForm&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;project&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.signatureOfIndependence.id&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;没有签署项目独立性声明不能点击链接&quot;,&nbsp;&quot;提示&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;'ProjectIndependenceStatementProjectGroupOpen';\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//form.parameter=&nbsp;row;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(row);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};","name":"项目项目组成员","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"projectMembers"},{"isHide":false,"name":"Name","value":"项目项目组成员"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":20093},{"isHide":false,"name":"OrderBy","value":"Sort asc,RoleSort desc, NameId_Name  asc"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.IsEnableColumnLink&nbsp;=&nbsp;function&nbsp;(field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;signatureOfIndependence&quot;&nbsp;&&&nbsp;row[field].id&nbsp;==&nbsp;20)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n\n}\n\nthis.AfterRender&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.Load)&nbsp;this.Load();\n}\n\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;me.MainContainer&nbsp;=&nbsp;this.Top().DownForCode('project');\n}\n\nthis.OnEditCell&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;relationsWithApplicantsEndEdit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;isExperience&quot;)&nbsp;return&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.sort&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;&quot;nameId&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;nameId_StaffId_StaffPositionId_Name&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;nameId_StaffId_PractisingQualification&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;workingYears&quot;&nbsp;||&nbsp;field&nbsp;==&nbsp;&quot;signatureOfIndependence&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n}\n\nthis.SetActionColumnVisible&nbsp;=&nbsp;function&nbsp;(btn,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;SetActionColumnVisible&nbsp;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;this.Top().DownForCode(&quot;apply&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;row.projectId.docState;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(btn.code&nbsp;==&nbsp;&quot;Delete&quot;&nbsp;&&&nbsp;(row.sort&nbsp;==&nbsp;0&nbsp;||&nbsp;((docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;&lt;&nbsp;100)&nbsp;&&&nbsp;!apply&nbsp;==&nbsp;1)))//(row.sort&nbsp;==&nbsp;0&nbsp;||&nbsp;(docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;!apply==1))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\n}\n\n\nthis.RenderColumnTextStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;RenderRowStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row['sort']&nbsp;==&nbsp;0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'rgba(135,146,167,0.5)';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nthis.RenderColumnStyler&nbsp;=&nbsp;function&nbsp;(row,&nbsp;field,&nbsp;value)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;RenderColumnStyler&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(field&nbsp;==&nbsp;'isExperience')&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'#FFFFFF';\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n\nthis.projectRoleEndEdit&nbsp;=&nbsp;function&nbsp;(index,&nbsp;field,&nbsp;value,&nbsp;row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;33333333333&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.Id&nbsp;=&nbsp;row.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.staffId&nbsp;=&nbsp;row.nameId.staffId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;staffPositionId&nbsp;=&nbsp;row.staffPositionId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(staffPositionId.positionType&nbsp;!=&nbsp;null&nbsp;&&&nbsp;staffPositionId.positionType&nbsp;&lt;&nbsp;20&nbsp;||&nbsp;(staffPositionId.positionType&nbsp;==&nbsp;20&nbsp;&&&nbsp;staffPositionId.sort&nbsp;&lt;&nbsp;11)))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;只能给高审以上才能设置项目经理&quot;,&nbsp;&quot;提示&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.projectRole&nbsp;=&nbsp;10;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PushRow(row);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\nthis.OpenLinkForm&nbsp;=&nbsp;function&nbsp;(row)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;project&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(row.signatureOfIndependence.id&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;没有签署项目独立性声明不能点击链接&quot;,&nbsp;&quot;提示&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parameter&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;url&nbsp;=&nbsp;&quot;UIForm-Web-Schema.json&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaType&nbsp;=&nbsp;&quot;FormPanel&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;parameter.schemaCode&nbsp;=&nbsp;'ProjectIndependenceStatementProjectGroupOpen';\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.OpenForm(me,&nbsp;url,&nbsp;parameter,&nbsp;function&nbsp;(form)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//form.parameter=&nbsp;row;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(form.Load)&nbsp;form.Load(row);\n&nbsp;&nbsp;&nbsp;&nbsp;});\n};\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"ProjectMembers"},{"isHide":false,"name":"Params","value":"[{param:'projectId',fieldId:'id'}]"},{"isHide":false,"name":"pagination","value":"false"},{"isHide":false,"name":"PageSize","value":"10000"}],"sort":0}
2020-04-22 16:57:45