{
	"action":[
		{
			"code":"ApplyModify",
			"name":"申请修改",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"ApplyModify"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 


this.ApplyModify= function () {
    var me = this;
    Framework.Confirm("是否确认修改？", function () {
    var projectId = me.Top().DownForCode("Id").GetValue();
    var workFlow = me.Top().DownForCode("WorkFlowSubmit");
    var save = me.Top().DownForCode("Save");
    var stop = me.Top().DownForCode("StopIt");
    var obsolete = me.Top().DownForCode("Obsolete");
    var apply = me.Top().DownForCode("apply").SetValue(1);
    me.setAttribute("isclick",true);
    var form = me.Top().DownForCode('projectTab').Down("[controltype='FormPanel']").First
    var params = {}
    params.projectId = projectId;
    Framework.AjaxRequest(me, "Project-checkReviewIsComplete-Query.do", 'get', params, true, function (result) {
            workFlow.SetVisible(true);
            save.SetVisible(false);
            me.SetVisible(true);
            stop.SetVisible(true);
            obsolete.SetVisible(true);
        },
        function (result) {
            Framework.Message(result);
        });
    control(form);
   })
}

function control(me) {
    var control = Framework.GetValueControl(me);
    for (i = 0; i < control.length; i++) {
        if (control[i].SetReadOnly) {
            if (control[i].getAttribute("code") == "customerNameId" ||control[i].getAttribute("code") == "projectStatus") {
                control[i].SetReadOnly(true)
            } else {
                control[i].SetReadOnly(false)
            }
        }
    }
}

 

};"
				}
			],
			"sort":0
		},
		{
			"code":"Delete",
			"name":"删除",
			"property":[
				
			],
			"sort":1
		},
		{
			"code":"Save",
			"name":"保存",
			"property":[
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function () {
    var me = this;
    var model = me.Top();
    if (Framework.IsNullOrEmpty(model)) return;
    var projectForm = model.DownForCode("NulReportProjectPage");
    if (Framework.IsNullOrEmpty(projectForm)) return;
    var apply = model.DownForCode("apply");//获取修改申请的标记
    if (apply && apply.GetValue() == "1" && Framework.IsNotNullOrEmpty(projectForm.OldData)) {
        //是申请修改并且存老值
        var riskLevel = model.DownForCode("RiskLevel").GetSubmitValue();
        var msg = "";
        var isChangeRis = false;
        if (riskLevel != projectForm.OldData.riskLevel) {
            msg = "项目的风险等级发生变更，保存后项目需要重新提交审批流程";
            isChangeRis = true;
        }
        var auditStart = model.DownForCode("AuditStart").GetValue();
        var auditEnd = model.DownForCode("AuditEnd").GetValue();
        var isChangeaudit = false;
        if (auditStart != projectForm.OldData.auditStart || auditEnd != projectForm.OldData.auditEnd) {
            msg = "项目的审计期间发生变更，保存后项目需要重新提交审批流程";
            isChangeaudit = true;
        }

        if (isChangeRis && isChangeaudit) {
            msg = "项目的风险等级和审计期间发生变更，保存后项目需要重新提交审批流程";
        }
        var typeMsg = "";
        var customerType = model.DownForCode("CustomerType").GetValue();
        if (customerType.id != projectForm.OldData.customerType) {
            typeMsg = "客户类型由【" + projectForm.OldData.customerTypeValue + "】变更为【" + customerType.text + "】"
        }

        var businessType = model.DownForCode("BusinessType").GetValue();

        if (businessType.id != projectForm.OldData.businessType) {
            if (typeMsg) typeMsg += ","
            typeMsg += "业务类型由【" + projectForm.OldData.businessTypeValue + "】变更为【" + businessType.text + "】"
        }

        var totalAssets = model.DownForCode("TotalAssets");
        var enumData = totalAssets.GetData();
        var find = enumData.Find("id", projectForm.OldData.totalAssets);

        if (find && totalAssets.GetSubmitValue() != find.id) {
            if (typeMsg) typeMsg += ","
            typeMsg += "资产总额由【" + find.text + "】变更为【" + totalAssets.GetValueText() + "】"
        }
        var isConfirm = false;
        if (Framework.IsNotNullOrEmpty(msg)) {
            isConfirm = true;
            Framework.Confirm(msg, function () {
                if (Framework.IsNotNullOrEmpty(typeMsg)) {
                    Framework.Confirm("项目的" + typeMsg, function () {
                        model.DownForCode('docState').SetValue(10);
                        projectForm.Save();
                    });
                } else {
                    model.DownForCode('docState').SetValue(10);
                    projectForm.Save();
                }
            })
        } else {
            if (Framework.IsNotNullOrEmpty(typeMsg)) {
                isConfirm = true;
                Framework.Confirm("项目的" + typeMsg, function () {
                    projectForm.Save();
                });
            }
        }
        return !isConfirm;
    }
}

 

};"
				}
			],
			"sort":2
		},
		{
			"code":"StopIt",
			"name":"终止",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"TerminationClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function () {
    var me = this;
    var model = me.Top();
    var docState = model.DownForCode("DocState");
    if (docState && docState.GetSubmitValue() != 60) {
        //只有终止的时候才会提示，状态等于60时，该按钮为取消终止
        Framework.Confirm("确认终止吗？", function () {
            me.OnClickFunction();
        })
        return false;
    }
};

this.TerminationClick = function () {
    console.log("终止");
    var me = this;
    var model = me.Top();
    var projectId = model.DownForCode("Id").GetValue();
    var obsolete = model.DownForCode("Obsolete")
    var workFlowSubmit = model.DownForCode("WorkFlowSubmit");
    var applyModify = model.DownForCode('ApplyModify');
    var params = {}
    params.projectId = projectId;
    params.ClickValue = 1
    params.value = 20;
    model.IsRefreshOpener = true;//刷新列表
    Framework.AjaxRequest(me, "Project-terminationOrObsoleteFunc.do", 'get', params, true, function (result) {
            if (result == 1) {
                Framework.Message("该项目的底稿正在复核中")
            } else if (result == 2) {
                Framework.Message("该项目的的报告正在处理中")
            } else if (result == 3) {
                Framework.Message("该项目的业务约定书正在处理中")
            } else if (result == 4) {
                Framework.Message("该项目的报告用印正在处理中")
            } else if (result == 6) {
                Framework.Message("该项目的报备用印正在处理中")
            } else {
                if (result == 30) {
                    workFlowSubmit.SetVisible(true)
                    me.SetTextValue("终止")
                    obsolete.SetVisible(false);
                    applyModify.SetVisible(false);
                    obsolete.SetTextValue("作废");
                } else if (result == 60) {
                    workFlowSubmit.SetVisible(true)
                    me.SetTextValue("取消终止")
                    obsolete.SetVisible(true);
                    applyModify.SetVisible(true);
                    workFlowSubmit.SetVisible(true);
                }
            }
            var projectForm = model.DownForCode("projectPage");
            if (projectForm) {
                //終止后刷新表單
                projectForm.Load();
            }
        },
        function (result) {
            Framework.Message("失败");
        });
}

 

};"
				}
			],
			"sort":3
		},
		{
			"code":"Obsolete",
			"name":"作废",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"ObsoleteClick"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.BeforeHandler = function () {
    var me = this;
    var model = me.Top();
    var docState = model.DownForCode("DocState");
    if (docState && docState.GetSubmitValue() != 50) {
        //只有作废的时候才会提示，状态等于50时，该按钮为取消作废
        Framework.Confirm("确认作废吗？", function () {
            me.OnClickFunction();
        })
        return false;
    }
};

this.ObsoleteClick = function () {
    console.log("liu");
    var me = this;
    var model = me.Top();
    var projectId = model.DownForCode("Id").GetValue();
    var stopIt = model.DownForCode("StopIt")
    var workFlowSubmit = model.DownForCode("WorkFlowSubmit");
    var applyModify = model.DownForCode('ApplyModify');
    var params = {}
    params.projectId = projectId;
    params.ClickValue = 0;
    params.value = 20;
    model.IsRefreshOpener = true;//刷新列表
    Framework.AjaxRequest(me, "Project-terminationOrObsoleteFunc.do", 'get', params, true, function (result) {
            if (result == 1) {
                Framework.Message("底稿复核中，项目不允许作废")
            } else if (result == 5) {
                Framework.Message("底稿复核完成，项目不允许作废")
            } else {
                if (result == 30) {
                    stopIt.SetVisible(false);
                    applyModify.SetVisible(false);
                    workFlowSubmit.SetVisible(true);
                    stopIt.SetTextValue("终止");
                    me.SetTextValue("作废");
                } else if (result == 50) {
                    workFlowSubmit.SetVisible(true);
                    stopIt.SetVisible(true);
                    applyModify.SetVisible(true);
                    me.SetTextValue("取消作废");
                    workFlowSubmit.SetVisible(true);
                }
            }
            var projectForm = model.DownForCode("projectPage");
            if (projectForm) {
                //終止后刷新表單
                projectForm.Load();
            }
        },
        function (result) {
            Framework.Message("失败");
        });
}

 

};"
				}
			],
			"sort":4
		},
		{
			"code":"ShowDetail",
			"name":"查看",
			"property":[
				
			],
			"sort":5
		},
		{
			"code":"Export",
			"container":"GridPanel",
			"name":"导出",
			"property":[
				
			],
			"sort":6
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerType",
					"control":"TreeCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue,isLoad) {
    console.log('OnChange 1111')
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var riskLevel = model.DownForCode("RiskLevel");

    // var selectValue = this.GetSelected().text;
    var selectValue = this.GetValueText();
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue("");
    CustomerTypeValue.SetValue(selectValue);
    //riskLevel.SetValue("");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetSubmitValue() + "/" + TotalAssets.GetSubmitValue() + "" + newValue + "", 'get', params, true, function (result) {
            if (!isLoad) {
                TotalAssets.Clear();
                riskLevel.SetValue("")
            }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        //return;
    }
    var params = {}
    //财报和非财报标识
    var FinancialReportProject = 20;
    Framework.AjaxRequest(me, "/risk-level/business-type/" + newValue + "/" + FinancialReportProject + "", 'get', params, true, function (result) {
            businessType.LoadData(result);
            if (newValue != oldValue && Framework.IsNotNullOrEmpty(oldValue))
                businessType.Clear();
        },
        function (result) {
            Framework.Message(result.responseText);
        });
}
",
					"name":"客户类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"queryUrl",
							"value":"/risk-level/client-type/1"
						},
						{
							"isHide":false,
							"name":"textfield",
							"value":"treeName"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue,isLoad) {
    console.log('OnChange 1111')
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var riskLevel = model.DownForCode("RiskLevel");

    // var selectValue = this.GetSelected().text;
    var selectValue = this.GetValueText();
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue("");
    CustomerTypeValue.SetValue(selectValue);
    //riskLevel.SetValue("");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetSubmitValue() + "/" + TotalAssets.GetSubmitValue() + "" + newValue + "", 'get', params, true, function (result) {
            if (!isLoad) {
                TotalAssets.Clear();
                riskLevel.SetValue("")
            }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        //return;
    }
    var params = {}
    //财报和非财报标识
    var FinancialReportProject = 20;
    Framework.AjaxRequest(me, "/risk-level/business-type/" + newValue + "/" + FinancialReportProject + "", 'get', params, true, function (result) {
            businessType.LoadData(result);
            if (newValue != oldValue && Framework.IsNotNullOrEmpty(oldValue))
                businessType.Clear();
        },
        function (result) {
            Framework.Message(result.responseText);
        });
}


 

};"
						}
					],
					"select":"CustomerType",
					"sort":15
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":6
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectPartnerId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目合伙人",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"PartnerSelecter"
						}
					],
					"select":"ProjectPartnerId[Entity(User|Code(Code)#Name(Name))]",
					"sort":20
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectManagerId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目经理",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"ProjectManagerSelecter"
						}
					],
					"select":"projectManagerId[Entity(User|Code(Code)#Name(Name))]",
					"sort":21
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"docState",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目状态",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ProjectState"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ProjectState)]"
						}
					],
					"select":"DocState[Enum(ProjectState)]",
					"sort":22
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerNameId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":50
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(Customer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"Customer"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"CustomerPopup"
						}
					],
					"select":"CustomerNameId[Entity(Customer|Code(Code)#Name(Name))]",
					"sort":7
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessType",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
console.log("业务")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var headquartersReview = model.DownForCode("HeadquartersReview")
    var selectValue = this.GetValueText();
    var BusinessTypeValue = model.DownForCode("BusinessTypeValue");
    BusinessTypeValue.SetValue("");
    BusinessTypeValue.SetValue(selectValue);
    if (Framework.IsNullOrEmpty(newValue)) return false;
    
    if (me.IsFromLoad) return;//首次加载时返回
    //当前登入人是总所时时 总部复核隐藏
    var unitAttributes = AppContext.Profile.unitAttributes;
    var orgUnitAttributes = AppContext.Profile.orgUnitAttributes;
    var panel = me.Top("[controltype='Panel']");
    if (panel && !panel.IsAdd) {
        var orgUnitAttributesControl = me.DownForCode("DeptId_OrgId_UnitAttributes");
        if (orgUnitAttributesControl && orgUnitAttributesControl.GetValue) orgUnitAttributes = orgUnitAttributesControl.GetValue();

        var unitAttributesControl = me.DownForCode("DeptId_UnitAttributes");
        if (unitAttributesControl && unitAttributesControl.GetValue) unitAttributes = unitAttributesControl.GetValue();

    }
    
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + newValue + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
                if (unitAttributes != 10 && orgUnitAttributes != 10) {
                    if (result == 10 || result == 20) {
                        headquartersReview.SetValue(10);
                        headquartersReview.SetReadOnly(true);
                    } else {
                        headquartersReview.Clear();
                        headquartersReview.SetReadOnly(false);
                    }
                }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
console.log("业务")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var headquartersReview = model.DownForCode("HeadquartersReview")
    var selectValue = this.GetValueText();
    var BusinessTypeValue = model.DownForCode("BusinessTypeValue");
    BusinessTypeValue.SetValue("");
    BusinessTypeValue.SetValue(selectValue);
    if (Framework.IsNullOrEmpty(newValue)) return false;
    
    if (me.IsFromLoad) return;//首次加载时返回
    //当前登入人是总所时时 总部复核隐藏
    var unitAttributes = AppContext.Profile.unitAttributes;
    var orgUnitAttributes = AppContext.Profile.orgUnitAttributes;
    var panel = me.Top("[controltype='Panel']");
    if (panel && !panel.IsAdd) {
        var orgUnitAttributesControl = me.DownForCode("DeptId_OrgId_UnitAttributes");
        if (orgUnitAttributesControl && orgUnitAttributesControl.GetValue) orgUnitAttributes = orgUnitAttributesControl.GetValue();

        var unitAttributesControl = me.DownForCode("DeptId_UnitAttributes");
        if (unitAttributesControl && unitAttributesControl.GetValue) unitAttributes = unitAttributesControl.GetValue();

    }
    
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + newValue + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
                if (unitAttributes != 10 && orgUnitAttributes != 10) {
                    if (result == 10 || result == 20) {
                        headquartersReview.SetValue(10);
                        headquartersReview.SetReadOnly(true);
                    } else {
                        headquartersReview.Clear();
                        headquartersReview.SetReadOnly(false);
                    }
                }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}

 

};"
						}
					],
					"select":"BusinessType",
					"sort":16
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"riskLevel",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"风险等级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"RiskLevel"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(RiskLevel)]"
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						}
					],
					"select":"RiskLevel[Enum(RiskLevel)]",
					"sort":18
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"code",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目编号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						}
					],
					"select":"Code",
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"showName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":300
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						}
					],
					"select":"ShowName",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"competencyConclusion",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目组资源和专业胜任能力的调查记录",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2000
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"CompetencyConclusion",
					"sort":23
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessConclusion",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务情况调查记录表调查结论",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2000
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessConclusion",
					"sort":24
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":25
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"financialReportProject",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"财报项目",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"Description",
							"value":"10财报项目 20非财报项目"
						},
						{
							"isHide":false,
							"name":"DefaultValue",
							"value":"20"
						}
					],
					"select":"FinancialReportProject",
					"sort":5
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"totalAssets",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    var me = this;
    var model = me.Up()
   console.log("资产")
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var HeadquartersReview = model.DownForCode("HeadquartersReview")
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (me.IsFromLoad) return;//首次加载时返回
    //当前登入人是总所时时 总部复核隐藏
    var unitAttributes = AppContext.Profile.unitAttributes;
    var orgUnitAttributes = AppContext.Profile.orgUnitAttributes;
    var panel = me.Top("[controltype='Panel']");
    if (panel && !panel.IsAdd) {
        var orgUnitAttributesControl = me.DownForCode("DeptId_OrgId_UnitAttributes");
        if (orgUnitAttributesControl && orgUnitAttributesControl.GetValue) orgUnitAttributes = orgUnitAttributesControl.GetValue();

        var unitAttributesControl = me.DownForCode("DeptId_UnitAttributes");
        if (unitAttributesControl && unitAttributesControl.GetValue) unitAttributes = unitAttributesControl.GetValue();

    }
    
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetSubmitValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
                if (unitAttributes != 10 && orgUnitAttributes != 10) {
                    if (result == 10 || result == 20) {
                        HeadquartersReview.SetValue(10);
                        HeadquartersReview.SetReadOnly(true);
                    } else {
                        HeadquartersReview.Clear();
                        HeadquartersReview.SetReadOnly(false);
                    }
                }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}",
					"name":"资产总额",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"TotalAssets"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(TotalAssets)]"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    var me = this;
    var model = me.Up()
   console.log("资产")
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var HeadquartersReview = model.DownForCode("HeadquartersReview")
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (me.IsFromLoad) return;//首次加载时返回
    //当前登入人是总所时时 总部复核隐藏
    var unitAttributes = AppContext.Profile.unitAttributes;
    var orgUnitAttributes = AppContext.Profile.orgUnitAttributes;
    var panel = me.Top("[controltype='Panel']");
    if (panel && !panel.IsAdd) {
        var orgUnitAttributesControl = me.DownForCode("DeptId_OrgId_UnitAttributes");
        if (orgUnitAttributesControl && orgUnitAttributesControl.GetValue) orgUnitAttributes = orgUnitAttributesControl.GetValue();

        var unitAttributesControl = me.DownForCode("DeptId_UnitAttributes");
        if (unitAttributesControl && unitAttributesControl.GetValue) unitAttributes = unitAttributesControl.GetValue();

    }
    
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetSubmitValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
                if (unitAttributes != 10 && orgUnitAttributes != 10) {
                    if (result == 10 || result == 20) {
                        HeadquartersReview.SetValue(10);
                        HeadquartersReview.SetReadOnly(true);
                    } else {
                        HeadquartersReview.Clear();
                        HeadquartersReview.SetReadOnly(false);
                    }
                }
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}

 

};"
						}
					],
					"select":"TotalAssets[Enum(TotalAssets)]",
					"sort":17
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"headquartersReview",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"总部复核",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"YesOrNo"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(YesOrNo)]"
						}
					],
					"select":"HeadquartersReview[Enum(YesOrNo)]",
					"sort":19
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerTypeValue",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户类型text",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"CustomerTypeValue",
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeValue",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型text",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessTypeValue",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditStart",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"审计期间(开始)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"Required",
									"value":"true"
								}
							],
							"select":"AuditStart",
							"sort":10
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditEnd",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"审计期间(结束)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"Required",
									"value":"true"
								}
							],
							"select":"AuditEnd",
							"sort":12
						}
					],
					"code":"datefw",
					"control":"DateTimeGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"会计期间",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":8
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"deptId_OrgId_UnitAttributes",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目所属分所部门类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"deptId_UnitAttributes",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"name":"项目所属部门部门类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":1
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"DetailColumns",
					"value":"3"
				},
				{
					"isHide":false,
					"name":"style:padding",
					"value":"20px"
				}
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"dataPermission":[
						
					],
					"isReference":false,
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":true,
							"name":"referenceFormId",
							"value":342930
						}
					],
					"sort":0
				}
			],
			"code":"approvalTrajectoryFieldSet",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"审批轨迹",
			"otherChildren":[
				
			],
			"property":[
				{
					"isHide":false,
					"name":"IsWorkFlowHide",
					"value":"false"
				}
			],
			"sort":11
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"nulReportProjectPage",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.AfterLoad = function () {
    console.log("AfterLoadNulReportProjectPage");
    var me = this;
    var showName = me.DownForCode('Name');
    if (showName) {
        me.SetBusinessTitle(showName.GetValue());
    }
    var projectId = me.DownForCode("Id").GetValue();

    var model = me.Top();
    var apply = 0;//panel上修改申请标记
    if (model && model.SetDownVisible) {
        model.SetDownVisible("BusinessAgreement", Framework.IsNullOrEmpty(projectId));
        var applyControl = model.DownForCode("apply");
        if (me.IsFromSave) {
            //页面保存成功后
            applyControl.SetValue(0);
        }
        apply = applyControl ? applyControl.GetValue() : 0;//获取panel上修改申请标记
    }


    var docState = me.DownForCode("DocState").GetSubmitValue();//运营状态值
    var workFlowSubmit = me.DownForCode("WorkFlowSubmit");
    // //当前登入人是总所时时 总部复核隐藏
    // var headquartersReview=me.DownForCode('HeadquartersReview');
    // var DepartmentalAttributes=AppContext.Profile.orgUnitAttributes;
    // if (DepartmentalAttributes==10){
    //     headquartersReview.SetVisible(true,false);
    // }
    if (Framework.IsNullOrEmpty(workFlowSubmit)) return;
    //项目保存后并且运营状态为新创建或者已拒绝的才显示提交按钮
    var isVisibleSub = (docState == 10 || docState == 100) && Framework.IsNotNullOrEmpty(projectId);
    workFlowSubmit.SetVisible(!isVisibleSub);
    //新增时状态为空给默认值进行一下判断
    if (Framework.IsNullOrEmpty(projectId) && Framework.IsNullOrEmpty(docState))
        docState = 10;

    var stopBtn = me.DownForCode("StopIt");//终止按钮
    var obsoleteBtn = me.DownForCode("Obsolete");//作废按钮
    var saveBtn = me.DownForCode("Save");//保存按钮
    var applyMotifyBtn = me.DownForCode("ApplyModify");//申请修改按钮
    var deleteBtn = me.DownForCode('Delete');//删除按钮
    var isModifyBtn = apply == 1;//是否点击过修改申请按钮

    var isDaProjectManager = false;
    var manager = me.DownForCode("projectManagerId");
    if (manager) {
        var mangerValue = manager.GetSubmitValue();
        if (mangerValue) {
            isDaProjectManager = mangerValue != AppContext.Profile.id;
        }
    }

    if (Framework.IsNotNullOrEmpty(stopBtn)) {
        //控制终止按钮
        //项目运营状态为:新创建，立项中，已作废，已归档，已拒绝时隐藏终止按钮
        var stopVisibleDocStates = [10, 20, 50, 70, 100];
        stopBtn.SetVisible((stopVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
        if (docState == 60 && stopBtn.SetTextValue)
            stopBtn.SetTextValue("取消终止");
    }

    if (Framework.IsNotNullOrEmpty(obsoleteBtn)) {
        //控制作废按钮
        //项目运营状态为:新创建，立项中，已终止，已归档，已拒绝时隐藏作废按钮
        var obsoleteVisibleDocStates = [10, 20, 60, 70, 100];
        obsoleteBtn.SetVisible((obsoleteVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
        if (docState == 50 && obsoleteBtn.SetTextValue)
            obsoleteBtn.SetTextValue("取消作废");
    }

    if (Framework.IsNotNullOrEmpty(saveBtn)) {
        //控制保存按钮
        //只有新创建跟已拒绝的才会显示保存按钮
        var isVisibleSave = docState != 10 && docState != 100;
        saveBtn.SetVisible((isVisibleSave && !isModifyBtn) || isDaProjectManager);
    }

    if (Framework.IsNotNullOrEmpty(applyMotifyBtn)) {
        //控制修改申请按钮显示隐藏
        //项目运营状态为:执行中，底稿复核中，报告出具中，底稿归档中时显示修改申请按钮
        var motifyVisibleDocStates = [30, 31, 32, 33];
        applyMotifyBtn.SetVisible((!motifyVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
    }

    if (Framework.IsNotNullOrEmpty(deleteBtn)) {
        //控制删除按钮显示隐藏
        deleteBtn.SetVisible((docState != 10 && docState != 100) || isDaProjectManager);
    }

    if (docState > 10 && docState != 100) {
        SetChildrenReadOnly(me, !isModifyBtn || isDaProjectManager);
    } else {
        SetChildrenReadOnly(me, isDaProjectManager);
    }
}

function SetChildrenReadOnly(form, isRendOnly) {
    console.log('formChildReadOnly')
    var childrens = Framework.GetValueControl(form);
    Framework.ForEach(childrens, function (item) {
        if (item && item.SetReadOnly) {
            item.SetReadOnly(isRendOnly);
        }
    });
}",
	"name":"非财报项目管理",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"nulReportProjectPage"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"非财报项目管理"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":false
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":30350
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.AfterLoad = function () {
    console.log("AfterLoadNulReportProjectPage");
    var me = this;
    var showName = me.DownForCode('Name');
    if (showName) {
        me.SetBusinessTitle(showName.GetValue());
    }
    var projectId = me.DownForCode("Id").GetValue();

    var model = me.Top();
    var apply = 0;//panel上修改申请标记
    if (model && model.SetDownVisible) {
        model.SetDownVisible("BusinessAgreement", Framework.IsNullOrEmpty(projectId));
        var applyControl = model.DownForCode("apply");
        if (me.IsFromSave) {
            //页面保存成功后
            applyControl.SetValue(0);
        }
        apply = applyControl ? applyControl.GetValue() : 0;//获取panel上修改申请标记
    }


    var docState = me.DownForCode("DocState").GetSubmitValue();//运营状态值
    var workFlowSubmit = me.DownForCode("WorkFlowSubmit");
    // //当前登入人是总所时时 总部复核隐藏
    // var headquartersReview=me.DownForCode('HeadquartersReview');
    // var DepartmentalAttributes=AppContext.Profile.orgUnitAttributes;
    // if (DepartmentalAttributes==10){
    //     headquartersReview.SetVisible(true,false);
    // }
    if (Framework.IsNullOrEmpty(workFlowSubmit)) return;
    //项目保存后并且运营状态为新创建或者已拒绝的才显示提交按钮
    var isVisibleSub = (docState == 10 || docState == 100) && Framework.IsNotNullOrEmpty(projectId);
    workFlowSubmit.SetVisible(!isVisibleSub);
    //新增时状态为空给默认值进行一下判断
    if (Framework.IsNullOrEmpty(projectId) && Framework.IsNullOrEmpty(docState))
        docState = 10;

    var stopBtn = me.DownForCode("StopIt");//终止按钮
    var obsoleteBtn = me.DownForCode("Obsolete");//作废按钮
    var saveBtn = me.DownForCode("Save");//保存按钮
    var applyMotifyBtn = me.DownForCode("ApplyModify");//申请修改按钮
    var deleteBtn = me.DownForCode('Delete');//删除按钮
    var isModifyBtn = apply == 1;//是否点击过修改申请按钮

    var isDaProjectManager = false;
    var manager = me.DownForCode("projectManagerId");
    if (manager) {
        var mangerValue = manager.GetSubmitValue();
        if (mangerValue) {
            isDaProjectManager = mangerValue != AppContext.Profile.id;
        }
    }

    if (Framework.IsNotNullOrEmpty(stopBtn)) {
        //控制终止按钮
        //项目运营状态为:新创建，立项中，已作废，已归档，已拒绝时隐藏终止按钮
        var stopVisibleDocStates = [10, 20, 50, 70, 100];
        stopBtn.SetVisible((stopVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
        if (docState == 60 && stopBtn.SetTextValue)
            stopBtn.SetTextValue("取消终止");
    }

    if (Framework.IsNotNullOrEmpty(obsoleteBtn)) {
        //控制作废按钮
        //项目运营状态为:新创建，立项中，已终止，已归档，已拒绝时隐藏作废按钮
        var obsoleteVisibleDocStates = [10, 20, 60, 70, 100];
        obsoleteBtn.SetVisible((obsoleteVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
        if (docState == 50 && obsoleteBtn.SetTextValue)
            obsoleteBtn.SetTextValue("取消作废");
    }

    if (Framework.IsNotNullOrEmpty(saveBtn)) {
        //控制保存按钮
        //只有新创建跟已拒绝的才会显示保存按钮
        var isVisibleSave = docState != 10 && docState != 100;
        saveBtn.SetVisible((isVisibleSave && !isModifyBtn) || isDaProjectManager);
    }

    if (Framework.IsNotNullOrEmpty(applyMotifyBtn)) {
        //控制修改申请按钮显示隐藏
        //项目运营状态为:执行中，底稿复核中，报告出具中，底稿归档中时显示修改申请按钮
        var motifyVisibleDocStates = [30, 31, 32, 33];
        applyMotifyBtn.SetVisible((!motifyVisibleDocStates.Contains(docState) || isModifyBtn) || isDaProjectManager);
    }

    if (Framework.IsNotNullOrEmpty(deleteBtn)) {
        //控制删除按钮显示隐藏
        deleteBtn.SetVisible((docState != 10 && docState != 100) || isDaProjectManager);
    }

    if (docState > 10 && docState != 100) {
        SetChildrenReadOnly(me, !isModifyBtn || isDaProjectManager);
    } else {
        SetChildrenReadOnly(me, isDaProjectManager);
    }
}

function SetChildrenReadOnly(form, isRendOnly) {
    console.log('formChildReadOnly')
    var childrens = Framework.GetValueControl(form);
    Framework.ForEach(childrens, function (item) {
        if (item && item.SetReadOnly) {
            item.SetReadOnly(isRendOnly);
        }
    });
}

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"Project"
		},
		{
			"isHide":false,
			"name":"WorkFlowForm",
			"value":"true"
		},
		{
			"isHide":false,
			"name":"HelpPrompt",
			"value":""
		},
		{
			"container":"Window",
			"isHide":false,
			"name":"Maximized",
			"value":"true"
		}
	],
	"sort":0
}
{"action":[{"code":"ApplyModify","name":"申请修改","property":[{"isHide":false,"name":"OnClick","value":"ApplyModify"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\n\nthis.ApplyModify=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;是否确认修改？&quot;, function () {\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;me.Top().DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;workFlow&nbsp;=&nbsp;me.Top().DownForCode(&quot;WorkFlowSubmit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;save&nbsp;=&nbsp;me.Top().DownForCode(&quot;Save&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stop&nbsp;=&nbsp;me.Top().DownForCode(&quot;StopIt&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsolete&nbsp;=&nbsp;me.Top().DownForCode(&quot;Obsolete&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;me.Top().DownForCode(&quot;apply&quot;).SetValue(1);\n&nbsp;&nbsp;&nbsp;&nbsp;me.setAttribute(&quot;isclick&quot;,true);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;me.Top().DownForCode('projectTab').Down(&quot;[controltype='FormPanel']&quot;).First\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.projectId&nbsp;=&nbsp;projectId;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-checkReviewIsComplete-Query.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlow.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsolete.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;control(form);\n&nbsp;&nbsp;&nbsp;})\n}\n\nfunction&nbsp;control(me)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;control&nbsp;=&nbsp;Framework.GetValueControl(me);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;control.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(control[i].SetReadOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;customerNameId&quot;&nbsp;||control[i].getAttribute(&quot;code&quot;)&nbsp;==&nbsp;&quot;projectStatus&quot;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control[i].SetReadOnly(false)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"sort":0},{"code":"Delete","name":"删除","property":[],"sort":1},{"code":"Save","name":"保存","property":[{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(model))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;model.DownForCode(&quot;NulReportProjectPage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectForm))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;model.DownForCode(&quot;apply&quot;);//获取修改申请的标记\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(apply&nbsp;&&&nbsp;apply.GetValue()&nbsp;==&nbsp;&quot;1&quot;&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(projectForm.OldData))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//是申请修改并且存老值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;).GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;msg&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isChangeRis&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(riskLevel&nbsp;!=&nbsp;projectForm.OldData.riskLevel)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;项目的风险等级发生变更，保存后项目需要重新提交审批流程&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isChangeRis&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditStart&nbsp;=&nbsp;model.DownForCode(&quot;AuditStart&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;auditEnd&nbsp;=&nbsp;model.DownForCode(&quot;AuditEnd&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isChangeaudit&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(auditStart&nbsp;!=&nbsp;projectForm.OldData.auditStart&nbsp;||&nbsp;auditEnd&nbsp;!=&nbsp;projectForm.OldData.auditEnd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;项目的审计期间发生变更，保存后项目需要重新提交审批流程&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isChangeaudit&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isChangeRis&nbsp;&&&nbsp;isChangeaudit)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;项目的风险等级和审计期间发生变更，保存后项目需要重新提交审批流程&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;typeMsg&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;customerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(customerType.id&nbsp;!=&nbsp;projectForm.OldData.customerType)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeMsg&nbsp;=&nbsp;&quot;客户类型由【&quot;&nbsp;+&nbsp;projectForm.OldData.customerTypeValue&nbsp;+&nbsp;&quot;】变更为【&quot;&nbsp;+&nbsp;customerType.text&nbsp;+&nbsp;&quot;】&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;).GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(businessType.id&nbsp;!=&nbsp;projectForm.OldData.businessType)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typeMsg)&nbsp;typeMsg&nbsp;+=&nbsp;&quot;,&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeMsg&nbsp;+=&nbsp;&quot;业务类型由【&quot;&nbsp;+&nbsp;projectForm.OldData.businessTypeValue&nbsp;+&nbsp;&quot;】变更为【&quot;&nbsp;+&nbsp;businessType.text&nbsp;+&nbsp;&quot;】&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;totalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;enumData&nbsp;=&nbsp;totalAssets.GetData();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;find&nbsp;=&nbsp;enumData.Find(&quot;id&quot;,&nbsp;projectForm.OldData.totalAssets);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(find&nbsp;&&&nbsp;totalAssets.GetSubmitValue()&nbsp;!=&nbsp;find.id)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typeMsg)&nbsp;typeMsg&nbsp;+=&nbsp;&quot;,&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeMsg&nbsp;+=&nbsp;&quot;资产总额由【&quot;&nbsp;+&nbsp;find.text&nbsp;+&nbsp;&quot;】变更为【&quot;&nbsp;+&nbsp;totalAssets.GetValueText()&nbsp;+&nbsp;&quot;】&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isConfirm&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(msg))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isConfirm&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(msg,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(typeMsg))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;项目的&quot;&nbsp;+&nbsp;typeMsg,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.DownForCode('docState').SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.DownForCode('docState').SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(typeMsg))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isConfirm&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;项目的&quot;&nbsp;+&nbsp;typeMsg,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Save();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;!isConfirm;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"sort":2},{"code":"StopIt","name":"终止","property":[{"isHide":false,"name":"OnClick","value":"TerminationClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;model.DownForCode(&quot;DocState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&&&nbsp;docState.GetSubmitValue()&nbsp;!=&nbsp;60)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有终止的时候才会提示，状态等于60时，该按钮为取消终止\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;确认终止吗？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnClickFunction();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.TerminationClick&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;终止&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsolete&nbsp;=&nbsp;model.DownForCode(&quot;Obsolete&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;workFlowSubmit&nbsp;=&nbsp;model.DownForCode(&quot;WorkFlowSubmit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyModify&nbsp;=&nbsp;model.DownForCode('ApplyModify');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.projectId&nbsp;=&nbsp;projectId;\n&nbsp;&nbsp;&nbsp;&nbsp;params.ClickValue&nbsp;=&nbsp;1\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;model.IsRefreshOpener&nbsp;=&nbsp;true;//刷新列表\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-terminationOrObsoleteFunc.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该项目的底稿正在复核中&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;2)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该项目的的报告正在处理中&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;3)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该项目的业务约定书正在处理中&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;4)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该项目的报告用印正在处理中&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;6)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;该项目的报备用印正在处理中&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;30)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetTextValue(&quot;终止&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsolete.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyModify.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsolete.SetTextValue(&quot;作废&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;60)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetTextValue(&quot;取消终止&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsolete.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyModify.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;model.DownForCode(&quot;projectPage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(projectForm)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//終止后刷新表單\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;失败&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":3},{"code":"Obsolete","name":"作废","property":[{"isHide":false,"name":"OnClick","value":"ObsoleteClick"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeHandler&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;model.DownForCode(&quot;DocState&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&&&nbsp;docState.GetSubmitValue()&nbsp;!=&nbsp;50)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有作废的时候才会提示，状态等于50时，该按钮为取消作废\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Confirm(&quot;确认作废吗？&quot;,&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.OnClickFunction();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\nthis.ObsoleteClick&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;liu&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;model.DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stopIt&nbsp;=&nbsp;model.DownForCode(&quot;StopIt&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;workFlowSubmit&nbsp;=&nbsp;model.DownForCode(&quot;WorkFlowSubmit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyModify&nbsp;=&nbsp;model.DownForCode('ApplyModify');\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.projectId&nbsp;=&nbsp;projectId;\n&nbsp;&nbsp;&nbsp;&nbsp;params.ClickValue&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;params.value&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;model.IsRefreshOpener&nbsp;=&nbsp;true;//刷新列表\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-terminationOrObsoleteFunc.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;1)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;底稿复核中，项目不允许作废&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;5)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;底稿复核完成，项目不允许作废&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;30)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopIt.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyModify.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopIt.SetTextValue(&quot;终止&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetTextValue(&quot;作废&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(result&nbsp;==&nbsp;50)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopIt.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyModify.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetTextValue(&quot;取消作废&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectForm&nbsp;=&nbsp;model.DownForCode(&quot;projectPage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(projectForm)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//終止后刷新表單\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectForm.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;失败&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"sort":4},{"code":"ShowDetail","name":"查看","property":[],"sort":5},{"code":"Export","container":"GridPanel","name":"导出","property":[],"sort":6}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"customerType","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue,isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('OnChange&nbsp;1111')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetSelected().text;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetValueText();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(selectValue);\n&nbsp;&nbsp;&nbsp;&nbsp;//riskLevel.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;riskLevel.SetValue(&quot;&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;//财报和非财报标识\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FinancialReportProject&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/business-type/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;FinancialReportProject&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessType.LoadData(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(newValue&nbsp;!=&nbsp;oldValue&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(oldValue))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessType.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"queryUrl","value":"/risk-level/client-type/1"},{"isHide":false,"name":"textfield","value":"treeName"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue,isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('OnChange&nbsp;1111')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;riskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetSelected().text;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetValueText();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(selectValue);\n&nbsp;&nbsp;&nbsp;&nbsp;//riskLevel.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!isLoad)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;riskLevel.SetValue(&quot;&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;//财报和非财报标识\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FinancialReportProject&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/business-type/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;FinancialReportProject&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessType.LoadData(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(newValue&nbsp;!=&nbsp;oldValue&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(oldValue))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;businessType.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\n\r\n \r\n};"}],"select":"CustomerType","sort":15},{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":6},{"action":[],"authority":[],"children":[],"code":"projectPartnerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"","name":"项目合伙人","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"SchemaCode","value":"PartnerSelecter"}],"select":"ProjectPartnerId[Entity(User|Code(Code)#Name(Name))]","sort":20},{"action":[],"authority":[],"children":[],"code":"projectManagerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"","name":"项目经理","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"SchemaCode","value":"ProjectManagerSelecter"}],"select":"projectManagerId[Entity(User|Code(Code)#Name(Name))]","sort":21},{"action":[],"authority":[],"children":[],"code":"docState","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"项目状态","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ProjectState"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ProjectState)]"}],"select":"DocState[Enum(ProjectState)]","sort":22},{"action":[],"authority":[],"children":[],"code":"customerNameId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"","name":"客户名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":50},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Customer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Customer"},{"isHide":false,"name":"SchemaCode","value":"CustomerPopup"}],"select":"CustomerNameId[Entity(Customer|Code(Code)#Name(Name))]","sort":7},{"action":[],"authority":[],"children":[],"code":"businessType","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\nconsole.log(&quot;业务&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;model.DownForCode(&quot;HeadquartersReview&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetValueText();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeValue.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeValue.SetValue(selectValue);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromLoad)&nbsp;return;//首次加载时返回\n&nbsp;&nbsp;&nbsp;&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributes&nbsp;=&nbsp;AppContext.Profile.unitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;me.Top(&quot;[controltype='Panel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(panel&nbsp;&&&nbsp;!panel.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributesControl&nbsp;&&&nbsp;orgUnitAttributesControl.GetValue)&nbsp;orgUnitAttributes&nbsp;=&nbsp;orgUnitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributesControl&nbsp;&&&nbsp;unitAttributesControl.GetValue)&nbsp;unitAttributes&nbsp;=&nbsp;unitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributes&nbsp;!=&nbsp;10&nbsp;&&&nbsp;orgUnitAttributes&nbsp;!=&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;10&nbsp;||&nbsp;result&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\nconsole.log(&quot;业务&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;headquartersReview&nbsp;=&nbsp;model.DownForCode(&quot;HeadquartersReview&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;selectValue&nbsp;=&nbsp;this.GetValueText();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeValue.SetValue(&quot;&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeValue.SetValue(selectValue);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromLoad)&nbsp;return;//首次加载时返回\n&nbsp;&nbsp;&nbsp;&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributes&nbsp;=&nbsp;AppContext.Profile.unitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;me.Top(&quot;[controltype='Panel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(panel&nbsp;&&&nbsp;!panel.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributesControl&nbsp;&&&nbsp;orgUnitAttributesControl.GetValue)&nbsp;orgUnitAttributes&nbsp;=&nbsp;orgUnitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributesControl&nbsp;&&&nbsp;unitAttributesControl.GetValue)&nbsp;unitAttributes&nbsp;=&nbsp;unitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributes&nbsp;!=&nbsp;10&nbsp;&&&nbsp;orgUnitAttributes&nbsp;!=&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;10&nbsp;||&nbsp;result&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"select":"BusinessType","sort":16},{"action":[],"authority":[],"children":[],"code":"riskLevel","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"RiskLevel"},{"isHide":false,"name":"EntityConfig","value":"[Enum(RiskLevel)]"},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"RiskLevel[Enum(RiskLevel)]","sort":18},{"action":[],"authority":[],"children":[],"code":"code","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目编号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"Code","sort":13},{"action":[],"authority":[],"children":[],"code":"showName","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":300},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"ShowName","sort":14},{"action":[],"authority":[],"children":[],"code":"competencyConclusion","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"项目组资源和专业胜任能力的调查记录","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2000},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"CompetencyConclusion","sort":23},{"action":[],"authority":[],"children":[],"code":"businessConclusion","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务情况调查记录表调查结论","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2000},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessConclusion","sort":24},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":25},{"action":[],"authority":[],"children":[],"code":"financialReportProject","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"财报项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Description","value":"10财报项目 20非财报项目"},{"isHide":false,"name":"DefaultValue","value":"20"}],"select":"FinancialReportProject","sort":5},{"action":[],"authority":[],"children":[],"code":"totalAssets","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;console.log(&quot;资产&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;HeadquartersReview&nbsp;=&nbsp;model.DownForCode(&quot;HeadquartersReview&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromLoad)&nbsp;return;//首次加载时返回\n&nbsp;&nbsp;&nbsp;&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributes&nbsp;=&nbsp;AppContext.Profile.unitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;me.Top(&quot;[controltype='Panel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(panel&nbsp;&&&nbsp;!panel.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributesControl&nbsp;&&&nbsp;orgUnitAttributesControl.GetValue)&nbsp;orgUnitAttributes&nbsp;=&nbsp;orgUnitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributesControl&nbsp;&&&nbsp;unitAttributesControl.GetValue)&nbsp;unitAttributes&nbsp;=&nbsp;unitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributes&nbsp;!=&nbsp;10&nbsp;&&&nbsp;orgUnitAttributes&nbsp;!=&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;10&nbsp;||&nbsp;result&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}","name":"资产总额","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"TotalAssets"},{"isHide":false,"name":"EntityConfig","value":"[Enum(TotalAssets)]"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;console.log(&quot;资产&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;HeadquartersReview&nbsp;=&nbsp;model.DownForCode(&quot;HeadquartersReview&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromLoad)&nbsp;return;//首次加载时返回\n&nbsp;&nbsp;&nbsp;&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributes&nbsp;=&nbsp;AppContext.Profile.unitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributes&nbsp;=&nbsp;AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;me.Top(&quot;[controltype='Panel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(panel&nbsp;&&&nbsp;!panel.IsAdd)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;orgUnitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_OrgId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(orgUnitAttributesControl&nbsp;&&&nbsp;orgUnitAttributesControl.GetValue)&nbsp;orgUnitAttributes&nbsp;=&nbsp;orgUnitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;unitAttributesControl&nbsp;=&nbsp;me.DownForCode(&quot;DeptId_UnitAttributes&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributesControl&nbsp;&&&nbsp;unitAttributesControl.GetValue)&nbsp;unitAttributes&nbsp;=&nbsp;unitAttributesControl.GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(unitAttributes&nbsp;!=&nbsp;10&nbsp;&&&nbsp;orgUnitAttributes&nbsp;!=&nbsp;10)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;==&nbsp;10&nbsp;||&nbsp;result&nbsp;==&nbsp;20)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetValue(10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.Clear();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HeadquartersReview.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"}],"select":"TotalAssets[Enum(TotalAssets)]","sort":17},{"action":[],"authority":[],"children":[],"code":"headquartersReview","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"总部复核","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"YesOrNo"},{"isHide":false,"name":"EntityConfig","value":"[Enum(YesOrNo)]"}],"select":"HeadquartersReview[Enum(YesOrNo)]","sort":19},{"action":[],"authority":[],"children":[],"code":"customerTypeValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型text","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"CustomerTypeValue","sort":4},{"action":[],"authority":[],"children":[],"code":"businessTypeValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型text","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessTypeValue","sort":3},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"auditStart","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"审计期间(开始)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"AuditStart","sort":10},{"action":[],"authority":[],"children":[],"code":"auditEnd","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"审计期间(结束)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"AuditEnd","sort":12}],"code":"datefw","control":"DateTimeGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间","otherChildren":[],"property":[],"sort":8},{"action":[],"authority":[],"children":[],"code":"deptId_OrgId_UnitAttributes","control":"Hidden","dataPermission":[],"isReference":false,"name":"项目所属分所部门类型","otherChildren":[],"property":[],"sort":2},{"action":[],"authority":[],"children":[],"code":"deptId_UnitAttributes","control":"Hidden","dataPermission":[],"isReference":false,"name":"项目所属部门部门类型","otherChildren":[],"property":[],"sort":1}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[{"isHide":false,"name":"DetailColumns","value":"3"},{"isHide":false,"name":"style:padding","value":"20px"}],"sort":0},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":342930}],"sort":0}],"code":"approvalTrajectoryFieldSet","control":"FieldSet","dataPermission":[],"isReference":false,"name":"审批轨迹","otherChildren":[],"property":[{"isHide":false,"name":"IsWorkFlowHide","value":"false"}],"sort":11},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"nulReportProjectPage","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AfterLoadNulReportProjectPage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;showName&nbsp;=&nbsp;me.DownForCode('Name');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(showName)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetBusinessTitle(showName.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;me.DownForCode(&quot;Id&quot;).GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;0;//panel上修改申请标记\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(model&nbsp;&&&nbsp;model.SetDownVisible)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.SetDownVisible(&quot;BusinessAgreement&quot;,&nbsp;Framework.IsNullOrEmpty(projectId));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyControl&nbsp;=&nbsp;model.DownForCode(&quot;apply&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromSave)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//页面保存成功后\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyControl.SetValue(0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apply&nbsp;=&nbsp;applyControl&nbsp;?&nbsp;applyControl.GetValue()&nbsp;:&nbsp;0;//获取panel上修改申请标记\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;me.DownForCode(&quot;DocState&quot;).GetSubmitValue();//运营状态值\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;workFlowSubmit&nbsp;=&nbsp;me.DownForCode(&quot;WorkFlowSubmit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;headquartersReview=me.DownForCode('HeadquartersReview');\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;DepartmentalAttributes=AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(DepartmentalAttributes==10){\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(workFlowSubmit))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//项目保存后并且运营状态为新创建或者已拒绝的才显示提交按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisibleSub&nbsp;=&nbsp;(docState&nbsp;==&nbsp;10&nbsp;||&nbsp;docState&nbsp;==&nbsp;100)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(projectId);\n&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(!isVisibleSub);\n&nbsp;&nbsp;&nbsp;&nbsp;//新增时状态为空给默认值进行一下判断\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectId)&nbsp;&&&nbsp;Framework.IsNullOrEmpty(docState))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docState&nbsp;=&nbsp;10;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stopBtn&nbsp;=&nbsp;me.DownForCode(&quot;StopIt&quot;);//终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsoleteBtn&nbsp;=&nbsp;me.DownForCode(&quot;Obsolete&quot;);//作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;saveBtn&nbsp;=&nbsp;me.DownForCode(&quot;Save&quot;);//保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyMotifyBtn&nbsp;=&nbsp;me.DownForCode(&quot;ApplyModify&quot;);//申请修改按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;deleteBtn&nbsp;=&nbsp;me.DownForCode('Delete');//删除按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isModifyBtn&nbsp;=&nbsp;apply&nbsp;==&nbsp;1;//是否点击过修改申请按钮\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isDaProjectManager&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manager&nbsp;=&nbsp;me.DownForCode(&quot;projectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(manager)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mangerValue&nbsp;=&nbsp;manager.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(mangerValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isDaProjectManager&nbsp;=&nbsp;mangerValue&nbsp;!=&nbsp;AppContext.Profile.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(stopBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:新创建，立项中，已作废，已归档，已拒绝时隐藏终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stopVisibleDocStates&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;50,&nbsp;70,&nbsp;100];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopBtn.SetVisible((stopVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;60&nbsp;&&&nbsp;stopBtn.SetTextValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopBtn.SetTextValue(&quot;取消终止&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(obsoleteBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:新创建，立项中，已终止，已归档，已拒绝时隐藏作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsoleteVisibleDocStates&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;60,&nbsp;70,&nbsp;100];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsoleteBtn.SetVisible((obsoleteVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;50&nbsp;&&&nbsp;obsoleteBtn.SetTextValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsoleteBtn.SetTextValue(&quot;取消作废&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(saveBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有新创建跟已拒绝的才会显示保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisibleSave&nbsp;=&nbsp;docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveBtn.SetVisible((isVisibleSave&nbsp;&&&nbsp;!isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(applyMotifyBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制修改申请按钮显示隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:执行中，底稿复核中，报告出具中，底稿归档中时显示修改申请按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;motifyVisibleDocStates&nbsp;=&nbsp;[30,&nbsp;31,&nbsp;32,&nbsp;33];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyMotifyBtn.SetVisible((!motifyVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(deleteBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制删除按钮显示隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteBtn.SetVisible((docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetChildrenReadOnly(me,&nbsp;!isModifyBtn&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetChildrenReadOnly(me,&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nfunction&nbsp;SetChildrenReadOnly(form,&nbsp;isRendOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('formChildReadOnly')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;childrens&nbsp;=&nbsp;Framework.GetValueControl(form);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(childrens,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item&nbsp;&&&nbsp;item.SetReadOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.SetReadOnly(isRendOnly);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}","name":"非财报项目管理","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"nulReportProjectPage"},{"isHide":false,"name":"Name","value":"非财报项目管理"},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":30350},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AfterLoadNulReportProjectPage&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;showName&nbsp;=&nbsp;me.DownForCode('Name');\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(showName)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;me.SetBusinessTitle(showName.GetValue());\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectId&nbsp;=&nbsp;me.DownForCode(&quot;Id&quot;).GetValue();\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Top();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;apply&nbsp;=&nbsp;0;//panel上修改申请标记\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(model&nbsp;&&&nbsp;model.SetDownVisible)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model.SetDownVisible(&quot;BusinessAgreement&quot;,&nbsp;Framework.IsNullOrEmpty(projectId));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyControl&nbsp;=&nbsp;model.DownForCode(&quot;apply&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(me.IsFromSave)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//页面保存成功后\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyControl.SetValue(0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apply&nbsp;=&nbsp;applyControl&nbsp;?&nbsp;applyControl.GetValue()&nbsp;:&nbsp;0;//获取panel上修改申请标记\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;docState&nbsp;=&nbsp;me.DownForCode(&quot;DocState&quot;).GetSubmitValue();//运营状态值\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;workFlowSubmit&nbsp;=&nbsp;me.DownForCode(&quot;WorkFlowSubmit&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;//当前登入人是总所时时&nbsp;总部复核隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;headquartersReview=me.DownForCode('HeadquartersReview');\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;var&nbsp;DepartmentalAttributes=AppContext.Profile.orgUnitAttributes;\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(DepartmentalAttributes==10){\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headquartersReview.SetVisible(true,false);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(workFlowSubmit))&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;//项目保存后并且运营状态为新创建或者已拒绝的才显示提交按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisibleSub&nbsp;=&nbsp;(docState&nbsp;==&nbsp;10&nbsp;||&nbsp;docState&nbsp;==&nbsp;100)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(projectId);\n&nbsp;&nbsp;&nbsp;&nbsp;workFlowSubmit.SetVisible(!isVisibleSub);\n&nbsp;&nbsp;&nbsp;&nbsp;//新增时状态为空给默认值进行一下判断\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(projectId)&nbsp;&&&nbsp;Framework.IsNullOrEmpty(docState))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docState&nbsp;=&nbsp;10;\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stopBtn&nbsp;=&nbsp;me.DownForCode(&quot;StopIt&quot;);//终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsoleteBtn&nbsp;=&nbsp;me.DownForCode(&quot;Obsolete&quot;);//作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;saveBtn&nbsp;=&nbsp;me.DownForCode(&quot;Save&quot;);//保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;applyMotifyBtn&nbsp;=&nbsp;me.DownForCode(&quot;ApplyModify&quot;);//申请修改按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;deleteBtn&nbsp;=&nbsp;me.DownForCode('Delete');//删除按钮\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isModifyBtn&nbsp;=&nbsp;apply&nbsp;==&nbsp;1;//是否点击过修改申请按钮\n\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isDaProjectManager&nbsp;=&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manager&nbsp;=&nbsp;me.DownForCode(&quot;projectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(manager)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;mangerValue&nbsp;=&nbsp;manager.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(mangerValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isDaProjectManager&nbsp;=&nbsp;mangerValue&nbsp;!=&nbsp;AppContext.Profile.id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(stopBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:新创建，立项中，已作废，已归档，已拒绝时隐藏终止按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;stopVisibleDocStates&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;50,&nbsp;70,&nbsp;100];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopBtn.SetVisible((stopVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;60&nbsp;&&&nbsp;stopBtn.SetTextValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopBtn.SetTextValue(&quot;取消终止&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(obsoleteBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:新创建，立项中，已终止，已归档，已拒绝时隐藏作废按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obsoleteVisibleDocStates&nbsp;=&nbsp;[10,&nbsp;20,&nbsp;60,&nbsp;70,&nbsp;100];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsoleteBtn.SetVisible((obsoleteVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;==&nbsp;50&nbsp;&&&nbsp;obsoleteBtn.SetTextValue)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obsoleteBtn.SetTextValue(&quot;取消作废&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(saveBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//只有新创建跟已拒绝的才会显示保存按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isVisibleSave&nbsp;=&nbsp;docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveBtn.SetVisible((isVisibleSave&nbsp;&&&nbsp;!isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(applyMotifyBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制修改申请按钮显示隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//项目运营状态为:执行中，底稿复核中，报告出具中，底稿归档中时显示修改申请按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;motifyVisibleDocStates&nbsp;=&nbsp;[30,&nbsp;31,&nbsp;32,&nbsp;33];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applyMotifyBtn.SetVisible((!motifyVisibleDocStates.Contains(docState)&nbsp;||&nbsp;isModifyBtn)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(deleteBtn))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//控制删除按钮显示隐藏\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteBtn.SetVisible((docState&nbsp;!=&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100)&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(docState&nbsp;&gt;&nbsp;10&nbsp;&&&nbsp;docState&nbsp;!=&nbsp;100)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetChildrenReadOnly(me,&nbsp;!isModifyBtn&nbsp;||&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetChildrenReadOnly(me,&nbsp;isDaProjectManager);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\nfunction&nbsp;SetChildrenReadOnly(form,&nbsp;isRendOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('formChildReadOnly')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;childrens&nbsp;=&nbsp;Framework.GetValueControl(form);\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.ForEach(childrens,&nbsp;function&nbsp;(item)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item&nbsp;&&&nbsp;item.SetReadOnly)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.SetReadOnly(isRendOnly);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"Project"},{"isHide":false,"name":"WorkFlowForm","value":"true"},{"isHide":false,"name":"HelpPrompt","value":""},{"container":"Window","isHide":false,"name":"Maximized","value":"true"}],"sort":0}
2020-05-09 19:57:28