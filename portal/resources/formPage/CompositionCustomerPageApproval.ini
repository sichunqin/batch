{
	"action":[
		{
			"code":"Save",
			"name":"保存",
			"property":[
				
			],
			"sort":0
		},
		{
			"code":"ShowDetail",
			"name":"查看",
			"property":[
				
			],
			"sort":1
		},
		{
			"code":"customDel",
			"name":"删除",
			"property":[
				{
					"isHide":false,
					"name":"OnClick",
					"value":"OnClicka"
				},
				{
					"isHide":false,
					"name":"JavaScript",
					"value":"var registerJavaScript = function () {

 

this.OnClicka=function()
{
    console.log('onclickas')
    var obj = this.Up().Up();
    var parentId = obj.DownForCode("parentId");
    var tree= this.Top().Down("[controltype='Tree']").First;
    if(Framework.IsNullOrEmpty(parentId)){
       Framework.Message("一级树不能删除");
       return false;
   }else
   {
    var params={}
    params.primaryId=obj.DownForCode("Id").GetValue();
    Framework.AjaxRequest(me, "Project-DeleteCompositionCustomer.do", 'get', params, true, function (result) 
    {
      Framework.Message("删除成功");   
      tree.Load();
  },
  function (result) {
    Framework.Message("失败");
});


}
}



 

};"
				}
			],
			"sort":2
		},
		{
			"code":"Export",
			"container":"GridPanel",
			"name":"导出",
			"property":[
				
			],
			"sort":3
		}
	],
	"authority":[
		
	],
	"children":[
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"id",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"主键",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Id",
					"sort":1
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"companyRelationship",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"关系",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":10
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"Relationship"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(Relationship)]"
						}
					],
					"select":"CompanyRelationship[Enum(Relationship)]",
					"sort":2
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isSubsidiaryReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"子公司是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":1
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsSubsidiaryReport",
					"sort":3
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"isReport",
					"control":"CheckBox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否单独出具报告",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"IsReport",
					"sort":4
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"code",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目编号",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":200
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Code",
					"sort":10
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"showName",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目名称",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":300
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"ShowName",
					"sort":11
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerType",
					"control":"TreeCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    console.log("客户类型")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue(this.GetValueText())
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {};
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetValue() + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
    }
};
",
					"name":"客户类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"queryUrl",
							"value":"/risk-level/client-type/0"
						},
						{
							"isHide":false,
							"name":"textfield",
							"value":"treeName"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    console.log("客户类型")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    var CustomerTypeValue = model.DownForCode("CustomerTypeValue");
    CustomerTypeValue.SetValue(this.GetValueText())
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {};
        Framework.AjaxRequest(me, "/risk-level/" + newValue + "/" + businessType.GetValue() + "/" + TotalAssets.GetSubmitValue() + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
    }
};


 

};"
						}
					],
					"select":"CustomerType",
					"sort":12
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"customerTypeValue",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"客户类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"CustomerTypeValue",
					"sort":13
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessType",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessType",
					"sort":14
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeValue",
					"control":"Text",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":100
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"BusinessTypeValue",
					"sort":15
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"businessTypeText",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"业务类型",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":16
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"firstOrContinuous",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"是否首次承接",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"UndertakeCount"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(UndertakeCount)]"
						}
					],
					"select":"FirstOrContinuous[Enum(UndertakeCount)]",
					"sort":17
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"totalAssets",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}
",
					"name":"资产总额",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":18
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"TotalAssets"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(TotalAssets)]"
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (newValue, oldValue) {
    console.log("哦解决")
    var me = this;
    var model = me.Up()
    var businessType = model.DownForCode("BusinessType");
    var CustomerType = model.DownForCode("CustomerType");
    var TotalAssets = model.DownForCode("TotalAssets");
    var RiskLevel = model.DownForCode("RiskLevel");
    if (Framework.IsNullOrEmpty(newValue)) return false;
    if (Framework.IsNotNullOrEmpty(newValue) && Framework.IsNotNullOrEmpty(businessType.GetValue()) && Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue())) {
        var params = {}
        Framework.AjaxRequest(me, "/risk-level/" + CustomerType.GetSubmitValue() + "/" + businessType.GetValue() + "/" + newValue + "", 'get', params, true, function (result) {
                RiskLevel.SetValue(result);
            },
            function (result) {
                Framework.Message(result.responseText);
            });
        return;
    }
}


 

};"
						}
					],
					"select":"TotalAssets[Enum(TotalAssets)]",
					"sort":18
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"riskLevel",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"风险等级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":4
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"RiskLevel"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(RiskLevel)]"
						}
					],
					"select":"RiskLevel[Enum(RiskLevel)]",
					"sort":19
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectManagerId",
					"control":"GridCombobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"this.OnChange = function (oldVal, newVal) {
    console.log('onchange')
    var first = this.Up().Up().Down("[controltype='GridPanel']").First;
    var panel = this.Up().Up().Down("[controltype='FormPanel']").First;
    var d = this.Up().Up().Down("[controltype='FormPanel']");
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            panel.Load();
        },
        function (result) {

        });
}",
					"name":"项目经理",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(User|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"User"
						},
						{
							"isHide":false,
							"name":"Required",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"SchemaCode",
							"value":"ProjectManagerSelecter"
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						},
						{
							"isHide":false,
							"name":"JavaScript",
							"value":"var registerJavaScript = function () {

 

this.OnChange = function (oldVal, newVal) {
    console.log('onchange')
    var first = this.Up().Up().Down("[controltype='GridPanel']").First;
    var panel = this.Up().Up().Down("[controltype='FormPanel']").First;
    var d = this.Up().Up().Down("[controltype='FormPanel']");
    var params = {}
    params.compostionId = this.Up().DownForCode("id").GetValue();
    params.userId = newVal.id;
    Framework.AjaxRequest(me, "CompositionMembers-SaveMember.do", 'get', params, true, function (result) {
            first.Load();
            panel.Load();
        },
        function (result) {

        });
}

 

};"
						}
					],
					"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]",
					"sort":20
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"manuscriptTemplate",
					"control":"Combobox",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"底稿模板",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":2
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EnumType",
							"value":"ManuscriptTemplate"
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Enum(ManuscriptTemplate)]"
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":"true"
						}
					],
					"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]",
					"sort":21
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"timestamp",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"时间戳",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":8
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						}
					],
					"select":"Timestamp",
					"sort":22
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"parentId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"上级",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"CompositionCustomer"
						}
					],
					"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]",
					"sort":23
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"code":"projectId",
					"control":"Hidden",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"项目",
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":false,
							"name":"Length",
							"value":16
						},
						{
							"isHide":false,
							"name":"Required",
							"value":true
						},
						{
							"isHide":false,
							"name":"IsReadOnly",
							"value":false
						},
						{
							"isHide":false,
							"name":"IsTransient",
							"value":false
						},
						{
							"isHide":false,
							"name":"EntityConfig",
							"value":"[Entity(Project|Code(Code)#Name(Name))]"
						},
						{
							"isHide":false,
							"name":"EntityCode",
							"value":"Project"
						}
					],
					"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]",
					"sort":24
				},
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditStart",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(开始)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"Required",
									"value":"true"
								}
							],
							"select":"AuditStart",
							"sort":8
						},
						{
							"action":[
								
							],
							"authority":[
								
							],
							"children":[
								
							],
							"code":"auditEnd",
							"control":"Date",
							"dataPermission":[
								
							],
							"isReference":false,
							"javaScript":"",
							"name":"会计期间(结束)",
							"otherChildren":[
								
							],
							"property":[
								{
									"isHide":false,
									"name":"Length",
									"value":23
								},
								{
									"isHide":false,
									"name":"IsReadOnly",
									"value":false
								},
								{
									"isHide":false,
									"name":"IsTransient",
									"value":false
								},
								{
									"isHide":false,
									"name":"Required",
									"value":"true"
								}
							],
							"select":"AuditEnd",
							"sort":9
						}
					],
					"code":"datefw",
					"control":"DateTimeGroup",
					"dataPermission":[
						
					],
					"isReference":false,
					"javaScript":"",
					"name":"会计期间",
					"otherChildren":[
						
					],
					"property":[
						
					],
					"sort":7
				}
			],
			"code":"columnGroup",
			"control":"ColumnGroup",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"列集合",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":0
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				{
					"action":[
						
					],
					"authority":[
						
					],
					"children":[
						
					],
					"dataPermission":[
						
					],
					"isReference":false,
					"otherChildren":[
						
					],
					"property":[
						{
							"isHide":true,
							"name":"referenceFormId",
							"value":54665
						}
					],
					"sort":0
				}
			],
			"code":"fieldSet1",
			"control":"FieldSet",
			"dataPermission":[
				
			],
			"isReference":false,
			"javaScript":"",
			"name":"项目组成员",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":6
		},
		{
			"action":[
				
			],
			"authority":[
				
			],
			"children":[
				
			],
			"code":"uuid",
			"control":"Hidden",
			"dataPermission":[
				
			],
			"isReference":false,
			"name":"uuid",
			"otherChildren":[
				
			],
			"property":[
				
			],
			"sort":1000
		}
	],
	"code":"compositionCustomerPageApproval",
	"control":"FormPanel",
	"dataPermission":[
		
	],
	"isReference":false,
	"javaScript":"this.BeforeLoad = function () {
    var manger = this.DownForCode("ProjectManagerId")
    var model = this.Up().Up().Up();
    var west = model.DownForCode("compositionCustomer");
    var valModel = west.GetSelected();
    if (Framework.IsNullOrEmpty(valModel)) return false;
    var projectCode = this.DownForCode("Code");
    var projectName = this.DownForCode("ShowName");
    var CustomerType = this.DownForCode("CustomerType");
    var BusinessType = this.DownForCode("BusinessType");
    var FirstOrContinuous = this.DownForCode("FirstOrContinuous");
    var TotalAssets = this.DownForCode("TotalAssets");
    var RiskLevel = this.DownForCode("RiskLevel");
    var ProjectManagerId = this.DownForCode("ProjectManagerId");
    var BusinessTypeText = this.DownForCode("BusinessTypeValue");
    if (valModel.parentId == null) {
        manger.SetReadOnly(false);
        var isReport = this.DownForCode("isReport");
        isReport.SetVisible(true);
        var isSubsidiaryReport = this.DownForCode("isSubsidiaryReport");
        this.DownForCode("isSubsidiaryReport").SetVisible(false);
        projectCode.SetReadOnly(true);
        CustomerType.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(true);
        if (Framework.IsNotNullOrEmpty(CustomerType.GetValue())) {
            this.DownForCode("projectManagerId")
        }
    } else {
        CustomerType.SetReadOnly(false);
        manger.SetReadOnly(false);
        var isSubsidiaryReport = this.DownForCode("isSubsidiaryReport");
        isSubsidiaryReport.SetVisible(true);
        var isReport = this.DownForCode("isReport");
        isReport.SetVisible(false);
        projectCode.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(false);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(false);
        if (Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
            var params = {};
            Framework.AjaxRequest(me, "/risk-level/client-type-business/" + BusinessType.GetValue() + "", 'get', params, true, function (result) {
                CustomerType.LoadData(result)
            }, function (result) {
                Framework.Message(result.responseText);
            });
        }
    }
    // if (Framework.IsNotNullOrEmpty(CustomerType.GetValue()) && Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
    //     var params = {};
    //     params.customerType = CustomerType.GetValue();
    //     params.busnissType = BusinessType.GetValue();
    //     Framework.AjaxRequest(me, "/Project-getBusinessTypeName.do", 'get', params, true, function (result) {
    //         BusinessTypeText.SetValue(result);
    //     }, function (result) {
    //         Framework.Message(result.responseText);
    //     });
    // }
}

this.AfterLoad = function () {
    var me = this;
    var CustomerType = this.DownForCode("CustomerType");
    var BusinessType = this.DownForCode("BusinessType");
    var BusinessTypeText = this.DownForCode("BusinessTypeText");

    if (Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
        var params = {};
        params.customerType = CustomerType.GetSubmitValue();
        params.busnissType = BusinessType.GetValue();
        Framework.AjaxRequest(me, "/Project-getBusinessTypeName.do", 'get', params, true, function (result) {
            BusinessTypeText.SetValue(result);
        }, function (result) {
            Framework.Message(result.responseText);
        });
    }
}",
	"name":"组成部分卡片审批",
	"otherChildren":[
		
	],
	"property":[
		{
			"isHide":false,
			"name":"BaseCode",
			"value":"compositionCustomerPageApproval"
		},
		{
			"isHide":false,
			"name":"Name",
			"value":"组成部分卡片审批"
		},
		{
			"isHide":false,
			"name":"IsReadOnly",
			"value":true
		},
		{
			"isHide":false,
			"name":"Description"
		},
		{
			"isHide":false,
			"name":"FormId",
			"value":54142
		},
		{
			"isHide":false,
			"name":"OrderBy"
		},
		{
			"isHide":false,
			"name":"IsSqlForm",
			"value":false
		},
		{
			"isHide":false,
			"name":"JavaScript",
			"value":"var registerJavaScript = function () {

 

this.BeforeLoad = function () {
    var manger = this.DownForCode("ProjectManagerId")
    var model = this.Up().Up().Up();
    var west = model.DownForCode("compositionCustomer");
    var valModel = west.GetSelected();
    if (Framework.IsNullOrEmpty(valModel)) return false;
    var projectCode = this.DownForCode("Code");
    var projectName = this.DownForCode("ShowName");
    var CustomerType = this.DownForCode("CustomerType");
    var BusinessType = this.DownForCode("BusinessType");
    var FirstOrContinuous = this.DownForCode("FirstOrContinuous");
    var TotalAssets = this.DownForCode("TotalAssets");
    var RiskLevel = this.DownForCode("RiskLevel");
    var ProjectManagerId = this.DownForCode("ProjectManagerId");
    var BusinessTypeText = this.DownForCode("BusinessTypeValue");
    if (valModel.parentId == null) {
        manger.SetReadOnly(false);
        var isReport = this.DownForCode("isReport");
        isReport.SetVisible(true);
        var isSubsidiaryReport = this.DownForCode("isSubsidiaryReport");
        this.DownForCode("isSubsidiaryReport").SetVisible(false);
        projectCode.SetReadOnly(true);
        CustomerType.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(true);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(true);
        if (Framework.IsNotNullOrEmpty(CustomerType.GetValue())) {
            this.DownForCode("projectManagerId")
        }
    } else {
        CustomerType.SetReadOnly(false);
        manger.SetReadOnly(false);
        var isSubsidiaryReport = this.DownForCode("isSubsidiaryReport");
        isSubsidiaryReport.SetVisible(true);
        var isReport = this.DownForCode("isReport");
        isReport.SetVisible(false);
        projectCode.SetReadOnly(true);
        projectName.SetReadOnly(true);
        BusinessTypeText.SetReadOnly(true);
        FirstOrContinuous.SetReadOnly(true);
        TotalAssets.SetReadOnly(false);
        RiskLevel.SetReadOnly(true);
        ProjectManagerId.SetReadOnly(false);
        if (Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
            var params = {};
            Framework.AjaxRequest(me, "/risk-level/client-type-business/" + BusinessType.GetValue() + "", 'get', params, true, function (result) {
                CustomerType.LoadData(result)
            }, function (result) {
                Framework.Message(result.responseText);
            });
        }
    }
    // if (Framework.IsNotNullOrEmpty(CustomerType.GetValue()) && Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
    //     var params = {};
    //     params.customerType = CustomerType.GetValue();
    //     params.busnissType = BusinessType.GetValue();
    //     Framework.AjaxRequest(me, "/Project-getBusinessTypeName.do", 'get', params, true, function (result) {
    //         BusinessTypeText.SetValue(result);
    //     }, function (result) {
    //         Framework.Message(result.responseText);
    //     });
    // }
}

this.AfterLoad = function () {
    var me = this;
    var CustomerType = this.DownForCode("CustomerType");
    var BusinessType = this.DownForCode("BusinessType");
    var BusinessTypeText = this.DownForCode("BusinessTypeText");

    if (Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue()) && Framework.IsNotNullOrEmpty(BusinessType.GetValue())) {
        var params = {};
        params.customerType = CustomerType.GetSubmitValue();
        params.busnissType = BusinessType.GetValue();
        Framework.AjaxRequest(me, "/Project-getBusinessTypeName.do", 'get', params, true, function (result) {
            BusinessTypeText.SetValue(result);
        }, function (result) {
            Framework.Message(result.responseText);
        });
    }
}

 

};"
		},
		{
			"isHide":false,
			"name":"EntityType",
			"value":"CompositionCustomer"
		},
		{
			"container":"Window",
			"isHide":true,
			"name":"Height",
			"value":"500"
		}
	],
	"sort":0
}
{"action":[{"code":"Save","name":"保存","property":[],"sort":0},{"code":"ShowDetail","name":"查看","property":[],"sort":1},{"code":"customDel","name":"删除","property":[{"isHide":false,"name":"OnClick","value":"OnClicka"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnClicka=function()\n{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('onclickas')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obj&nbsp;=&nbsp;this.Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;parentId&nbsp;=&nbsp;obj.DownForCode(&quot;parentId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tree=&nbsp;this.Top().Down(&quot;[controltype='Tree']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;if(Framework.IsNullOrEmpty(parentId)){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;一级树不能删除&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;}else\n&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params={}\n&nbsp;&nbsp;&nbsp;&nbsp;params.primaryId=obj.DownForCode(&quot;Id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;Project-DeleteCompositionCustomer.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;删除成功&quot;);&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tree.Load();\n&nbsp;&nbsp;},\n&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(&quot;失败&quot;);\n});\n\n\n}\n}\n\n\r\n \r\n};"}],"sort":2},{"code":"Export","container":"GridPanel","name":"导出","property":[],"sort":3}],"authority":[],"children":[{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"id","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"主键","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Id","sort":1},{"action":[],"authority":[],"children":[],"code":"companyRelationship","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"关系","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":10},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"Relationship"},{"isHide":false,"name":"EntityConfig","value":"[Enum(Relationship)]"}],"select":"CompanyRelationship[Enum(Relationship)]","sort":2},{"action":[],"authority":[],"children":[],"code":"isSubsidiaryReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"子公司是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":1},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsSubsidiaryReport","sort":3},{"action":[],"authority":[],"children":[],"code":"isReport","control":"CheckBox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否单独出具报告","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"IsReport","sort":4},{"action":[],"authority":[],"children":[],"code":"code","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目编号","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":200},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Code","sort":10},{"action":[],"authority":[],"children":[],"code":"showName","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"项目名称","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":300},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"ShowName","sort":11},{"action":[],"authority":[],"children":[],"code":"customerType","control":"TreeCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;客户类型&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(this.GetValueText())\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"queryUrl","value":"/risk-level/client-type/0"},{"isHide":false,"name":"textfield","value":"treeName"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;客户类型&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerTypeValue&nbsp;=&nbsp;model.DownForCode(&quot;CustomerTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;CustomerTypeValue.SetValue(this.GetValueText())\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;TotalAssets.GetSubmitValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n};\n\r\n \r\n};"}],"select":"CustomerType","sort":12},{"action":[],"authority":[],"children":[],"code":"customerTypeValue","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"客户类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"CustomerTypeValue","sort":13},{"action":[],"authority":[],"children":[],"code":"businessType","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessType","sort":14},{"action":[],"authority":[],"children":[],"code":"businessTypeValue","control":"Text","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":100},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"BusinessTypeValue","sort":15},{"action":[],"authority":[],"children":[],"code":"businessTypeText","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"业务类型","otherChildren":[],"property":[],"sort":16},{"action":[],"authority":[],"children":[],"code":"firstOrContinuous","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"是否首次承接","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"UndertakeCount"},{"isHide":false,"name":"EntityConfig","value":"[Enum(UndertakeCount)]"}],"select":"FirstOrContinuous[Enum(UndertakeCount)]","sort":17},{"action":[],"authority":[],"children":[],"code":"totalAssets","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n","name":"资产总额","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":18},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"TotalAssets"},{"isHide":false,"name":"EntityConfig","value":"[Enum(TotalAssets)]"},{"isHide":false,"name":"IsReadOnly","value":"true"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(newValue,&nbsp;oldValue)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;哦解决&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;me.Up()\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;businessType&nbsp;=&nbsp;model.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;model.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;model.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;model.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(newValue))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(newValue)&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(businessType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(TotalAssets.GetSubmitValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/&quot;&nbsp;+&nbsp;CustomerType.GetSubmitValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;businessType.GetValue()&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;newValue&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\r\n \r\n};"}],"select":"TotalAssets[Enum(TotalAssets)]","sort":18},{"action":[],"authority":[],"children":[],"code":"riskLevel","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"风险等级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":4},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"RiskLevel"},{"isHide":false,"name":"EntityConfig","value":"[Enum(RiskLevel)]"}],"select":"RiskLevel[Enum(RiskLevel)]","sort":19},{"action":[],"authority":[],"children":[],"code":"projectManagerId","control":"GridCombobox","dataPermission":[],"isReference":false,"javaScript":"this.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('onchange')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}","name":"项目经理","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(User|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"User"},{"isHide":false,"name":"Required","value":"true"},{"isHide":false,"name":"SchemaCode","value":"ProjectManagerSelecter"},{"isHide":false,"name":"IsReadOnly","value":"true"},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.OnChange&nbsp;=&nbsp;function&nbsp;(oldVal,&nbsp;newVal)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;console.log('onchange')\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;first&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='GridPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;panel&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='FormPanel']&quot;).First;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d&nbsp;=&nbsp;this.Up().Up().Down(&quot;[controltype='FormPanel']&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{}\n&nbsp;&nbsp;&nbsp;&nbsp;params.compostionId&nbsp;=&nbsp;this.Up().DownForCode(&quot;id&quot;).GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;params.userId&nbsp;=&nbsp;newVal.id;\n&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;CompositionMembers-SaveMember.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;panel.Load();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(result)&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}\r\n \r\n};"}],"select":"ProjectManagerId[Entity(User|Code(Code)#Name(Name))]","sort":20},{"action":[],"authority":[],"children":[],"code":"manuscriptTemplate","control":"Combobox","dataPermission":[],"isReference":false,"javaScript":"","name":"底稿模板","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":2},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EnumType","value":"ManuscriptTemplate"},{"isHide":false,"name":"EntityConfig","value":"[Enum(ManuscriptTemplate)]"},{"isHide":false,"name":"IsReadOnly","value":"true"}],"select":"ManuscriptTemplate[Enum(ManuscriptTemplate)]","sort":21},{"action":[],"authority":[],"children":[],"code":"timestamp","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"时间戳","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":8},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false}],"select":"Timestamp","sort":22},{"action":[],"authority":[],"children":[],"code":"parentId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"上级","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":false},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(CompositionCustomer|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"CompositionCustomer"}],"select":"ParentId[Entity(CompositionCustomer|Code(Code)#Name(Name))]","sort":23},{"action":[],"authority":[],"children":[],"code":"projectId","control":"Hidden","dataPermission":[],"isReference":false,"javaScript":"","name":"项目","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":16},{"isHide":false,"name":"Required","value":true},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"EntityConfig","value":"[Entity(Project|Code(Code)#Name(Name))]"},{"isHide":false,"name":"EntityCode","value":"Project"}],"select":"ProjectId[Entity(Project|Code(Code)#Name(Name))]","sort":24},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"code":"auditStart","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(开始)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"AuditStart","sort":8},{"action":[],"authority":[],"children":[],"code":"auditEnd","control":"Date","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间(结束)","otherChildren":[],"property":[{"isHide":false,"name":"Length","value":23},{"isHide":false,"name":"IsReadOnly","value":false},{"isHide":false,"name":"IsTransient","value":false},{"isHide":false,"name":"Required","value":"true"}],"select":"AuditEnd","sort":9}],"code":"datefw","control":"DateTimeGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"会计期间","otherChildren":[],"property":[],"sort":7}],"code":"columnGroup","control":"ColumnGroup","dataPermission":[],"isReference":false,"javaScript":"","name":"列集合","otherChildren":[],"property":[],"sort":0},{"action":[],"authority":[],"children":[{"action":[],"authority":[],"children":[],"dataPermission":[],"isReference":false,"otherChildren":[],"property":[{"isHide":true,"name":"referenceFormId","value":54665}],"sort":0}],"code":"fieldSet1","control":"FieldSet","dataPermission":[],"isReference":false,"javaScript":"","name":"项目组成员","otherChildren":[],"property":[],"sort":6},{"action":[],"authority":[],"children":[],"code":"uuid","control":"Hidden","dataPermission":[],"isReference":false,"name":"uuid","otherChildren":[],"property":[],"sort":1000}],"code":"compositionCustomerPageApproval","control":"FormPanel","dataPermission":[],"isReference":false,"javaScript":"this.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manger&nbsp;=&nbsp;this.DownForCode(&quot;ProjectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;west&nbsp;=&nbsp;model.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;valModel&nbsp;=&nbsp;west.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(valModel))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectCode&nbsp;=&nbsp;this.DownForCode(&quot;Code&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectName&nbsp;=&nbsp;this.DownForCode(&quot;ShowName&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;this.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;this.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstOrContinuous&nbsp;=&nbsp;this.DownForCode(&quot;FirstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;this.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;this.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ProjectManagerId&nbsp;=&nbsp;this.DownForCode(&quot;ProjectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;this.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valModel.parentId&nbsp;==&nbsp;null)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;this.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;).SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.DownForCode(&quot;projectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSubsidiaryReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;this.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/client-type-business/&quot;&nbsp;+&nbsp;BusinessType.GetValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.LoadData(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.customerType&nbsp;=&nbsp;CustomerType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.busnissType&nbsp;=&nbsp;BusinessType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/Project-getBusinessTypeName.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n}\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;this.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;this.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;this.DownForCode(&quot;BusinessTypeText&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.customerType&nbsp;=&nbsp;CustomerType.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.busnissType&nbsp;=&nbsp;BusinessType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/Project-getBusinessTypeName.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}","name":"组成部分卡片审批","otherChildren":[],"property":[{"isHide":false,"name":"BaseCode","value":"compositionCustomerPageApproval"},{"isHide":false,"name":"Name","value":"组成部分卡片审批"},{"isHide":false,"name":"IsReadOnly","value":true},{"isHide":false,"name":"Description"},{"isHide":false,"name":"FormId","value":54142},{"isHide":false,"name":"OrderBy"},{"isHide":false,"name":"IsSqlForm","value":false},{"isHide":false,"name":"JavaScript","value":"var registerJavaScript = function () {\r\n \r\nthis.BeforeLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;manger&nbsp;=&nbsp;this.DownForCode(&quot;ProjectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;model&nbsp;=&nbsp;this.Up().Up().Up();\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;west&nbsp;=&nbsp;model.DownForCode(&quot;compositionCustomer&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;valModel&nbsp;=&nbsp;west.GetSelected();\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNullOrEmpty(valModel))&nbsp;return&nbsp;false;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectCode&nbsp;=&nbsp;this.DownForCode(&quot;Code&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;projectName&nbsp;=&nbsp;this.DownForCode(&quot;ShowName&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;this.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;this.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;FirstOrContinuous&nbsp;=&nbsp;this.DownForCode(&quot;FirstOrContinuous&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;TotalAssets&nbsp;=&nbsp;this.DownForCode(&quot;TotalAssets&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;RiskLevel&nbsp;=&nbsp;this.DownForCode(&quot;RiskLevel&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ProjectManagerId&nbsp;=&nbsp;this.DownForCode(&quot;ProjectManagerId&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;this.DownForCode(&quot;BusinessTypeValue&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valModel.parentId&nbsp;==&nbsp;null)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;this.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;).SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.DownForCode(&quot;projectManagerId&quot;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manger.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isSubsidiaryReport&nbsp;=&nbsp;this.DownForCode(&quot;isSubsidiaryReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSubsidiaryReport.SetVisible(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;isReport&nbsp;=&nbsp;this.DownForCode(&quot;isReport&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isReport.SetVisible(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectCode.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;projectName.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstOrContinuous.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TotalAssets.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RiskLevel.SetReadOnly(true);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProjectManagerId.SetReadOnly(false);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/risk-level/client-type-business/&quot;&nbsp;+&nbsp;BusinessType.GetValue()&nbsp;+&nbsp;&quot;&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CustomerType.LoadData(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.customerType&nbsp;=&nbsp;CustomerType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.busnissType&nbsp;=&nbsp;BusinessType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/Project-getBusinessTypeName.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n}\n\nthis.AfterLoad&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;me&nbsp;=&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;CustomerType&nbsp;=&nbsp;this.DownForCode(&quot;CustomerType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessType&nbsp;=&nbsp;this.DownForCode(&quot;BusinessType&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;BusinessTypeText&nbsp;=&nbsp;this.DownForCode(&quot;BusinessTypeText&quot;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Framework.IsNotNullOrEmpty(CustomerType.GetSubmitValue())&nbsp;&&&nbsp;Framework.IsNotNullOrEmpty(BusinessType.GetValue()))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.customerType&nbsp;=&nbsp;CustomerType.GetSubmitValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.busnissType&nbsp;=&nbsp;BusinessType.GetValue();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.AjaxRequest(me,&nbsp;&quot;/Project-getBusinessTypeName.do&quot;,&nbsp;'get',&nbsp;params,&nbsp;true,&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BusinessTypeText.SetValue(result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;function&nbsp;(result)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Framework.Message(result.responseText);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\r\n \r\n};"},{"isHide":false,"name":"EntityType","value":"CompositionCustomer"},{"container":"Window","isHide":true,"name":"Height","value":"500"}],"sort":0}
2020-03-09 16:25:34